From 1cff05c4f8c1225180b87ff6223cdc8436ffa9c4 Mon Sep 17 00:00:00 2001
From: Andrew Charneski <acharneski@gmail.com>
Date: Wed, 20 Jan 2010 07:56:17 -0800
Subject: Code reintegrated, mostly works. Seems to be a bug where AI will not move after player moves

---
 pom.xml                                            |    1 +
 sawdust-art/build.xml                              |    4 +
 sawdust-art/pom.xml                                |  142 ++++
 sawdust-art/src/main/art/input/Thumbs.db           |  Bin 0 -> 11264 bytes
 sawdust-art/src/main/art/input/club.png            |  Bin 0 -> 16215 bytes
 sawdust-art/src/main/art/input/diamond.png         |  Bin 0 -> 34647 bytes
 sawdust-art/src/main/art/input/heart.png           |  Bin 0 -> 34165 bytes
 sawdust-art/src/main/art/input/spade.png           |  Bin 0 -> 12030 bytes
 sawdust-art/src/main/art/input/svg/blank.svg       |   77 ++
 sawdust-art/src/main/art/input/svg/club.svg        |  255 ++++++
 sawdust-art/src/main/art/input/svg/diamond.svg     |  199 +++++
 sawdust-art/src/main/art/input/svg/heart.svg       |  147 ++++
 sawdust-art/src/main/art/input/svg/spade.svg       |  161 ++++
 sawdust-art/src/main/art/manual/cards1/VB.png      |  Bin 0 -> 239 bytes
 sawdust-art/src/main/art/manual/cards1/VR.png      |  Bin 0 -> 238 bytes
 sawdust-art/src/main/art/manual/go1/black.png      |  Bin 0 -> 612 bytes
 sawdust-art/src/main/art/manual/go1/black.svg      |  157 ++++
 sawdust-art/src/main/art/manual/go1/board.png      |  Bin 0 -> 312 bytes
 sawdust-art/src/main/art/manual/go1/board.svg      |  141 ++++
 sawdust-art/src/main/art/manual/go1/highlight.png  |  Bin 0 -> 3322 bytes
 sawdust-art/src/main/art/manual/go1/highlight.svg  |  164 ++++
 sawdust-art/src/main/art/manual/go1/white.png      |  Bin 0 -> 782 bytes
 sawdust-art/src/main/art/manual/go1/white.svg      |  156 ++++
 sawdust-art/src/main/java/META-INF/MANIFEST.MF     |    3 +
 .../main/java/com/sawdust/gwt/ArtLibrary.gwt.xml   |    4 +
 .../main/java/com/sawdust/gwt/art/ArtManager.java  |   46 ++
 .../java/com/sawdust/gwt/art/GwtSawdustArt.java    |    9 +
 .../sawdust/gwt/art/generated/cards1/enumArt.java  |  527 ++++++++++++
 .../gwt/art/generated/cards1/singleton.java        |   16 +
 .../sawdust/gwt/art/generated/cards1/xface.java    |  110 +++
 .../gwt/art/generated/letters1/enumArt.java        |  527 ++++++++++++
 .../gwt/art/generated/letters1/singleton.java      |   16 +
 .../sawdust/gwt/art/generated/letters1/xface.java  |  110 +++
 .../main/java/com/sawdust/gwt/art/go1/enumArt.java |   61 ++
 .../java/com/sawdust/gwt/art/go1/singleton.java    |   21 +
 .../main/java/com/sawdust/gwt/art/go1/xface.java   |   19 +
 .../com/sawdust/util/art/ArtLibraryGenerator.java  |  124 +++
 .../main/java/com/sawdust/util/art/ArtToken.java   |   31 +
 .../main/java/com/sawdust/util/art/CardArt.java    |   91 +++
 .../java/com/sawdust/util/art/CardGenerator1.java  |  110 +++
 .../main/java/com/sawdust/util/art/LetterArt.java  |   45 +
 .../com/sawdust/util/art/LetterGenerator1.java     |   51 ++
 .../engine/controller/entities/GameSession.java    |    2 +
 .../java/com/sawdust/engine/model/LoadedDeck.java  |    1 +
 .../main/java/com/sawdust/engine/model/Pair.java   |   14 -
 .../main/java/com/sawdust/engine/view/Pair.java    |   14 +
 .../com/sawdust/engine/view/cards/CardDeck.java    |    2 +-
 .../gae/datastore/entities/GameSession.java        |    8 +
 .../com/sawdust/test/appengine/BlackjackTests.java |    1 -
 .../sawdust/test/appengine/DataStorePerfTest.java  |   34 +-
 .../java/com/sawdust/test/appengine/DummyGame.java |   30 +-
 .../test/java/com/sawdust/test/gae/Blackjack.java  |   75 ++
 .../test/java/com/sawdust/test/gae/GameTest.java   |   97 +++
 .../java/com/sawdust/test/gae/GenericPlayUtil.java |   91 +++
 .../com/sawdust/test/gae/Go_DuelAgent_Normal.java  |   63 ++
 .../java/com/sawdust/test/gae/LocalGaeTest.java    |   65 ++
 .../main/java/com/sawdust/games/go/GoAgent1.java   |    5 +
 .../main/java/com/sawdust/games/go/GoGameType.java |    2 +-
 .../com/sawdust/util/art/ArtLibraryGenerator.java  |  126 ---
 .../main/java/com/sawdust/util/art/ArtToken.java   |   31 -
 .../main/java/com/sawdust/util/art/CardArt.java    |   91 ---
 .../java/com/sawdust/util/art/CardGenerator1.java  |  110 ---
 .../main/java/com/sawdust/util/art/LetterArt.java  |   45 -
 .../com/sawdust/util/art/LetterGenerator1.java     |   51 --
 .../java/com/sawdust/test/ArtGeneratorTests.java   |   24 -
 .../com/sawdust/test/mock/MockGameSession.java     |    7 +
 sawdust-gwt/pom.xml                                |    5 +
 .../src/main/java/com/sawdust/GameClient.gwt.xml   |    5 +-
 .../src/main/java/com/sawdust/GameCreator.gwt.xml  |    9 +-
 .../com/sawdust/client/gwt/art/ArtManager.java     |  842 --------------------
 .../com/sawdust/client/gwt/art/CardBundle.java     |  171 ----
 .../java/com/sawdust/client/gwt/art/GoBundle.java  |   20 -
 .../com/sawdust/client/gwt/art/LetterBundle.java   |  165 ----
 .../sawdust/client/gwt/widgets/TokenWidget.java    |    2 +-
 sawdust-gwt/src/main/war/facebook.jsp              |    5 +-
 sawdust-gwt/src/main/war/game.jsp                  |    3 +-
 sawdust-gwt/src/main/war/game_mobile.jsp           |    3 +-
 sawdust-gwt/src/main/war/jsp/accountHeader.jsp     |    5 +-
 sawdust-gwt/src/main/war/jsp/account_info.jsp      |    3 +-
 sawdust-gwt/src/main/war/jsp/activityLog.jsp       |    5 +-
 sawdust-gwt/src/main/war/jsp/bankLog.jsp           |    5 +-
 sawdust-gwt/src/main/war/jsp/dashboard.jsp         |    5 +-
 sawdust-gwt/src/main/war/jsp/dataAdhoc.jsp         |    4 +-
 sawdust-gwt/src/main/war/jsp/dataCleanup.jsp       |    5 +-
 sawdust-gwt/src/main/war/jsp/gameBanner.jsp        |    4 +-
 sawdust-gwt/src/main/war/jsp/gameBanner_mobile.jsp |    4 +-
 sawdust-gwt/src/main/war/jsp/gameListing.jsp       |    3 +-
 sawdust-gwt/src/main/war/jsp/game_body.jsp         |    4 +-
 sawdust-gwt/src/main/war/jsp/game_body_mobile.jsp  |    6 +-
 sawdust-gwt/src/main/war/jsp/openGameListing.jsp   |    4 +-
 .../src/main/war/jsp/openGameListing_mobile.jsp    |    4 +-
 sawdust-gwt/src/main/war/jsp/play_body.jsp         |    3 +-
 sawdust-gwt/src/main/war/jsp/play_body_mobile.jsp  |    4 +-
 sawdust-gwt/src/main/war/jsp/play_header.jsp       |    2 +-
 sawdust-gwt/src/main/war/jsp/promotion.jsp         |    3 +-
 sawdust-gwt/src/main/war/jsp/sessionListing.jsp    |    4 +-
 sawdust-gwt/src/main/war/jsp/tutorial_body.jsp     |    4 +-
 sawdust-gwt/src/main/war/jsp/welcome.jsp           |    4 +-
 sawdust-gwt/src/main/war/play.jsp                  |    4 +-
 sawdust-gwt/src/main/war/quickPlay.jsp             |    5 +-
 sawdust-gwt/src/main/war/rules/Blackjack.jsp       |    3 +-
 sawdust-gwt/src/main/war/rules/Euchre.jsp          |    3 +-
 sawdust-gwt/src/main/war/rules/Poker.jsp           |    3 +-
 sawdust-gwt/src/main/war/tinySessionId.jsp         |    3 +-
 sawdust-gwt/src/main/war/tutorials.jsp             |    4 +-
 105 files changed, 4046 insertions(+), 1808 deletions(-)
 create mode 100755 sawdust-art/build.xml
 create mode 100755 sawdust-art/pom.xml
 create mode 100755 sawdust-art/src/main/art/input/Thumbs.db
 create mode 100755 sawdust-art/src/main/art/input/club.png
 create mode 100755 sawdust-art/src/main/art/input/diamond.png
 create mode 100755 sawdust-art/src/main/art/input/heart.png
 create mode 100755 sawdust-art/src/main/art/input/spade.png
 create mode 100755 sawdust-art/src/main/art/input/svg/blank.svg
 create mode 100755 sawdust-art/src/main/art/input/svg/club.svg
 create mode 100755 sawdust-art/src/main/art/input/svg/diamond.svg
 create mode 100755 sawdust-art/src/main/art/input/svg/heart.svg
 create mode 100755 sawdust-art/src/main/art/input/svg/spade.svg
 create mode 100755 sawdust-art/src/main/art/manual/cards1/VB.png
 create mode 100755 sawdust-art/src/main/art/manual/cards1/VR.png
 create mode 100755 sawdust-art/src/main/art/manual/go1/black.png
 create mode 100755 sawdust-art/src/main/art/manual/go1/black.svg
 create mode 100755 sawdust-art/src/main/art/manual/go1/board.png
 create mode 100755 sawdust-art/src/main/art/manual/go1/board.svg
 create mode 100755 sawdust-art/src/main/art/manual/go1/highlight.png
 create mode 100755 sawdust-art/src/main/art/manual/go1/highlight.svg
 create mode 100755 sawdust-art/src/main/art/manual/go1/white.png
 create mode 100755 sawdust-art/src/main/art/manual/go1/white.svg
 create mode 100755 sawdust-art/src/main/java/META-INF/MANIFEST.MF
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/ArtLibrary.gwt.xml
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/ArtManager.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/GwtSawdustArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/enumArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/singleton.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/xface.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/enumArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/singleton.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/xface.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/go1/enumArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/go1/singleton.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/gwt/art/go1/xface.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/ArtToken.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/CardArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/CardGenerator1.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/LetterArt.java
 create mode 100755 sawdust-art/src/main/java/com/sawdust/util/art/LetterGenerator1.java
 delete mode 100644 sawdust-core/src/main/java/com/sawdust/engine/model/Pair.java
 create mode 100644 sawdust-core/src/main/java/com/sawdust/engine/view/Pair.java
 create mode 100755 sawdust-gae/src/test/java/com/sawdust/test/gae/Blackjack.java
 create mode 100755 sawdust-gae/src/test/java/com/sawdust/test/gae/GameTest.java
 create mode 100755 sawdust-gae/src/test/java/com/sawdust/test/gae/GenericPlayUtil.java
 create mode 100755 sawdust-gae/src/test/java/com/sawdust/test/gae/Go_DuelAgent_Normal.java
 create mode 100755 sawdust-gae/src/test/java/com/sawdust/test/gae/LocalGaeTest.java
 delete mode 100755 sawdust-game-library/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
 delete mode 100755 sawdust-game-library/src/main/java/com/sawdust/util/art/ArtToken.java
 delete mode 100755 sawdust-game-library/src/main/java/com/sawdust/util/art/CardArt.java
 delete mode 100644 sawdust-game-library/src/main/java/com/sawdust/util/art/CardGenerator1.java
 delete mode 100755 sawdust-game-library/src/main/java/com/sawdust/util/art/LetterArt.java
 delete mode 100644 sawdust-game-library/src/main/java/com/sawdust/util/art/LetterGenerator1.java
 delete mode 100755 sawdust-game-library/src/test/java/com/sawdust/test/ArtGeneratorTests.java
 delete mode 100755 sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/ArtManager.java
 delete mode 100755 sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/CardBundle.java
 delete mode 100755 sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/GoBundle.java
 delete mode 100755 sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/LetterBundle.java

diff --git a/pom.xml b/pom.xml
index c92f6ec38e62ecd9a089db67163736fe26dc2518..f04eb62bb88dd72f67644cef431f8686b3abcfcf 100644
--- a/pom.xml
+++ b/pom.xml
@@ -69,6 +69,7 @@
 	</organization>
 	<modules>
         <module>sawdust-core</module>
+        <module>sawdust-art</module>
         <module>sawdust-game-library</module>
         <module>sawdust-gae</module>
         <module>sawdust-gwt</module>
diff --git a/sawdust-art/build.xml b/sawdust-art/build.xml
new file mode 100755
index 0000000000000000000000000000000000000000..e0011a7cf082a9bfc02c5615d1428d18271764c9
--- /dev/null
+++ b/sawdust-art/build.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8" ?>
+<project name="sawdust-game-library" basedir=".">
+	<import file="../build.xml"/>
+</project>
diff --git a/sawdust-art/pom.xml b/sawdust-art/pom.xml
new file mode 100755
index 0000000000000000000000000000000000000000..76f9868b30520caeaf4cda2abc1341ec798f6d05
--- /dev/null
+++ b/sawdust-art/pom.xml
@@ -0,0 +1,142 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<groupId>com.sawdust</groupId>
+	<artifactId>sawdust-art</artifactId>
+	<packaging>jar</packaging>
+	<version>0.0.1-SNAPSHOT</version>
+	<name>sawdust-art</name>
+	<description>Graphical assets and generators</description>
+	<parent>
+		<artifactId>sawdust-game-engine</artifactId>
+		<groupId>com.sawdust</groupId>
+		<version>0.0.1-SNAPSHOT</version>
+		<relativePath>../pom.xml</relativePath>
+	</parent>
+	<dependencies>
+		<dependency>
+			<groupId>junit</groupId>
+			<artifactId>junit</artifactId>
+			<version>4.3</version>
+			<scope>test</scope>
+		</dependency>
+		<dependency>
+			<groupId>com.sawdust</groupId>
+			<artifactId>sawdust-core</artifactId>
+			<version>0.0.1-SNAPSHOT</version>
+		</dependency>
+		<dependency>
+			<groupId>javax.media.jai</groupId>
+			<artifactId>jai_core</artifactId>
+			<version>1.1.2</version>
+		</dependency>
+		<dependency>
+			<groupId>javax.media.jai</groupId>
+			<artifactId>jai_codec</artifactId>
+			<version>1.1.2</version>
+		</dependency>
+		<dependency>
+			<groupId>com.google.gwt</groupId>
+			<artifactId>gwt-servlet</artifactId>
+			<version>${gwt.version}</version>
+		</dependency>
+	</dependencies>
+	<build>
+		<resources>
+            <resource>
+                <directory>src/main/art/manual</directory>
+                <filtering>true</filtering>
+                <includes>
+                    <include>**/*.png</include>
+                </includes>
+            </resource>
+	        <resource>
+	            <directory>src/main/java</directory>
+	            <filtering>true</filtering>
+	            <includes>
+	                <include>**/gwt/**</include>
+	                <include>**/*.gwt.xml</include>
+	            </includes>
+	        </resource>
+		</resources>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<version>2.0.2</version>
+				<configuration>
+					<source>1.6</source>
+					<target>1.6</target>
+				</configuration>
+			</plugin>
+			<plugin>
+				<artifactId>maven-antrun-plugin</artifactId>
+				<executions>
+					<execution>
+						<phase>process-classes</phase>
+						<configuration>
+							<tasks>
+								<property name="compile_classpath" refid="maven.compile.classpath" />
+								<java fork="true" classname="com.sawdust.util.art.CardGenerator1">
+									<classpath>
+										<pathelement path="${compile_classpath}" />
+										<fileset dir="${jai.home}">
+											<include name="**/*.jar" />
+										</fileset>
+									</classpath>
+									<arg value="${basedir}/src/main/art" />
+                                    <arg value="${basedir}/target/classes" />
+                                    <arg value="${basedir}/src/main/java" />
+								</java>
+								<java fork="true" classname="com.sawdust.util.art.LetterGenerator1">
+									<classpath>
+										<pathelement path="${compile_classpath}" />
+										<fileset dir="${jai.home}">
+											<include name="**/*.jar" />
+										</fileset>
+									</classpath>
+									<arg value="${basedir}/src/main/art" />
+									<arg value="${basedir}/target/classes" />
+                                    <arg value="${basedir}/src/main/java" />
+								</java>
+								<!-- 
+								 -->
+							</tasks>
+						</configuration>
+						<goals>
+							<goal>run</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.4.3</version>
+                <configuration>
+                    <includes>
+                    <!-- 
+                        Always bad:
+                        <include>**/AI_Normal_Dual.java</include>
+                        <include>**/GoAI.java</include>
+                        
+                        Sometimes fails:
+                        <include>**/RandomSuite.java</include>
+                     -->
+                        <include>**/BlackjackTests.java</include>
+                        <include>**/EuchreTests.java</include>
+                        <include>**/GenericPlayTest.java</include>
+                        <include>**/PokerTests.java</include>
+                    </includes>
+                </configuration>
+            </plugin>
+		</plugins>
+	</build>
+	<distributionManagement>
+		<site>
+			<id>site</id>
+			<name>Maven site</name>
+			<url>/Game-Library</url>
+		</site>
+	</distributionManagement>
+</project>
diff --git a/sawdust-art/src/main/art/input/Thumbs.db b/sawdust-art/src/main/art/input/Thumbs.db
new file mode 100755
index 0000000000000000000000000000000000000000..b7174cae8e43e6f11351685ed2e662521e505b9a
GIT binary patch
literal 11264
zcmeI22|ShEy1-wynas092$2kt2s`<ZB#Dek$}B@Nl^s$N8A1_#kttK`GGr$6&|oU_
zu=kdE+QPQ6?S0p-&pGFwbMCpFbMO7#-~HVl{_lFd`+4_T&%4%o*7L4MS0@`P?F~N~
z`YX|ZU=Wc+57GR^bqa7!=DV;$5G6PvLnM(%KQ2NLIQ=F6hn~O=Xe;PSh!a2spazip
zoEAU_pa(Dj7y(RxJpg6^3xEwk?t6Ana{O^l{`;5w-+2P(ArJ854GBZqkUJ>7pqrp4
ze_pu3h}pH4><j*pyz_dRX|B>i0Ru|!gnnqs|Dzjz;xj7Xfp+UBmp^gKca<3O00*M*
zqxhGPpneLnPbANspRHd6=t_|%7my=Aihud|uh_2zYODFfesbH%{YLJSe|G+p{RY_w
z?9P9(58(oE19$+u06qXeKmf28APCq8Ao~enQ11WZTojaIfCB(=fCNAia1bB`kOmwA
z$N&xlWC3yj^7tY5A^ABf0+awp0m^`502P2L;5a}HpbpRgzyT)!nt+o4a(jLQr8YnZ
zpbIz!&;y(X=mX9G3;<^VhJbSbBfxopF~9_H0bmL+1DFFW0G0qNz(s&H;1a+Fa2a3=
zAlH2rly(4nfCIo0-~@06xBy%M*8pw+cYp`L6L1~i1-Jq52KWGc0e%2~0C_gw0t5gM
zfZKpTz^<Pr`*iXcxC_PuX@G=+SWoNd=|B`<P+ulDkTeWwK`=^6@-Gl7@JmfcO-)5b
z%|J^_L&wCx#Kg$J$he1@opld08#5y#D>o|}2PYR77ZVE)FE=MIJ0}+>`AaBZ;2tV!
zdTMHV&OMBKIR9xOy@S~3$c=(gh(MHV6fialQWFH+2n980ExEye2n8i*BMmJbJp&_9
zC}jmR6b7TDf{|Mdv~PpYAu2X%_WkmjG#o~@v?A9z74F2Q(TSdXQ_pq28!L9?idP6d
z12+#ZAO8Vy3CV*}ib_Y7kEy6?{idy>drI%LvB?EfGjj{et9JGdj!w=lH@tm({rqp<
zx_dA5e%OQXh`9L2PZAQJCMBn5WM;k0&dJRyDlRE~TUK6C+0fY3+|t_C-qF+h`Ac8_
zz~B%XGx2qDYI<gNZsptR+B$9nzqv)WivoiEFzZj2{gqv8z%EKEDi{?l*)9r7KLCu4
zih9314ZEfht?hLV5rsQ+oF`+`-qh2J9yyQYy5iN%z%8bTKCnVI?Ym_^XIRL;WZ9n#
z`?Fm`5EG07bRLWiOu!xE^ax4lA3(tulItK0Dd;WQ96?x+ppYm69Uh+lF>~(HVg9$d
zFwTTwtviK;w}M)#ge2UkjYd$tb&$*ARdmXoOvGVq!CJC!2GXi@EZ-027AvF7W&Su?
z=bM1W`{;H2jQJa}IK8j&Cxp8E8a(il<L_c3`KwjWKEt3h=i*<VDkyE^@BMJKOS-H*
z)$Pk#$7_40OjaFD!TC*dCX*0)Dla<ZKpkGpY|;7^;!KxPQ0SOcZM@NEZvmgGp2BIj
z9`%=~0uGM$fzuO%Z-#>5x=!g4kmN4N)Szo5XlO!bCr*Pe%4LfBGeJA2*lL#F!Y$ny
zYWGt=d011U0#*|!MzGu|)leYV_c_+|tNG*&pIA8Uyk*~LIsDsk>fc1ObK5swuw;=S
zRLQ<QpS?SWSQ=AA<CNWGO}g3X>{~m;B6OLP)*BBJTvsub&u?H-A66Ts>t@Ucihf=%
zP&lYIP~gLu{rn2zs+YTjbL(E8LhE4Op~1Gb*%S0OFGvtpn*`C!sirQ{V&H780)>fL
zGci;>6O#)1B2;I#(B?$0&2KOEE?v8P%cn3y3!jZyW}Jz0+LCy%uFi8N!SJY+wZ<&U
z!iINb`_#zwR&`0(R#1A~??LzK-e$Mh+_n6`Qz;Z(YW0-u&TY7Hxof_&u4miV^>tp2
z^=-Fp-oSo-<wXzdhk4Vk!$}w!m4tD#o<?`pHXW_BIiuI7*6IawU^7yZ>A?&DI9Cv=
zxN<2iVEgoprQO1WVNuuq06Vy!tXSwkz*h=91D>YN4LqjYpf@cAE8F!$j#1Tu4j$E3
z=(d!D*F^Z@zI8osHvZD}_0EX=as=UQO;LHT`($ZVh`#I7r<spFWLfk2Q0>!vLFbhF
z>Q$kVba{cBaNN|CDg9o#G)G@`2o~qMJh>BISW8QS>fst<{;RE)CZ7K9&AG)pdZy$Y
zdfl2oAXYn0ZCAh^$+4W5gsm<`>`-|OB+pNT5ja-Sbuns;S-SAZlIsW$H<=7dx6>md
z?VWq8!^?tiiVAyE)>8a+i$Zr><hs0!7v-+Xu?Xy`TuOqe^e%hTr%ck0cIffxXl#lF
zir3N>6_tN3#FUnV=s!y`7xQe$dOolQG3z0Rh42Tm7p~_cD6qcS6CS*S&xE+~(P9zO
z^g3e2CA6MqYktSXd>M{U1#7JA&Qhc}{@J!9LImH8=pU2CGRNePmyK1+Z5o$t_v|-?
zha)Z0gVmm)6Bp934^fNX#{IS4scOUq*7;(!rasjzwM{+^q^YhVG6bL42`2=_$KY2<
zP)|<&Tppf<$jGu1a|VlC*mOfFRz|IlvyU~AAbV5lo+0kB9<~8)x{UtR)6lvs{=g<J
zP6A8A95ey$KAnX$`cK-F2uH;T@ve1p1$HKCzyfl5t+8JgkT}!Jf{QQR=7j~{U75Rm
zY#muA32U$A3+xc0t7RUS*|?_$%b4Yv-|(Q)xHeB*h_(nrx%N5z7;xl4_nk?EHa5FH
zQ1-I{u?j82VNol^v8cR-Fm5mL7D&=-_Axm}D~%ox)nLTlPnTVjrFTkJ!k$lce%*@+
zG04st$zztz+w}^dBn`s9i6M@WAmn_^4u$L5P@MuCRVG1{j0qE3-?>hLUdTYVkOVe@
zBhEkw$6G;y23f(I8d%lHOZ9ieK>2+o{Bkdy9BW?%QG*Y31;k9AAZ{Q>6+hxBa?A(K
z&PbjEI(8t+umzEY2hgzlcbeo#3`W+}q2(cKI)V7a7Q`Fgf1^ci1GG1ef~<7|)MX34
z$^PGIkrn<{cH@tIARhh|fBcF+{%&CPKOcXDY~jWYic*%A{1*${CY&8o92jELBa7w1
zD}z`vloAorfg3+x9J18ozvSjFYH=k+oGDI}DgWSJR!u7Ylpnre*C&w6O?@H*$BHdN
z8r#tSuFu%*3*zD;75Xf{x`vv-efaXE2nl){HEUxuSDE!P{H67r@&?<G`Ot5xo!6z^
zPEDNCmsbylk_le;@s)&$iJ)c!kCyYx(JiQl)>30<?(T`S+q4i&YIhbGT^TCB{$wXq
zyl?sHA|8H#IQVftA9A#DEHQl$F_x0JaQh1hqQc={*Gl1SeNe80WiGXBJ|R%6jCiWJ
zK^4n}+)B`}(mFEVbtMB8)?yVCBE+R=$fsSaFW}|oW97ej#Jo-S*`3ixp|Q7n1?O?f
zr@zQ3)hP5Dy)KVlYFQFXVSMn+OHTm0aA%25xce@0aaMf8DvZ}|d|)th!XR)daP9WK
z`LAnhZ(JfI3nws?5t1){AU!QKG>*$D!^>pA!_-v7%<5Q`cyCbYP8q0*w{4$k#2)9!
zkDa0CIH<$s72hpreo^L{n-dzl;`RIUINgUq^;&gKU#i#<V%Wt#lZC{lM0sU~-xYl?
zM=v(Q(-(zWu4C0Fi7hSHtt{WapE6WxZYuM;(bhX+eNkgp;z{%+UG;%DJ*5Vh4Tqyw
zlko)8{TQhm-ZMd_b~j}-1m5K_TE_KxR4r5|ykDO4KI*qU%=hv33V4nyI~k^3y4d(8
zGjpR_n>`~PBMM$U7I6W{Ln-;?K~U%P(O6$QdzHdvotua@@v`!So+WzjfPfsKYmZK6
z9~9a5fsTq_t~@L(_hWC4W0H)9*gI90)3JRl#S4U#&gGfFxo(?d#CD-l?Yfrdd}=Bf
z6_FzRoouZnjF6Oz{9)Q5TcHPI&(Ecvq~B7lZBQ_dczh|6Xxwb;dO2U8<-x;9%t9|%
zlX51%FHD=QxU!umi$uklP7It`mn*SpkLq5{gPX=i;a-6s<q2n7=k9H>vvhwp>5%{Z
zqFsrjDG!$wwdJu$wcj0iyu0xiUS-zWVMnaqJNr>ZQ8yPfxW&<%peL>m-l1Z<D2{Zp
zbKpgGr{X337QVg>F?<*(SlSR3>mN6C039D1jing%H(R$ZAke~LW9A<2G_DgX=6+$h
z?|ajBEMlik@bQ%S1yZ_tg`Jh(0+3Z{ozC3%j~YcRt=T1h2oVUl>Ao}_d%3Lij<TNG
zE6>;$OHGfUS60XOM71^l(GR~TEa<LyG?`Wy*UIi0K3y&4Rdk6ppiC;|VMSf!<p%Va
zNVe?Rv=m1ZyazO2<D!4+@N(5RtGcS(MR<|!0@4F(rDMp3k3NPB6n2rr+|>P$>}_xt
z=VXXdt}_$uf;6JjBev<9PfE#Kif$TmMHEC89MTavYaCy74FvHSk9Q;a{JdG;<gp~b
zY@6X$zpH*6_3G966=G3$m@@sS*riwAPXyKHlc$tY9nE|4lsa6JAFgnwPl037Zo_VW
zhKG0Ot(`>V<2qCtoW8%=hDio-!=8E3tl@C)ClmY3-mmY<jfqq2HrozkrHzqki?fPl
zRze>2oBg<>&h!SvrND)neVt#|*XnMdZ9;@-3N@4oCf#ZR-1r4|`pPfvqNv8JeEZy4
z9K1}GHV`=Ez^Jr-Nw?yA1J#DH<N5-p;^<^B*13CKpbN0q5QWX*pnCOM4rFK`ueJXa
zPOuXB@VR5~>qgz|)>!w99YS>-uKTw1+>o5NdZ<{+vgZWT^tPko@40oOjiWK?qlB^A
z1TgTbVjg@Se!IRf1lIxlW=hWz9ocU>WrbWI`%Q({YOI>V5h)Q+NJj_oyCFS2bY#D4
zo)*GI_PbI!dqJeYkn-o(Ll|lBZ(|4YmEHK^&9D87U;7vT(Z<aGeEjhD_A#(FL#w#p
zO8f!TGid{=rZKtxuK{kyK2-G#vci<!%dSu{y<iR<rI=7sh`V<&t4P&zz@@wc+t?MO
zIMt(H<yd26^GF_XV&!FgeqpKG1PS7NS&p3Ad24;iSqpBH%zc$ZcANU>L@;$=FtI(g
z<g?8_g0f%s+$?oW)Y|0?qtdVkOQP=VbF625<*B&7W>BgK=zUFlnEk+Aeq@`81l=vx
z5X@r0r&ye{yd+bS>gZj&6LUMgnh{sL^D-SzkFGL+pE@O5?eXe9zt1Z|s|P=J!x*~p
zMh}vu9=P*vM0a|vj#bS$-(|7jBAx^_%N8EltaE#4mMo0ypA0qsEuZ+#pd58q8)2<>
z+$aJ4$kW%c$t2rm&wE~7{q~Y)3$Ieg-)!w@`^zqbZJ)44xM2+zUshkS;dNp^@HXAn
zI@~Lo{{EyHUMuvn?ui-H^@xqU`N+pTk9{3mF`i#MeWt^Z`z-29`W-?dB=c0j;RR*g
zF}Qn_yPGa9Hlgo4B1*Io7i*O^!_@QXo7~nyWY9b5wZK|Fu!$5&IGWr+f*MoVUtwfi
zC!-k6?1kn&R|HrXzV?e#xNUzL)1qUXc7S8)m;{#=Z7Mnsqajc_GszvlJ)|N3MM<z?
zDhqGF60wbHZCa#lsq~LC?X@4g>B=^>^bso&CfI(CFKGBTrBCz5Pewm_4i#ozx%v_D
zT&41car6u^^OJK=t8JdGJi|(IF$scSs9aU|z<9JsFGrFfj?!iRIm%Pd&L`SGf0g}A
zU$HG@ukU_62NL8q^4aoIM%CW_$Fr8PPr{T&W{MMrKXQrB8GN#O-JaX?4xNjZo9hlK
z0$*uXwW?9H6S`hevOJ_CZ65wjDTrmX+4F9i+<RC{>ujwi34$TJxA0eq^dGTfu8X=&
zLF`BoX(v%t=C}{=J_x-uxo@~fvVJ{$e(BcMhrRX;Z0F$#_+c(BzEq40nkbMpH^G^T
zd1|E1HH0{3q|FJL3PlkFG6`DPXe7G8_wyxZ{;cAmkp}+`xfaa@-E+Fa!2za|oHRoj
zD_Rpg4LgpgjTj#f8rQ0<syF)=k*Cof1-z+JK3l<B6y0CKULxX6de6Mlk;ZA^s&|r6
zJ1?qfkS`y&Rl8=;rk<*bpR`cW2ykX0tUiK{5DsxwT_&Czbt-PYal_5eSte@dRi}rK
zqi2<USrYR;Wx)r+F~m~DOXWQa5+8*^Q+o-bsjcva+m=;3J4(onM7_Yc)&AU;*;~%x
z!Ogd(>pMe-I$LD-&1x`pm1+AR5byK5Dy$f_ML#~Tc_%Enw2;xixAf&hwSLpSx4v=X
zHlt_W;@<ksS6YStjuzD%i6=_jvB@7Vl33`cUD!k&b^A@*XTrcvY^!+$@yd=RZs-UJ
zQk!V!BZ?my#WHaV40k5mFfbqPoOoobQ4khXms3KVo0sjrIp4LuOodn0!{0;;iZ)tu
z<qbOXTNhalpR9@1Q84tnDVCxqmQq@#&9&~hN`uzsJV&vM%|7DLcv0lo5e0${_H2sd
zihA{Bm!S)lgrQdqa)Pu0_XOd!86M}#w;3WnWs06Z%s%)W&*UpA)6~clns^AaRM);?
z=nxYVbR}l+tOpHmt*HO7p=%JwMIAG}o<g3f9+d4}(dgbbRT6al>{wR*f|O+X^J6^`
z_e>x76MRLFG<EVsBr1MgB0=rG`gUMW7O<%8MoNFL{Jx~`uHPFpzuy1<H}VhUoY{Xx
z$oWt54iWkP27WgGc?IagK)gm4EwEGM4Y&q&pMLC4{kZ<KN08n5r}MucX9VT_Yz04|
zN49%cenS1fU1hg!a{14G`LF!bpI<WmPA-ao1`$JIQ2ohNbfj`BLoNTDm70~pwLYJG
zv*|M@;h$R?Gn;%wmtd_Q0?)B@&q=R_5$Ur@5cM99@UB6GG(IucedXFI(eBdx#A)Lb
z$L^b|J3yYT%Q3jHk6Y>|s5y=P0<&adw~e48e6SVGT{BVObGOl!d)W2FKtNRjM$&Bb
zS?&UbdJb&56J)Cv>sS`rQMTw*ri-l-O}Bk%xCi#v6}x@Xtgzi#N~4(5ROg|^77~fm
zCN<^N)hYV<RpI;=*-7u!qFWDrFa((|v3~s(8_fN>m1h|4vI$v^F{P#A{ELd;DkNN(
zAM!J|<%hyvQ&y-#DJ@&mXKKo-i&ONis%~<dJBCJ7yJt&v=n98WP?;?y5;$UTs4!eI
zR+k_`l&p+~hx2p77F8NZkh4`Jg;&OQV=&53c<mZXgUh@IC&93v$VAZWR<lPxY$@vV
zeioX-LpyoBJLCE&pWgZ7Ax^L@M0#~U&Ido89@t$+=glJMWGAM2&%B~UrlR1mS-7o-
zk9%0T@CNeqANxq;xK9X<Diz}KST_tOvg19Nko)2@XD3Wk<U9{lBqedij=M+*t#{|+
znCrxVVk*tDTeS_UGaQ$&DE`dP!CQaU#7<lBTF*(VUazV<B<SJ{Y?VJkx=)Q|`#An?
z^EfO}7;zy^q8M8i8aKwfB<NpVnJ~p$ow?3X#C>&mQg8;=K7%x0X<b;xu+S0q;Dc67
zkEN_Oj7jQ0uq)Tbe43L^O8=JHrO?7>81&Q^De;1(#{(}?*F3)?i}8CHC}1Gko;lY?
zYgQJSnjrnug6)A|Sq2CO`<0LbQiMlf^c^G!)Ksp7Mb=7;4wu|=%X-><$lmtOp&o^H
zc^m7z2P`|@$iA&VB^RX=@k!X;#vmR7Tb{pubF!V~+t6Iy$xaX1edx#07apVT?+ua8
z0Vy*T?@qi(P~$Tj9+}1I=xWUX^m?Ly58`RYlXw-n-ssVAI+mUqu#3rsvSA@8fOh!%
z_cv<r_AIVhvlu=+dw=NDpl>?MB4bcfoR^*o7*gW3ZOCAdWP1|?QY{RDpKxOoRypIB
zRxS`^aVOqYTAsj|K8|kuVE*{l<eLox$TtXUXhS(8!~sX8>|?-ohObrKcGdbU^4Yec
zxWc+^VsS(0fiNmWP7?~*bJG{hDJnz!4Ij)@P4P<qgG1FCJ<F<w@tkpajt97J48J}=
zzqMWfGGW;*>PMP`ifcN9E$0;btEGdE>^yqSjEk>$Vh<}{<-efu^x_WMCh#1sEVdJ!
zeV@qcFRG7Cytmd?@|@8i=6%SR#_hqUDHcz^CaA@^=KMu!h8)01KUv{vh@tYYJFj}b
z3bhEc`pkDypg>nY1am&)#n{|g+Lx|*>A@;C%mhiS?meabIZl_DyA%yHO<q*?mXym(
zGTe%qd4bw;sLb2l29<ol@*iz%{G=myRmOb;opWghE~q3>$L-JUucnM?FWTV#R9;%;
sVH{K5+MiY+ix=G_L6K+w$QijVNkK#(qHth+-QK@kJAR%2|9b-e28m7tqyPW_

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/input/club.png b/sawdust-art/src/main/art/input/club.png
new file mode 100755
index 0000000000000000000000000000000000000000..01a6b379132476527a9f7734456e412f575d2113
GIT binary patch
literal 16215
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
b5AJQFZ{Eo_Edz$&xr`0(-Kx9!_|^Xd8ku-h

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/input/diamond.png b/sawdust-art/src/main/art/input/diamond.png
new file mode 100755
index 0000000000000000000000000000000000000000..ca1aad03894cfb3e7cf00d976aaf73da8ce8af0a
GIT binary patch
literal 34647
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

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/input/heart.png b/sawdust-art/src/main/art/input/heart.png
new file mode 100755
index 0000000000000000000000000000000000000000..9733daa8feadc210550746e9bed701b4c5e7da3a
GIT binary patch
literal 34165
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

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/input/spade.png b/sawdust-art/src/main/art/input/spade.png
new file mode 100755
index 0000000000000000000000000000000000000000..9afa2357d7a09a0410126239c493b55bf2fe2a49
GIT binary patch
literal 12030
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
BjwS#A

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/input/svg/blank.svg b/sawdust-art/src/main/art/input/svg/blank.svg
new file mode 100755
index 0000000000000000000000000000000000000000..5c42ffc2b541804c4075f1bd986329569564080b
--- /dev/null
+++ b/sawdust-art/src/main/art/input/svg/blank.svg
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="500"
+   height="500"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="New document 1">
+  <defs
+     id="defs4">
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective10" />
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="375"
+     inkscape:cy="184.23334"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="true"
+     showborder="true"
+     borderlayer="false"
+     inkscape:showpageshadow="true"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1">
+    <inkscape:grid
+       type="xygrid"
+       id="grid2826"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true"
+       dotted="true"
+       spacingx="10px"
+       spacingy="10px" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-552.36218)" />
+</svg>
diff --git a/sawdust-art/src/main/art/input/svg/club.svg b/sawdust-art/src/main/art/input/svg/club.svg
new file mode 100755
index 0000000000000000000000000000000000000000..f34f779cdc5613da9b5638c140c4a989937b1171
--- /dev/null
+++ b/sawdust-art/src/main/art/input/svg/club.svg
@@ -0,0 +1,255 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="500"
+   height="500"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="club.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\input\club.png"
+   inkscape:export-xdpi="90"
+   inkscape:export-ydpi="90">
+  <defs
+     id="defs4">
+    <linearGradient
+       id="linearGradient3814">
+      <stop
+         style="stop-color:#870000;stop-opacity:1;"
+         offset="0"
+         id="stop3816" />
+      <stop
+         style="stop-color:#f8001d;stop-opacity:0.84070796;"
+         offset="1"
+         id="stop3818" />
+    </linearGradient>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective10" />
+    <inkscape:perspective
+       id="perspective3919"
+       inkscape:persp3d-origin="0.5 : 0.33333333 : 1"
+       inkscape:vp_z="1 : 0.5 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_x="0 : 0.5 : 1"
+       sodipodi:type="inkscape:persp3d" />
+    <inkscape:perspective
+       id="perspective3919-2"
+       inkscape:persp3d-origin="0.5 : 0.33333333 : 1"
+       inkscape:vp_z="1 : 0.5 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_x="0 : 0.5 : 1"
+       sodipodi:type="inkscape:persp3d" />
+    <inkscape:perspective
+       id="perspective3950"
+       inkscape:persp3d-origin="0.5 : 0.33333333 : 1"
+       inkscape:vp_z="1 : 0.5 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_x="0 : 0.5 : 1"
+       sodipodi:type="inkscape:persp3d" />
+    <inkscape:perspective
+       id="perspective3972"
+       inkscape:persp3d-origin="0.5 : 0.33333333 : 1"
+       inkscape:vp_z="1 : 0.5 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_x="0 : 0.5 : 1"
+       sodipodi:type="inkscape:persp3d" />
+    <inkscape:perspective
+       id="perspective3994"
+       inkscape:persp3d-origin="0.5 : 0.33333333 : 1"
+       inkscape:vp_z="1 : 0.5 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_x="0 : 0.5 : 1"
+       sodipodi:type="inkscape:persp3d" />
+    <filter
+       inkscape:collect="always"
+       id="filter4008">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.79"
+         id="feGaussianBlur4010" />
+    </filter>
+    <filter
+       inkscape:collect="always"
+       id="filter4012">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.11875"
+         id="feGaussianBlur4014" />
+    </filter>
+    <filter
+       inkscape:collect="always"
+       id="filter4016">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.11875"
+         id="feGaussianBlur4018" />
+    </filter>
+    <filter
+       inkscape:collect="always"
+       id="filter4020">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.11875"
+         id="feGaussianBlur4022" />
+    </filter>
+    <filter
+       inkscape:collect="always"
+       id="filter4024">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.9888889"
+         id="feGaussianBlur4026" />
+    </filter>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="246.96503"
+     inkscape:cy="287.44194"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="true"
+     showborder="true"
+     borderlayer="false"
+     inkscape:showpageshadow="true"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <inkscape:grid
+       type="xygrid"
+       id="grid2826"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true"
+       dotted="true"
+       spacingx="10px"
+       spacingy="10px" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="200,250"
+       id="guide2828" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="250,250"
+       id="guide2830" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="140,250"
+       id="guide2832" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="360,250"
+       id="guide2840" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="40,350"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-140,130"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-160,300"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="20,80"
+       id="guide3892" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="220,80"
+       id="guide3896" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="280,80"
+       id="guide3898" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-552.36218)">
+    <path
+       style="fill:#000000;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.81395346000000002;fill-opacity:1;filter:url(#filter4008)"
+       d="m 240,250 0,120 c 0,40 -20,50 -20,50 l 60,0 c 0,0 -20,-10 -20,-50 l 0,-120 -20,0 z"
+       transform="translate(0,552.36218)"
+       id="path3900"
+       sodipodi:nodetypes="ccccccc" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:0.81395347;stroke-dasharray:none;filter:url(#filter4012)"
+       id="path3907-3"
+       sodipodi:cx="200"
+       sodipodi:cy="200"
+       sodipodi:rx="50"
+       sodipodi:ry="50"
+       d="m 250,200 a 50,50 0 1 1 -100,0 50,50 0 1 1 100,0 z"
+       transform="matrix(1.3333333,0,0,1.2643357,66.666667,576.27826)" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:0.81395347;stroke-dasharray:none;filter:url(#filter4016)"
+       id="path3907-3-1"
+       sodipodi:cx="200"
+       sodipodi:cy="200"
+       sodipodi:rx="50"
+       sodipodi:ry="50"
+       d="m 250,200 a 50,50 0 1 1 -100,0 50,50 0 1 1 100,0 z"
+       transform="matrix(1.3333333,0,0,1.2643357,-100,576.27826)" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:0.81395347;stroke-dasharray:none;filter:url(#filter4020)"
+       id="path3907-3-6"
+       sodipodi:cx="200"
+       sodipodi:cy="200"
+       sodipodi:rx="50"
+       sodipodi:ry="50"
+       d="m 250,200 a 50,50 0 1 1 -100,0 50,50 0 1 1 100,0 z"
+       transform="matrix(1.3333333,0,0,1.2643357,-16.666667,476.71183)" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:0.81395347;stroke-dasharray:none;filter:url(#filter4024)"
+       id="path3907-3-8"
+       sodipodi:cx="200"
+       sodipodi:cy="200"
+       sodipodi:rx="50"
+       sodipodi:ry="50"
+       d="m 250,200 a 50,50 0 1 1 -100,0 50,50 0 1 1 100,0 z"
+       transform="matrix(0.75,0,0,0.71118881,100,671.10344)" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/input/svg/diamond.svg b/sawdust-art/src/main/art/input/svg/diamond.svg
new file mode 100755
index 0000000000000000000000000000000000000000..4e202955ccd8346976ec9e77c33f364de4f32c47
--- /dev/null
+++ b/sawdust-art/src/main/art/input/svg/diamond.svg
@@ -0,0 +1,199 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="500"
+   height="500"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="diamond.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\input\svg\diamond.png"
+   inkscape:export-xdpi="90"
+   inkscape:export-ydpi="90">
+  <defs
+     id="defs4">
+    <linearGradient
+       id="linearGradient3814">
+      <stop
+         style="stop-color:#870000;stop-opacity:1;"
+         offset="0"
+         id="stop3816" />
+      <stop
+         style="stop-color:#f8001d;stop-opacity:0.84070796;"
+         offset="1"
+         id="stop3818" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       id="linearGradient3806">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop3808" />
+      <stop
+         style="stop-color:#000000;stop-opacity:0;"
+         offset="1"
+         id="stop3810" />
+    </linearGradient>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective10" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3806"
+       id="linearGradient3812"
+       x1="116.09135"
+       y1="249.52026"
+       x2="383.90865"
+       y2="249.52026"
+       gradientUnits="userSpaceOnUse" />
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3814"
+       id="radialGradient3826"
+       cx="250"
+       cy="249.52026"
+       fx="250"
+       fy="249.52026"
+       r="111.40865"
+       gradientTransform="matrix(1,0,0,1.0838153,0,-20.913609)"
+       gradientUnits="userSpaceOnUse" />
+    <filter
+       inkscape:collect="always"
+       id="filter3884">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.1357752"
+         id="feGaussianBlur3886" />
+    </filter>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3814"
+       id="radialGradient3617"
+       cx="250"
+       cy="802.36218"
+       fx="250"
+       fy="802.36218"
+       r="110.5"
+       gradientTransform="matrix(1,0,0,1.5429864,0,-435.67177)"
+       gradientUnits="userSpaceOnUse" />
+    <filter
+       inkscape:collect="always"
+       id="filter3639">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.4"
+         id="feGaussianBlur3641" />
+    </filter>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1"
+     inkscape:cx="231.94749"
+     inkscape:cy="261.01679"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="true"
+     showborder="true"
+     borderlayer="false"
+     inkscape:showpageshadow="true"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <inkscape:grid
+       type="xygrid"
+       id="grid2826"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true"
+       dotted="true"
+       spacingx="10px"
+       spacingy="10px" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="250,250"
+       id="guide2828" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="250,250"
+       id="guide2830" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="140,250"
+       id="guide2832" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="360,250"
+       id="guide2840" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="250,200"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="70,80"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="130,420"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="250,300"
+       id="guide2833" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="200,250"
+       id="guide2835" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="300,390"
+       id="guide2837" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-552.36218)">
+    <path
+       style="fill:url(#radialGradient3617);stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:round;stroke-opacity:1;fill-opacity:1;filter:url(#filter3639);marker-start:none;stroke-miterlimit:4;stroke-dasharray:none"
+       d="m 250,632.36218 c -50,120 -110,170 -110,170 0,0 60,50 110,170 50,-120 110,-170 110,-170 0,0 -60,-50 -110,-170 z"
+       id="path2848"
+       sodipodi:nodetypes="ccccc" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/input/svg/heart.svg b/sawdust-art/src/main/art/input/svg/heart.svg
new file mode 100755
index 0000000000000000000000000000000000000000..7ae27dc6d78ad69d3cbde2b6ed1cdc6ed5e4e64f
--- /dev/null
+++ b/sawdust-art/src/main/art/input/svg/heart.svg
@@ -0,0 +1,147 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="500"
+   height="500"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="heart.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\input\svg\heart.png"
+   inkscape:export-xdpi="90"
+   inkscape:export-ydpi="90">
+  <defs
+     id="defs4">
+    <linearGradient
+       id="linearGradient3814">
+      <stop
+         style="stop-color:#870000;stop-opacity:1;"
+         offset="0"
+         id="stop3816" />
+      <stop
+         style="stop-color:#f8001d;stop-opacity:0.84070796;"
+         offset="1"
+         id="stop3818" />
+    </linearGradient>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective10" />
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3814"
+       id="radialGradient3826"
+       cx="250"
+       cy="249.52026"
+       fx="250"
+       fy="249.52026"
+       r="111.40865"
+       gradientTransform="matrix(1,0,0,1.0838153,0,-20.913609)"
+       gradientUnits="userSpaceOnUse" />
+    <filter
+       inkscape:collect="always"
+       id="filter3884">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.1357752"
+         id="feGaussianBlur3886" />
+    </filter>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1.4142136"
+     inkscape:cx="469.75977"
+     inkscape:cy="241.09513"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="true"
+     showborder="true"
+     borderlayer="false"
+     inkscape:showpageshadow="true"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <inkscape:grid
+       type="xygrid"
+       id="grid2826"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true"
+       dotted="true"
+       spacingx="10px"
+       spacingy="10px" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="250,250"
+       id="guide2828" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="250,250"
+       id="guide2830" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="140,250"
+       id="guide2832" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="360,250"
+       id="guide2840" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="40,350"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-140,130"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-160,300"
+       id="guide2846" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-552.36218)">
+    <path
+       style="fill:url(#radialGradient3826);stroke-width:5;stroke-miterlimit:4;stroke-dasharray:none;marker-start:none;stroke:#000000;stroke-opacity:1;fill-opacity:1;stroke-linejoin:round;filter:url(#filter3884)"
+       d="m 238.6949,355.42268 c -52.80769,-60.8946 -87.84526,-113.42787 -95.73043,-143.53256 -2.34645,-8.95851 -2.46127,-15.02474 -0.4967,-26.24247 3.19162,-18.22414 10.45955,-33.7787 20.53113,-43.94 8.64061,-8.71758 12.36144,-10.44293 22.5011,-10.43375 7.22972,0.007 8.62359,0.34354 14.47644,3.5 13.91543,7.50463 30.03844,27.76524 43.16536,54.24276 3.47663,7.0125 6.56282,12.75 6.8582,12.75 0.29538,0 3.38157,-5.7375 6.8582,-12.75 13.12692,-26.47752 29.24993,-46.73813 43.16536,-54.24276 5.85285,-3.15646 7.24672,-3.49346 14.47644,-3.5 10.13966,-0.009 13.86049,1.71617 22.5011,10.43375 10.07158,10.1613 17.33951,25.71586 20.53113,43.94 1.96457,11.21773 1.84975,17.28396 -0.4967,26.24247 -5.47316,20.89593 -22.74654,50.68203 -51.83072,89.37654 -17.24503,22.94334 -53.40349,66.5 -55.20481,66.5 -0.33024,0 -5.41753,-5.55479 -11.3051,-12.34398 z"
+       id="path2850"
+       transform="translate(0,552.36218)" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/input/svg/spade.svg b/sawdust-art/src/main/art/input/svg/spade.svg
new file mode 100755
index 0000000000000000000000000000000000000000..180d023511da0c07d2b996e6ac5e0da09195a286
--- /dev/null
+++ b/sawdust-art/src/main/art/input/svg/spade.svg
@@ -0,0 +1,161 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="500"
+   height="500"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="spade.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\input\svg\spade.png"
+   inkscape:export-xdpi="90"
+   inkscape:export-ydpi="90">
+  <defs
+     id="defs4">
+    <linearGradient
+       id="linearGradient3814">
+      <stop
+         style="stop-color:#870000;stop-opacity:1;"
+         offset="0"
+         id="stop3816" />
+      <stop
+         style="stop-color:#f8001d;stop-opacity:0.84070796;"
+         offset="1"
+         id="stop3818" />
+    </linearGradient>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective10" />
+    <filter
+       inkscape:collect="always"
+       id="filter3884">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.1357752"
+         id="feGaussianBlur3886" />
+    </filter>
+    <filter
+       inkscape:collect="always"
+       id="filter3903">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="0.575"
+         id="feGaussianBlur3905" />
+    </filter>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="1.4142136"
+     inkscape:cx="50.509073"
+     inkscape:cy="245.21931"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="true"
+     showborder="true"
+     borderlayer="false"
+     inkscape:showpageshadow="true"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <inkscape:grid
+       type="xygrid"
+       id="grid2826"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true"
+       dotted="true"
+       spacingx="10px"
+       spacingy="10px" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="250,250"
+       id="guide2828" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="250,250"
+       id="guide2830" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="140,250"
+       id="guide2832" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="360,250"
+       id="guide2840" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="40,350"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-140,130"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-160,300"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="20,80"
+       id="guide3892" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="220,80"
+       id="guide3896" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="280,80"
+       id="guide3898" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-552.36218)">
+    <path
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:5;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker-start:none;filter:url(#filter3884)"
+       d="m 238.6949,355.42268 c -52.80769,-60.8946 -87.84526,-113.42787 -95.73043,-143.53256 -2.34645,-8.95851 -2.46127,-15.02474 -0.4967,-26.24247 3.19162,-18.22414 10.45955,-33.7787 20.53113,-43.94 8.64061,-8.71758 12.36144,-10.44293 22.5011,-10.43375 7.22972,0.007 8.62359,0.34354 14.47644,3.5 13.91543,7.50463 30.03844,27.76524 43.16536,54.24276 3.47663,7.0125 6.56282,12.75 6.8582,12.75 0.29538,0 3.38157,-5.7375 6.8582,-12.75 13.12692,-26.47752 29.24993,-46.73813 43.16536,-54.24276 5.85285,-3.15646 7.24672,-3.49346 14.47644,-3.5 10.13966,-0.009 13.86049,1.71617 22.5011,10.43375 10.07158,10.1613 17.33951,25.71586 20.53113,43.94 1.96457,11.21773 1.84975,17.28396 -0.4967,26.24247 -5.47316,20.89593 -22.74654,50.68203 -51.83072,89.37654 -17.24503,22.94334 -53.40349,66.5 -55.20481,66.5 -0.33024,0 -5.41753,-5.55479 -11.3051,-12.34398 z"
+       id="path2850"
+       transform="matrix(-1.0008161,0,0,-0.92768812,500.20402,1024.5206)" />
+    <path
+       style="fill:#000000;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:0.81395346000000002;fill-opacity:1;filter:url(#filter3903)"
+       d="m 240,250 0,120 c 0,40 -20,50 -20,50 l 60,0 c 0,0 -20,-10 -20,-50 l 0,-120 -20,0 z"
+       transform="translate(0,552.36218)"
+       id="path3900"
+       sodipodi:nodetypes="ccccccc" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/manual/cards1/VB.png b/sawdust-art/src/main/art/manual/cards1/VB.png
new file mode 100755
index 0000000000000000000000000000000000000000..c116591329250b88e3e159942e2d5b7fbd2446b5
GIT binary patch
literal 239
zcmeAS@N?(olHy`uVBq!ia0vp^?m(Qt!VDz$ninksQU(D&A+A80fuR8e8yf!q{}1Nk
zBjz49&jiYI7I;J!Gca(Kf-s|(>fOIU!BkHd$B>FSZ>MkMJYc}X!g`XajpspV%hvxs
znM|2UFIhF;-<4ah{nu>mnJvnzbT)5pacXm$x0-S3_CJj_+Eoj0*u6J>+nw~FMcB{c
tA&i*s$D~sG|Fg-0{bCbLc1(F$#@tr6=U>G-%da3;db;|#taD0e0ssN~O0)m~

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/cards1/VR.png b/sawdust-art/src/main/art/manual/cards1/VR.png
new file mode 100755
index 0000000000000000000000000000000000000000..f4ef2b904f06e7037408bae0caed9f4e4116d1b0
GIT binary patch
literal 238
zcmeAS@N?(olHy`uVBq!ia0vp^?m(Qt!VDz$ninksQU(D&A+A80p@E^Hq2WIR!~g$4
zf&h5^wf`$n31@*vWHAE+S1AZHda2(13lvQ8ba4!+nDch}M&1Sk9v0mr3^!GM8utG8
zG4U`tQs=Gt{_?zg;m>j-W+u9a>^yr;h)Z%-<vO-0_dbb#TJxeg>F1v7TlBg*h5alZ
tw!nzLR-6;Q{5^lUp-fjHvq1CmTgG_h)48wnzug77)6><@Wt~$(696kXO;!K^

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/go1/black.png b/sawdust-art/src/main/art/manual/go1/black.png
new file mode 100755
index 0000000000000000000000000000000000000000..a65a58ec428e18c861e81e9f2adf52c0d798c7ca
GIT binary patch
literal 612
zcmV-q0-ODbP)<h;3K|Lk000e1NJLTq001%o001%w1^@s69zTe&00004b3#c}2nYxW
zd<bNS00009a7bBm0002q0002q0p03@Y5)KL8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H10pUqRK~!jg?U}u9!Y~v@kE<?BpgaIbbYNkDH4?ADTkueQ6V^%{
zffa@hWJLloG2RX~5>1uZNt|Ce(p?}V-@&nB-zX8G3%u1Gz!xu(rtuPK8l4e&FXN<2
zsSjWXjDU&x_y8P%NJM_TU(?rfL@BiZR=^AhfIiTR9d-k*z!}&9pCa<*C4h(&Dj)<l
zzy*+ubuqsU3+E^x5CCi7ltUn1Cv&c#QW0PZ>^%s?YY$8-5doG!RD#64B4Amnh#848
zB_3rmjZD@#QO50*cAGiRnJgmf3MKBfcFpJXWLHXsz})3n&&<uW?KqCchU!P-UK=kX
zVxHJzr+=j!#wJ55F1OYS7!=Qwn}NxYii^msc$UIgGo*@`RczobPJRNDB@x?*4AHCD
zy6K~{Bw`a8@qZ~^2R(F_L~J4x%lB21nx!*aU7N_Ek`!*FX0eGJ(c9CyxuLTpViSqb
zd+fToqO&BDDk8euarT)gCugyAUR);o&Qq8o*fTh+d>7>Fkoc+#u<)|6q6N!%SCJ4u
zZJ(@l!m;P&^gtAmZ(!?ktY^07+IF6<`Cw$)-wt|^X@7$*HZtvQna1W!yPMcCp+>w`
y=*){AZz6wA+U8epb@Mb^-PZ6DX&Nt)rtu5VC6m$ho~}^<0000<MNUMnLSTaG3k59z

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/go1/black.svg b/sawdust-art/src/main/art/manual/go1/black.svg
new file mode 100755
index 0000000000000000000000000000000000000000..d44629e5b97b2caee7fc351b119448e352867ec4
--- /dev/null
+++ b/sawdust-art/src/main/art/manual/go1/black.svg
@@ -0,0 +1,157 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="800"
+   height="800"
+   id="svg2832"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="black.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\manual\go1\black.png"
+   inkscape:export-xdpi="5.6300001"
+   inkscape:export-ydpi="5.6300001">
+  <defs
+     id="defs2834">
+    <inkscape:path-effect
+       effect="construct_grid"
+       id="path-effect5644"
+       is_visible="true"
+       nr_x="5"
+       nr_y="5" />
+    <inkscape:path-effect
+       effect="vonkoch"
+       id="path-effect5642"
+       is_visible="true"
+       ref_path="m 400.02041,422.32922 58.84138,0"
+       generator="m 400.02041,444.67885 19.61379,0 m 19.6138,0 19.61379,0"
+       similar_only="false"
+       nbgenerations="1"
+       drawall="true"
+       maxComplexity="1000" />
+    <inkscape:path-effect
+       effect="gears"
+       id="path-effect5640"
+       is_visible="true"
+       teeth="10"
+       phi="5" />
+    <marker
+       inkscape:stockid="DotM"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotM"
+       style="overflow:visible">
+      <path
+         id="path4064"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.4) translate(7.4, 1)" />
+    </marker>
+    <marker
+       inkscape:stockid="DotL"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotL"
+       style="overflow:visible">
+      <path
+         id="path4061"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.8) translate(7.4, 1)" />
+    </marker>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective2840" />
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="0.45254834"
+     inkscape:cx="169.89558"
+     inkscape:cy="70.743589"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,400.02041"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="400.02041,400.02041"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,800.04082"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-268.70058,400.02041"
+       id="guide2848" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,0"
+       id="guide2850" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="0,400.02041"
+       id="guide2852" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="800,400.02041"
+       id="guide2854" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata2837">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-252.36218)">
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.93180251000000003;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       id="path5636"
+       sodipodi:cx="429.4411"
+       sodipodi:cy="422.32922"
+       sodipodi:rx="29.420692"
+       sodipodi:ry="22.349627"
+       d="m 458.86179,422.32922 c 0,12.34336 -13.17209,22.34963 -29.42069,22.34963 -16.2486,0 -29.42069,-10.00627 -29.42069,-22.34963 0,-12.34335 13.17209,-22.34962 29.42069,-22.34962 16.2486,0 29.42069,10.00627 29.42069,22.34962 z"
+       transform="matrix(9.3537294,0,0,12.313101,-3616.8759,-4547.8201)"
+       inkscape:path-effect="" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/manual/go1/board.png b/sawdust-art/src/main/art/manual/go1/board.png
new file mode 100755
index 0000000000000000000000000000000000000000..248092fe0075f2c9f3d6c5366ce3e4335bce17cc
GIT binary patch
literal 312
zcmeAS@N?(olHy`uVBq!ia0vp^Mj*_=1|;R|J2nC-mSQK*5Dp-y;YjHK@;M7UB8!3a
zJrHKR`>Ht$$dD{?jVKAuPb(=;EJ|f4FE7{2%*!rLPAo{(%P&fw{mw=TsA#LFi(^Pe
z<J%h>IhhT4S|2Wde9Iy1LqQh*rCmHX-X7d4cTPKnd8yYg5ib7E`xtfVCP+uRC`_KY
zmq9`4-OS=`XO92(RLl`M<c5Vvn<;SGhJEMnKrc(igmXV7l4Bw_e>;Cy(>eQXSoU3p
z1>fst-89a=X0&>1dK|;uzc2RIhifZc3e*1D&tNt4pAQxj!M3E$oM3)4N;k`3Uoj|*
O7(8A5T-G@yGywqn%5oY2

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/go1/board.svg b/sawdust-art/src/main/art/manual/go1/board.svg
new file mode 100755
index 0000000000000000000000000000000000000000..fe68f7651e8cde7d302c204e260cd5557e7a082f
--- /dev/null
+++ b/sawdust-art/src/main/art/manual/go1/board.svg
@@ -0,0 +1,141 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="800"
+   height="800"
+   id="svg2832"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="board.svg">
+  <defs
+     id="defs2834">
+    <marker
+       inkscape:stockid="DotM"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotM"
+       style="overflow:visible">
+      <path
+         id="path4064"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.4) translate(7.4, 1)" />
+    </marker>
+    <marker
+       inkscape:stockid="DotL"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotL"
+       style="overflow:visible">
+      <path
+         id="path4061"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.8) translate(7.4, 1)" />
+    </marker>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective2840" />
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="0.45254834"
+     inkscape:cx="206.35577"
+     inkscape:cy="424.29698"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1148"
+     inkscape:window-height="770"
+     inkscape:window-x="1368"
+     inkscape:window-y="116"
+     inkscape:window-maximized="0"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,400.02041"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="400.02041,400.02041"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,800.04082"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-268.70058,400.02041"
+       id="guide2848" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,0"
+       id="guide2850" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="0,400.02041"
+       id="guide2852" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="800,400.02041"
+       id="guide2854" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata2837">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-252.36218)">
+    <path
+       style="fill:none;stroke:#000000;stroke-width:30;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;marker-start:none;marker-mid:none"
+       d="m 400.02041,800 0,-800.04082"
+       id="path2856"
+       transform="translate(0,252.36218)" />
+    <path
+       style="fill:none;stroke:#000000;stroke-width:30;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none;marker-start:none;marker-mid:none"
+       d="m 0,399.97959 800,0"
+       id="path2858"
+       transform="translate(0,252.36218)" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:4.06425713;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       id="path5636"
+       sodipodi:cx="429.4411"
+       sodipodi:cy="422.32922"
+       sodipodi:rx="29.420692"
+       sodipodi:ry="22.349627"
+       d="m 458.86179,422.32922 a 29.420692,22.349627 0 1 1 -58.84138,0 29.420692,22.349627 0 1 1 58.84138,0 z"
+       transform="matrix(1.0722536,0,0,1.4114976,-60.469766,56.245493)" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/manual/go1/highlight.png b/sawdust-art/src/main/art/manual/go1/highlight.png
new file mode 100755
index 0000000000000000000000000000000000000000..de4e641da262bc8b0b41edb75ce21e7a6280d528
GIT binary patch
literal 3322
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
Eg5M)j=Kufz

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/go1/highlight.svg b/sawdust-art/src/main/art/manual/go1/highlight.svg
new file mode 100755
index 0000000000000000000000000000000000000000..c1ab2844514dacaab01c8dae90b43e7d4920f0e1
--- /dev/null
+++ b/sawdust-art/src/main/art/manual/go1/highlight.svg
@@ -0,0 +1,164 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="800"
+   height="800"
+   id="svg2832"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="highlight.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\manual\go1\highlight.png"
+   inkscape:export-xdpi="5.625"
+   inkscape:export-ydpi="5.625">
+  <defs
+     id="defs2834">
+    <inkscape:path-effect
+       effect="construct_grid"
+       id="path-effect5644"
+       is_visible="true"
+       nr_x="5"
+       nr_y="5" />
+    <inkscape:path-effect
+       effect="vonkoch"
+       id="path-effect5642"
+       is_visible="true"
+       ref_path="m 400.02041,422.32922 58.84138,0"
+       generator="m 400.02041,444.67885 19.61379,0 m 19.6138,0 19.61379,0"
+       similar_only="false"
+       nbgenerations="1"
+       drawall="true"
+       maxComplexity="1000" />
+    <inkscape:path-effect
+       effect="gears"
+       id="path-effect5640"
+       is_visible="true"
+       teeth="10"
+       phi="5" />
+    <marker
+       inkscape:stockid="DotM"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotM"
+       style="overflow:visible">
+      <path
+         id="path4064"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.4) translate(7.4, 1)" />
+    </marker>
+    <marker
+       inkscape:stockid="DotL"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotL"
+       style="overflow:visible">
+      <path
+         id="path4061"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.8) translate(7.4, 1)" />
+    </marker>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective2840" />
+    <filter
+       inkscape:collect="always"
+       id="filter3655">
+      <feGaussianBlur
+         inkscape:collect="always"
+         stdDeviation="1.0885997"
+         id="feGaussianBlur3657" />
+    </filter>
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="0.45254834"
+     inkscape:cx="-154.9316"
+     inkscape:cy="70.743589"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,400.02041"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="400.02041,400.02041"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,800.04082"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-268.70058,400.02041"
+       id="guide2848" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,0"
+       id="guide2850" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="0,400.02041"
+       id="guide2852" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="800,400.02041"
+       id="guide2854" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata2837">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-252.36218)">
+    <path
+       sodipodi:type="arc"
+       style="fill:#ffffff;fill-opacity:1;stroke:#1368aa;stroke-width:2.3295064;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:4.65901257, 2.32950629, 1.16475314, 2.32950629;stroke-dashoffset:23.29506287;filter:url(#filter3655)"
+       id="path5636"
+       sodipodi:cx="429.4411"
+       sodipodi:cy="422.32922"
+       sodipodi:rx="29.420692"
+       sodipodi:ry="22.349627"
+       d="m 458.86179,422.32922 a 29.420692,22.349627 0 1 1 -58.84138,0 29.420692,22.349627 0 1 1 58.84138,0 z"
+       transform="matrix(11.098425,0,0,14.609791,-4366.12,-5517.7794)" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/art/manual/go1/white.png b/sawdust-art/src/main/art/manual/go1/white.png
new file mode 100755
index 0000000000000000000000000000000000000000..b37c1bb7dd8f7e54520286270e2c8442c3955ad0
GIT binary patch
literal 782
zcmV+p1M&QcP)<h;3K|Lk000e1NJLTq001%o001%w1^@s69zTe&00004b3#c}2nYxW
zd<bNS00009a7bBm0002q0002q0p03@Y5)KL8FWQhbW?9;ba!ELWdL_~cP?peYja~^
zaAhuUa%Y?FJQ@H10*gsRK~!jg?U}KPqd*wPzc~U?2EjU33Ohv*?Dhc!A3*R8t`RKr
z9(jW;Ew&3J^}R<}GIpj^bR`B>zAN@}91FS8I2*HWeqcA6|IcsCIG+R&VGR5jI)E(h
zBDcm}<kq;0+!_;^7bApBD5b7xnm-jqnW?Hur_(6~05~3x)!}fc>bg#oBzdZ;>K7uu
zN&9g`?0o>h+;N<Z@B7<0j$ezSz;hHufpHwa`o6z)9A^Unb14~m3K)#BRTze8mStzd
zpCijM48t&GjI98`7(~P{4A=9#9p}8Wz(+Xe=y~4GFbwyqB8;&`6h-@{X?jbXXqpD2
zDB3f|7FQ8rj4hVSW%qg1lI3!lT_V$YIz>^m|160UQ55aFPP0xAw&!^}nbYYUP1B&~
zdAlxu09~fkO2&iT7S1^`##U|fwOZK;A#>MtA5GJgwtk5)O%q(#eI$g;Tb<Cx)^VK8
zCF?|AvMfW#aW-u-3M)bgnOK(fpzC_?yWACB*TJ%^2SSMORZ1vADRqM&Fyut*P7nkJ
zrPLJ;6qU@j?dSi!JAF1qQJ`(x&!U{diYSUQ(=<)W-Ms`&(?C&_nP{9)L{(KPC(`A#
z$siOt?I(t$O@`6z5QQSg<FUF%kiHp&B8S6aaFI3{gd%lar)62nNpt~aSwdacsc4)~
zBuSE|^?E&6Ro3ful_bfNaG+?R0f33```ha;h41*jzXgDaD5tO@i1@}if64Q_|LyHa
zp69?hf5A3wBatb-S7jcCVS43aU>Jrev}_lRW@GjJwz`NTX+E5eQM7~pmHF}wy3;X=
zmg(P<$I!(7AT;=A1@b3|6o&lJBUNNbzRwQvt8f>&HSQv}#%M%-14W!qWNqTzj{pDw
M07*qoM6N<$g5(8Vy8r+H

literal 0
HcmV?d00001

diff --git a/sawdust-art/src/main/art/manual/go1/white.svg b/sawdust-art/src/main/art/manual/go1/white.svg
new file mode 100755
index 0000000000000000000000000000000000000000..e5e177d3b8af2e74bc069de3f0020c1208bcd354
--- /dev/null
+++ b/sawdust-art/src/main/art/manual/go1/white.svg
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="800"
+   height="800"
+   id="svg2832"
+   version="1.1"
+   inkscape:version="0.46+devel 22040"
+   sodipodi:docname="white.svg"
+   inkscape:export-filename="C:\site\Sawdust\Sawdust Game Engine\ArtGenerator\manual\go1\white.png"
+   inkscape:export-xdpi="5.6300001"
+   inkscape:export-ydpi="5.6300001">
+  <defs
+     id="defs2834">
+    <inkscape:path-effect
+       effect="construct_grid"
+       id="path-effect5644"
+       is_visible="true"
+       nr_x="5"
+       nr_y="5" />
+    <inkscape:path-effect
+       effect="vonkoch"
+       id="path-effect5642"
+       is_visible="true"
+       ref_path="m 400.02041,422.32922 58.84138,0"
+       generator="m 400.02041,444.67885 19.61379,0 m 19.6138,0 19.61379,0"
+       similar_only="false"
+       nbgenerations="1"
+       drawall="true"
+       maxComplexity="1000" />
+    <inkscape:path-effect
+       effect="gears"
+       id="path-effect5640"
+       is_visible="true"
+       teeth="10"
+       phi="5" />
+    <marker
+       inkscape:stockid="DotM"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotM"
+       style="overflow:visible">
+      <path
+         id="path4064"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.4) translate(7.4, 1)" />
+    </marker>
+    <marker
+       inkscape:stockid="DotL"
+       orient="auto"
+       refY="0.0"
+       refX="0.0"
+       id="DotL"
+       style="overflow:visible">
+      <path
+         id="path4061"
+         d="M -2.5,-1.0 C -2.5,1.7600000 -4.7400000,4.0 -7.5,4.0 C -10.260000,4.0 -12.5,1.7600000 -12.5,-1.0 C -12.5,-3.7600000 -10.260000,-6.0 -7.5,-6.0 C -4.7400000,-6.0 -2.5,-3.7600000 -2.5,-1.0 z "
+         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none;marker-end:none"
+         transform="scale(0.8) translate(7.4, 1)" />
+    </marker>
+    <inkscape:perspective
+       sodipodi:type="inkscape:persp3d"
+       inkscape:vp_x="0 : 526.18109 : 1"
+       inkscape:vp_y="0 : 1000 : 0"
+       inkscape:vp_z="744.09448 : 526.18109 : 1"
+       inkscape:persp3d-origin="372.04724 : 350.78739 : 1"
+       id="perspective2840" />
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="0.45254834"
+     inkscape:cx="169.89558"
+     inkscape:cy="70.743589"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     inkscape:window-width="1680"
+     inkscape:window-height="960"
+     inkscape:window-x="1276"
+     inkscape:window-y="-4"
+     inkscape:window-maximized="1"
+     showguides="true"
+     inkscape:guide-bbox="true">
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,400.02041"
+       id="guide2842" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="400.02041,400.02041"
+       id="guide2844" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,800.04082"
+       id="guide2846" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="-268.70058,400.02041"
+       id="guide2848" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="400.02041,0"
+       id="guide2850" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="0,400.02041"
+       id="guide2852" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="800,400.02041"
+       id="guide2854" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata2837">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(0,-252.36218)">
+    <path
+       sodipodi:type="arc"
+       style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.93180251;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
+       id="path5636"
+       sodipodi:cx="429.4411"
+       sodipodi:cy="422.32922"
+       sodipodi:rx="29.420692"
+       sodipodi:ry="22.349627"
+       d="m 458.86179,422.32922 a 29.420692,22.349627 0 1 1 -58.84138,0 29.420692,22.349627 0 1 1 58.84138,0 z"
+       transform="matrix(9.0586613,0,0,11.924678,-3490.1615,-4383.7777)" />
+  </g>
+</svg>
diff --git a/sawdust-art/src/main/java/META-INF/MANIFEST.MF b/sawdust-art/src/main/java/META-INF/MANIFEST.MF
new file mode 100755
index 0000000000000000000000000000000000000000..5e9495128c0376427420c4189993b3851770b702
--- /dev/null
+++ b/sawdust-art/src/main/java/META-INF/MANIFEST.MF
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Class-Path: 
+
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/ArtLibrary.gwt.xml b/sawdust-art/src/main/java/com/sawdust/gwt/ArtLibrary.gwt.xml
new file mode 100755
index 0000000000000000000000000000000000000000..63a12332062315b2d3612241d6bc4ee1b52031e7
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/ArtLibrary.gwt.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module rename-to='gameCreator'>
+	<source path="art" />
+</module>
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/ArtManager.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/ArtManager.java
new file mode 100755
index 0000000000000000000000000000000000000000..6a82f9ac6eb613e475acd4eb89a35924e9304180
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/ArtManager.java
@@ -0,0 +1,46 @@
+package com.sawdust.gwt.art;
+
+import java.util.HashMap;
+
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.user.client.ui.ImageBundle;
+
+public class ArtManager
+{
+    public static final ArtManager Instance = new ArtManager();
+
+    private ArtManager()
+    {
+        addArtLibrary("CARD1", com.sawdust.gwt.art.generated.cards1.enumArt.values());
+        addArtLibrary("WORD1", com.sawdust.gwt.art.generated.letters1.enumArt.values());
+        addArtLibrary("GO1", com.sawdust.gwt.art.go1.enumArt.values());
+    }
+    HashMap<String,HashMap<String,GwtSawdustArt>> art = new HashMap<String, HashMap<String,GwtSawdustArt>>();
+
+    private <T extends GwtSawdustArt> void addArtLibrary(String libraryId, T[] values)
+    {
+        HashMap<String, GwtSawdustArt> library = getLibrary(libraryId);
+        for(T v : values)
+        {
+            library.put(v.getId(), v);
+        }
+    }
+
+    private HashMap<String, GwtSawdustArt> getLibrary(String library)
+    {
+        if(art.containsKey(library))
+        {
+            return art.get(library);
+        }
+        HashMap<String, GwtSawdustArt> returnValue = new HashMap<String, GwtSawdustArt>();
+        art.put(library, returnValue);
+        return returnValue;
+    }
+
+    public AbstractImagePrototype getImage(final String lib, final String id)
+    {
+        HashMap<String, GwtSawdustArt> library = getLibrary(lib);
+        if(!library.containsKey(id)) return null;
+        return library.get(id).getImage();
+    }
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/GwtSawdustArt.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/GwtSawdustArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..67ffce00981e3423e6946244e61ebf1afa584231
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/GwtSawdustArt.java
@@ -0,0 +1,9 @@
+package com.sawdust.gwt.art;
+
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+
+public interface GwtSawdustArt
+{
+    String getId();
+    AbstractImagePrototype getImage();
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/enumArt.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/enumArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..f160d99c9a4060e2fb715ff9a0d6f0ce765fbd45
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/enumArt.java
@@ -0,0 +1,527 @@
+package com.sawdust.gwt.art.generated.cards1;
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.sawdust.gwt.art.GwtSawdustArt;
+public enum enumArt implements GwtSawdustArt 
+{
+cards1AC
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getAC(); 
+}
+public String getId() {
+ return "AC"; 
+}
+
+},
+cards18C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get8C(); 
+}
+public String getId() {
+ return "8C"; 
+}
+
+},
+cards15C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get5C(); 
+}
+public String getId() {
+ return "5C"; 
+}
+
+},
+cards14C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get4C(); 
+}
+public String getId() {
+ return "4C"; 
+}
+
+},
+cards1JC
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJC(); 
+}
+public String getId() {
+ return "JC"; 
+}
+
+},
+cards1KC
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getKC(); 
+}
+public String getId() {
+ return "KC"; 
+}
+
+},
+cards19C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get9C(); 
+}
+public String getId() {
+ return "9C"; 
+}
+
+},
+cards1QC
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQC(); 
+}
+public String getId() {
+ return "QC"; 
+}
+
+},
+cards17C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get7C(); 
+}
+public String getId() {
+ return "7C"; 
+}
+
+},
+cards16C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get6C(); 
+}
+public String getId() {
+ return "6C"; 
+}
+
+},
+cards110C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get10C(); 
+}
+public String getId() {
+ return "10C"; 
+}
+
+},
+cards13C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get3C(); 
+}
+public String getId() {
+ return "3C"; 
+}
+
+},
+cards12C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get2C(); 
+}
+public String getId() {
+ return "2C"; 
+}
+
+},
+cards1AD
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getAD(); 
+}
+public String getId() {
+ return "AD"; 
+}
+
+},
+cards18D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get8D(); 
+}
+public String getId() {
+ return "8D"; 
+}
+
+},
+cards15D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get5D(); 
+}
+public String getId() {
+ return "5D"; 
+}
+
+},
+cards14D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get4D(); 
+}
+public String getId() {
+ return "4D"; 
+}
+
+},
+cards1JD
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJD(); 
+}
+public String getId() {
+ return "JD"; 
+}
+
+},
+cards1KD
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getKD(); 
+}
+public String getId() {
+ return "KD"; 
+}
+
+},
+cards19D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get9D(); 
+}
+public String getId() {
+ return "9D"; 
+}
+
+},
+cards1QD
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQD(); 
+}
+public String getId() {
+ return "QD"; 
+}
+
+},
+cards17D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get7D(); 
+}
+public String getId() {
+ return "7D"; 
+}
+
+},
+cards16D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get6D(); 
+}
+public String getId() {
+ return "6D"; 
+}
+
+},
+cards110D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get10D(); 
+}
+public String getId() {
+ return "10D"; 
+}
+
+},
+cards13D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get3D(); 
+}
+public String getId() {
+ return "3D"; 
+}
+
+},
+cards12D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get2D(); 
+}
+public String getId() {
+ return "2D"; 
+}
+
+},
+cards1AH
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getAH(); 
+}
+public String getId() {
+ return "AH"; 
+}
+
+},
+cards18H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get8H(); 
+}
+public String getId() {
+ return "8H"; 
+}
+
+},
+cards15H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get5H(); 
+}
+public String getId() {
+ return "5H"; 
+}
+
+},
+cards14H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get4H(); 
+}
+public String getId() {
+ return "4H"; 
+}
+
+},
+cards1JH
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJH(); 
+}
+public String getId() {
+ return "JH"; 
+}
+
+},
+cards1KH
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getKH(); 
+}
+public String getId() {
+ return "KH"; 
+}
+
+},
+cards19H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get9H(); 
+}
+public String getId() {
+ return "9H"; 
+}
+
+},
+cards1QH
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQH(); 
+}
+public String getId() {
+ return "QH"; 
+}
+
+},
+cards17H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get7H(); 
+}
+public String getId() {
+ return "7H"; 
+}
+
+},
+cards16H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get6H(); 
+}
+public String getId() {
+ return "6H"; 
+}
+
+},
+cards110H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get10H(); 
+}
+public String getId() {
+ return "10H"; 
+}
+
+},
+cards13H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get3H(); 
+}
+public String getId() {
+ return "3H"; 
+}
+
+},
+cards12H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get2H(); 
+}
+public String getId() {
+ return "2H"; 
+}
+
+},
+cards1AS
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getAS(); 
+}
+public String getId() {
+ return "AS"; 
+}
+
+},
+cards18S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get8S(); 
+}
+public String getId() {
+ return "8S"; 
+}
+
+},
+cards15S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get5S(); 
+}
+public String getId() {
+ return "5S"; 
+}
+
+},
+cards14S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get4S(); 
+}
+public String getId() {
+ return "4S"; 
+}
+
+},
+cards1JS
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJS(); 
+}
+public String getId() {
+ return "JS"; 
+}
+
+},
+cards1KS
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getKS(); 
+}
+public String getId() {
+ return "KS"; 
+}
+
+},
+cards19S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get9S(); 
+}
+public String getId() {
+ return "9S"; 
+}
+
+},
+cards1QS
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQS(); 
+}
+public String getId() {
+ return "QS"; 
+}
+
+},
+cards17S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get7S(); 
+}
+public String getId() {
+ return "7S"; 
+}
+
+},
+cards16S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get6S(); 
+}
+public String getId() {
+ return "6S"; 
+}
+
+},
+cards110S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get10S(); 
+}
+public String getId() {
+ return "10S"; 
+}
+
+},
+cards13S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get3S(); 
+}
+public String getId() {
+ return "3S"; 
+}
+
+},
+cards12S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().get2S(); 
+}
+public String getId() {
+ return "2S"; 
+}
+
+},
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/singleton.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/singleton.java
new file mode 100755
index 0000000000000000000000000000000000000000..9e1424e19379f12e111e27a1eb90147a1ba51bf5
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/singleton.java
@@ -0,0 +1,16 @@
+package com.sawdust.gwt.art.generated.cards1;
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.core.client.GWT;
+public class singleton
+{
+     private static boolean _init = false;
+     private static xface _instance = null;
+     static xface instance() {
+         if(!_init)
+         {
+             _instance = GWT.create(xface.class);
+             _init = true;         }
+         return _instance;
+              }
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/xface.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/xface.java
new file mode 100755
index 0000000000000000000000000000000000000000..df9ad10db45f7fa653a8786063754ac08f7ebb0c
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/cards1/xface.java
@@ -0,0 +1,110 @@
+package com.sawdust.gwt.art.generated.cards1;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.user.client.ui.ImageBundle;
+public interface xface extends ImageBundle 
+{
+@Resource("cards1/AC.png")
+AbstractImagePrototype getAC();
+@Resource("cards1/8C.png")
+AbstractImagePrototype get8C();
+@Resource("cards1/5C.png")
+AbstractImagePrototype get5C();
+@Resource("cards1/4C.png")
+AbstractImagePrototype get4C();
+@Resource("cards1/JC.png")
+AbstractImagePrototype getJC();
+@Resource("cards1/KC.png")
+AbstractImagePrototype getKC();
+@Resource("cards1/9C.png")
+AbstractImagePrototype get9C();
+@Resource("cards1/QC.png")
+AbstractImagePrototype getQC();
+@Resource("cards1/7C.png")
+AbstractImagePrototype get7C();
+@Resource("cards1/6C.png")
+AbstractImagePrototype get6C();
+@Resource("cards1/10C.png")
+AbstractImagePrototype get10C();
+@Resource("cards1/3C.png")
+AbstractImagePrototype get3C();
+@Resource("cards1/2C.png")
+AbstractImagePrototype get2C();
+@Resource("cards1/AD.png")
+AbstractImagePrototype getAD();
+@Resource("cards1/8D.png")
+AbstractImagePrototype get8D();
+@Resource("cards1/5D.png")
+AbstractImagePrototype get5D();
+@Resource("cards1/4D.png")
+AbstractImagePrototype get4D();
+@Resource("cards1/JD.png")
+AbstractImagePrototype getJD();
+@Resource("cards1/KD.png")
+AbstractImagePrototype getKD();
+@Resource("cards1/9D.png")
+AbstractImagePrototype get9D();
+@Resource("cards1/QD.png")
+AbstractImagePrototype getQD();
+@Resource("cards1/7D.png")
+AbstractImagePrototype get7D();
+@Resource("cards1/6D.png")
+AbstractImagePrototype get6D();
+@Resource("cards1/10D.png")
+AbstractImagePrototype get10D();
+@Resource("cards1/3D.png")
+AbstractImagePrototype get3D();
+@Resource("cards1/2D.png")
+AbstractImagePrototype get2D();
+@Resource("cards1/AH.png")
+AbstractImagePrototype getAH();
+@Resource("cards1/8H.png")
+AbstractImagePrototype get8H();
+@Resource("cards1/5H.png")
+AbstractImagePrototype get5H();
+@Resource("cards1/4H.png")
+AbstractImagePrototype get4H();
+@Resource("cards1/JH.png")
+AbstractImagePrototype getJH();
+@Resource("cards1/KH.png")
+AbstractImagePrototype getKH();
+@Resource("cards1/9H.png")
+AbstractImagePrototype get9H();
+@Resource("cards1/QH.png")
+AbstractImagePrototype getQH();
+@Resource("cards1/7H.png")
+AbstractImagePrototype get7H();
+@Resource("cards1/6H.png")
+AbstractImagePrototype get6H();
+@Resource("cards1/10H.png")
+AbstractImagePrototype get10H();
+@Resource("cards1/3H.png")
+AbstractImagePrototype get3H();
+@Resource("cards1/2H.png")
+AbstractImagePrototype get2H();
+@Resource("cards1/AS.png")
+AbstractImagePrototype getAS();
+@Resource("cards1/8S.png")
+AbstractImagePrototype get8S();
+@Resource("cards1/5S.png")
+AbstractImagePrototype get5S();
+@Resource("cards1/4S.png")
+AbstractImagePrototype get4S();
+@Resource("cards1/JS.png")
+AbstractImagePrototype getJS();
+@Resource("cards1/KS.png")
+AbstractImagePrototype getKS();
+@Resource("cards1/9S.png")
+AbstractImagePrototype get9S();
+@Resource("cards1/QS.png")
+AbstractImagePrototype getQS();
+@Resource("cards1/7S.png")
+AbstractImagePrototype get7S();
+@Resource("cards1/6S.png")
+AbstractImagePrototype get6S();
+@Resource("cards1/10S.png")
+AbstractImagePrototype get10S();
+@Resource("cards1/3S.png")
+AbstractImagePrototype get3S();
+@Resource("cards1/2S.png")
+AbstractImagePrototype get2S();
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/enumArt.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/enumArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..5d1e03ac0d515b94c44ec36dd2481030b5a58cdc
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/enumArt.java
@@ -0,0 +1,527 @@
+package com.sawdust.gwt.art.generated.letters1;
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.sawdust.gwt.art.GwtSawdustArt;
+public enum enumArt implements GwtSawdustArt 
+{
+letters1A
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getA(); 
+}
+public String getId() {
+ return "A"; 
+}
+
+},
+letters1A2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getA2(); 
+}
+public String getId() {
+ return "A2"; 
+}
+
+},
+letters1B
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getB(); 
+}
+public String getId() {
+ return "B"; 
+}
+
+},
+letters1B2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getB2(); 
+}
+public String getId() {
+ return "B2"; 
+}
+
+},
+letters1C
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getC(); 
+}
+public String getId() {
+ return "C"; 
+}
+
+},
+letters1C2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getC2(); 
+}
+public String getId() {
+ return "C2"; 
+}
+
+},
+letters1D
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getD(); 
+}
+public String getId() {
+ return "D"; 
+}
+
+},
+letters1D2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getD2(); 
+}
+public String getId() {
+ return "D2"; 
+}
+
+},
+letters1E
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getE(); 
+}
+public String getId() {
+ return "E"; 
+}
+
+},
+letters1E2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getE2(); 
+}
+public String getId() {
+ return "E2"; 
+}
+
+},
+letters1F
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getF(); 
+}
+public String getId() {
+ return "F"; 
+}
+
+},
+letters1F2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getF2(); 
+}
+public String getId() {
+ return "F2"; 
+}
+
+},
+letters1G
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getG(); 
+}
+public String getId() {
+ return "G"; 
+}
+
+},
+letters1G2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getG2(); 
+}
+public String getId() {
+ return "G2"; 
+}
+
+},
+letters1H
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getH(); 
+}
+public String getId() {
+ return "H"; 
+}
+
+},
+letters1H2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getH2(); 
+}
+public String getId() {
+ return "H2"; 
+}
+
+},
+letters1I
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getI(); 
+}
+public String getId() {
+ return "I"; 
+}
+
+},
+letters1I2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getI2(); 
+}
+public String getId() {
+ return "I2"; 
+}
+
+},
+letters1J
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJ(); 
+}
+public String getId() {
+ return "J"; 
+}
+
+},
+letters1J2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getJ2(); 
+}
+public String getId() {
+ return "J2"; 
+}
+
+},
+letters1K
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getK(); 
+}
+public String getId() {
+ return "K"; 
+}
+
+},
+letters1K2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getK2(); 
+}
+public String getId() {
+ return "K2"; 
+}
+
+},
+letters1L
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getL(); 
+}
+public String getId() {
+ return "L"; 
+}
+
+},
+letters1L2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getL2(); 
+}
+public String getId() {
+ return "L2"; 
+}
+
+},
+letters1M
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getM(); 
+}
+public String getId() {
+ return "M"; 
+}
+
+},
+letters1M2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getM2(); 
+}
+public String getId() {
+ return "M2"; 
+}
+
+},
+letters1N
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getN(); 
+}
+public String getId() {
+ return "N"; 
+}
+
+},
+letters1N2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getN2(); 
+}
+public String getId() {
+ return "N2"; 
+}
+
+},
+letters1O
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getO(); 
+}
+public String getId() {
+ return "O"; 
+}
+
+},
+letters1O2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getO2(); 
+}
+public String getId() {
+ return "O2"; 
+}
+
+},
+letters1P
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getP(); 
+}
+public String getId() {
+ return "P"; 
+}
+
+},
+letters1P2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getP2(); 
+}
+public String getId() {
+ return "P2"; 
+}
+
+},
+letters1Q
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQ(); 
+}
+public String getId() {
+ return "Q"; 
+}
+
+},
+letters1Q2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getQ2(); 
+}
+public String getId() {
+ return "Q2"; 
+}
+
+},
+letters1R
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getR(); 
+}
+public String getId() {
+ return "R"; 
+}
+
+},
+letters1R2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getR2(); 
+}
+public String getId() {
+ return "R2"; 
+}
+
+},
+letters1S
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getS(); 
+}
+public String getId() {
+ return "S"; 
+}
+
+},
+letters1S2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getS2(); 
+}
+public String getId() {
+ return "S2"; 
+}
+
+},
+letters1T
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getT(); 
+}
+public String getId() {
+ return "T"; 
+}
+
+},
+letters1T2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getT2(); 
+}
+public String getId() {
+ return "T2"; 
+}
+
+},
+letters1U
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getU(); 
+}
+public String getId() {
+ return "U"; 
+}
+
+},
+letters1U2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getU2(); 
+}
+public String getId() {
+ return "U2"; 
+}
+
+},
+letters1V
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getV(); 
+}
+public String getId() {
+ return "V"; 
+}
+
+},
+letters1V2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getV2(); 
+}
+public String getId() {
+ return "V2"; 
+}
+
+},
+letters1W
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getW(); 
+}
+public String getId() {
+ return "W"; 
+}
+
+},
+letters1W2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getW2(); 
+}
+public String getId() {
+ return "W2"; 
+}
+
+},
+letters1X
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getX(); 
+}
+public String getId() {
+ return "X"; 
+}
+
+},
+letters1X2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getX2(); 
+}
+public String getId() {
+ return "X2"; 
+}
+
+},
+letters1Y
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getY(); 
+}
+public String getId() {
+ return "Y"; 
+}
+
+},
+letters1Y2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getY2(); 
+}
+public String getId() {
+ return "Y2"; 
+}
+
+},
+letters1Z
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getZ(); 
+}
+public String getId() {
+ return "Z"; 
+}
+
+},
+letters1Z2
+{
+public AbstractImagePrototype getImage() {
+ return singleton.instance().getZ2(); 
+}
+public String getId() {
+ return "Z2"; 
+}
+
+},
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/singleton.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/singleton.java
new file mode 100755
index 0000000000000000000000000000000000000000..29abe059234dbd7a4773581bd49b4f04a101d3cd
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/singleton.java
@@ -0,0 +1,16 @@
+package com.sawdust.gwt.art.generated.letters1;
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.core.client.GWT;
+public class singleton
+{
+     private static boolean _init = false;
+     private static xface _instance = null;
+     static xface instance() {
+         if(!_init)
+         {
+             _instance = GWT.create(xface.class);
+             _init = true;         }
+         return _instance;
+              }
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/xface.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/xface.java
new file mode 100755
index 0000000000000000000000000000000000000000..40aa1b03c1001d665cb68a856c7f49df0aa93be9
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/generated/letters1/xface.java
@@ -0,0 +1,110 @@
+package com.sawdust.gwt.art.generated.letters1;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.user.client.ui.ImageBundle;
+public interface xface extends ImageBundle 
+{
+@Resource("letters1/A.png")
+AbstractImagePrototype getA();
+@Resource("letters1/A2.png")
+AbstractImagePrototype getA2();
+@Resource("letters1/B.png")
+AbstractImagePrototype getB();
+@Resource("letters1/B2.png")
+AbstractImagePrototype getB2();
+@Resource("letters1/C.png")
+AbstractImagePrototype getC();
+@Resource("letters1/C2.png")
+AbstractImagePrototype getC2();
+@Resource("letters1/D.png")
+AbstractImagePrototype getD();
+@Resource("letters1/D2.png")
+AbstractImagePrototype getD2();
+@Resource("letters1/E.png")
+AbstractImagePrototype getE();
+@Resource("letters1/E2.png")
+AbstractImagePrototype getE2();
+@Resource("letters1/F.png")
+AbstractImagePrototype getF();
+@Resource("letters1/F2.png")
+AbstractImagePrototype getF2();
+@Resource("letters1/G.png")
+AbstractImagePrototype getG();
+@Resource("letters1/G2.png")
+AbstractImagePrototype getG2();
+@Resource("letters1/H.png")
+AbstractImagePrototype getH();
+@Resource("letters1/H2.png")
+AbstractImagePrototype getH2();
+@Resource("letters1/I.png")
+AbstractImagePrototype getI();
+@Resource("letters1/I2.png")
+AbstractImagePrototype getI2();
+@Resource("letters1/J.png")
+AbstractImagePrototype getJ();
+@Resource("letters1/J2.png")
+AbstractImagePrototype getJ2();
+@Resource("letters1/K.png")
+AbstractImagePrototype getK();
+@Resource("letters1/K2.png")
+AbstractImagePrototype getK2();
+@Resource("letters1/L.png")
+AbstractImagePrototype getL();
+@Resource("letters1/L2.png")
+AbstractImagePrototype getL2();
+@Resource("letters1/M.png")
+AbstractImagePrototype getM();
+@Resource("letters1/M2.png")
+AbstractImagePrototype getM2();
+@Resource("letters1/N.png")
+AbstractImagePrototype getN();
+@Resource("letters1/N2.png")
+AbstractImagePrototype getN2();
+@Resource("letters1/O.png")
+AbstractImagePrototype getO();
+@Resource("letters1/O2.png")
+AbstractImagePrototype getO2();
+@Resource("letters1/P.png")
+AbstractImagePrototype getP();
+@Resource("letters1/P2.png")
+AbstractImagePrototype getP2();
+@Resource("letters1/Q.png")
+AbstractImagePrototype getQ();
+@Resource("letters1/Q2.png")
+AbstractImagePrototype getQ2();
+@Resource("letters1/R.png")
+AbstractImagePrototype getR();
+@Resource("letters1/R2.png")
+AbstractImagePrototype getR2();
+@Resource("letters1/S.png")
+AbstractImagePrototype getS();
+@Resource("letters1/S2.png")
+AbstractImagePrototype getS2();
+@Resource("letters1/T.png")
+AbstractImagePrototype getT();
+@Resource("letters1/T2.png")
+AbstractImagePrototype getT2();
+@Resource("letters1/U.png")
+AbstractImagePrototype getU();
+@Resource("letters1/U2.png")
+AbstractImagePrototype getU2();
+@Resource("letters1/V.png")
+AbstractImagePrototype getV();
+@Resource("letters1/V2.png")
+AbstractImagePrototype getV2();
+@Resource("letters1/W.png")
+AbstractImagePrototype getW();
+@Resource("letters1/W2.png")
+AbstractImagePrototype getW2();
+@Resource("letters1/X.png")
+AbstractImagePrototype getX();
+@Resource("letters1/X2.png")
+AbstractImagePrototype getX2();
+@Resource("letters1/Y.png")
+AbstractImagePrototype getY();
+@Resource("letters1/Y2.png")
+AbstractImagePrototype getY2();
+@Resource("letters1/Z.png")
+AbstractImagePrototype getZ();
+@Resource("letters1/Z2.png")
+AbstractImagePrototype getZ2();
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/enumArt.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/enumArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..05e7248203659efa557c02ae845b7398bf48f29c
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/enumArt.java
@@ -0,0 +1,61 @@
+package com.sawdust.gwt.art.go1;
+
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.sawdust.gwt.art.GwtSawdustArt;
+
+public enum enumArt implements GwtSawdustArt
+{
+    highlight
+    {
+        public AbstractImagePrototype getImage()
+        {
+            return singleton.instance().getHighlight();
+        }
+
+        public String getId()
+        {
+            return "GO:HIGHLIGHT";
+        }
+
+    },
+    board
+    {
+        public AbstractImagePrototype getImage()
+        {
+            return singleton.instance().getBoard();
+        }
+
+        public String getId()
+        {
+            return "GO:BOARD";
+        }
+
+    },
+    black
+    {
+        public AbstractImagePrototype getImage()
+        {
+            return singleton.instance().getBlack();
+        }
+
+        public String getId()
+        {
+            return "GO:BLACK";
+        }
+
+    },
+    white
+    {
+        public AbstractImagePrototype getImage()
+        {
+            return singleton.instance().getWhite();
+        }
+
+        public String getId()
+        {
+            return "GO:WHITE";
+        }
+
+    }
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/singleton.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/singleton.java
new file mode 100755
index 0000000000000000000000000000000000000000..f9361d1c656035752330170e160917d53c4caaf9
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/singleton.java
@@ -0,0 +1,21 @@
+package com.sawdust.gwt.art.go1;
+
+import com.google.gwt.user.client.ui.ImageBundle;
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.core.client.GWT;
+
+public class singleton
+{
+    private static boolean _init = false;
+    private static xface _instance = null;
+
+    static xface instance()
+    {
+        if (!_init)
+        {
+            _instance = GWT.create(xface.class);
+            _init = true;
+        }
+        return _instance;
+    }
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/xface.java b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/xface.java
new file mode 100755
index 0000000000000000000000000000000000000000..edcd99f6a25c685e734da41d9eb3572f7357c57e
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/gwt/art/go1/xface.java
@@ -0,0 +1,19 @@
+package com.sawdust.gwt.art.go1;
+
+import com.google.gwt.user.client.ui.AbstractImagePrototype;
+import com.google.gwt.user.client.ui.ImageBundle;
+
+public interface xface extends ImageBundle
+{
+    @Resource("go1/highlight.png")
+    AbstractImagePrototype getHighlight();
+
+    @Resource("go1/board.png")
+    AbstractImagePrototype getBoard();
+
+    @Resource("go1/black.png")
+    AbstractImagePrototype getBlack();
+
+    @Resource("go1/white.png")
+    AbstractImagePrototype getWhite();
+}
\ No newline at end of file
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java b/sawdust-art/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
new file mode 100755
index 0000000000000000000000000000000000000000..9d38853fa999c83089eba39e457c3bc616f50ee7
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
@@ -0,0 +1,124 @@
+package com.sawdust.util.art;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.HashMap;
+
+public abstract class ArtLibraryGenerator<T extends ArtToken>
+{
+    protected final String _inputPath;
+    protected final String _basePath;
+    protected final String _nameSpace;
+    protected final String _codePath;
+    
+    public ArtLibraryGenerator(String inputPath, String outputPath, String nameSpace, String codePath)
+    {
+        super();
+        this._nameSpace = nameSpace;
+        this._inputPath = inputPath;
+        this._basePath = outputPath;
+        this._codePath = codePath;
+    }
+
+    abstract T[] getTokenSet();
+
+    abstract String getKey();
+
+    public void createLibrary()
+    {
+        HashMap<String, String> files = new HashMap<String, String>();
+        String libraryKey = getKey();
+        String libraryNameSpace = _nameSpace + "." + libraryKey;
+        String libraryPath = _codePath + "/" + libraryNameSpace.replaceAll("\\.", "/") + "/";
+        File interfaceFile = new File(libraryPath + "xface.java");
+        File enumFile = new File(libraryPath + "enumArt.java");
+        File singletonFile = new File(libraryPath + "singleton.java");
+        interfaceFile.getParentFile().mkdirs();
+        FileWriter interfaceWriter;
+        FileWriter enumWriter;
+        FileWriter singletonWriter;
+        try
+        {
+            interfaceWriter = new FileWriter(interfaceFile);
+            interfaceWriter.write(String.format("package %s;\n", libraryNameSpace));
+            interfaceWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
+            interfaceWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
+            interfaceWriter.write(String.format("public interface xface extends ImageBundle \n{\n"));
+
+            enumWriter = new FileWriter(enumFile);
+            enumWriter.write(String.format("package %s;\n", libraryNameSpace));
+            enumWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
+            enumWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
+            enumWriter.write(String.format("import com.sawdust.gwt.art.GwtSawdustArt;\n"));
+            enumWriter.write(String.format("public enum enumArt implements GwtSawdustArt \n{\n", libraryKey));
+
+            singletonWriter = new FileWriter(singletonFile);
+            singletonWriter.write(String.format("package %s;\n", libraryNameSpace));
+            singletonWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
+            singletonWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
+            singletonWriter.write(String.format("import com.google.gwt.core.client.GWT;\n"));
+            singletonWriter.write(String.format("public class singleton\n" +
+            		"{\n" +
+                    "     private static boolean _init = false;\n" +
+                    "     private static xface _instance = null;\n" +
+            		"     static xface instance() {\n" +
+            		"         if(!_init)\n" +
+            		"         {\n" +
+            		"             _instance = GWT.create(xface.class);\n" +
+            		"             _init = true;" +
+                    "         }\n" +
+            		"         return _instance;\n" +
+            		"         " +
+            		"     }\n" +
+            		"}\n"));
+            
+            
+            for (T token : getTokenSet())
+            {
+                String imagePath = createImage(token);
+                String tokenKey = token.getKey();
+                files.put(tokenKey, imagePath);
+
+                interfaceWriter.write(String.format("@Resource(\"%s\")\n", imagePath));
+                interfaceWriter.write(String.format("AbstractImagePrototype get%s();\n", tokenKey));
+
+                enumWriter.write(String.format("%s%s\n", libraryKey, tokenKey));
+                enumWriter.write(String.format("{\n"));
+                enumWriter.write(String.format("public AbstractImagePrototype getImage() {\n return singleton.instance().get%s(); \n}\n", tokenKey));
+                enumWriter.write(String.format("public String getId() {\n return \"%s\"; \n}\n", tokenKey));
+                enumWriter.write(String.format("\n},\n", tokenKey));
+            }
+            
+            singletonWriter.close();
+
+            interfaceWriter.write(String.format("}"));
+            interfaceWriter.close();
+            
+            enumWriter.write(String.format("}"));
+            enumWriter.close();
+        }
+        catch (IOException e)
+        {
+            throw new RuntimeException(e);
+        }
+    }
+
+    protected String createImage(T token)
+    {
+        String relativePath = getKey() + "/" + token.getKey() + ".png";
+        String absolutePath = _basePath + "/" + relativePath;
+        try
+        {
+            File file = new File(absolutePath);
+            file.getParentFile().mkdirs();
+            token.writeImage(file);
+        }
+        catch (FileNotFoundException e)
+        {
+            throw new RuntimeException("Error saving image", e);
+        }
+        return relativePath;
+    }
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/ArtToken.java b/sawdust-art/src/main/java/com/sawdust/util/art/ArtToken.java
new file mode 100755
index 0000000000000000000000000000000000000000..cdc64d4d758c8a25a7e03154b87a62dd3ab0f556
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/ArtToken.java
@@ -0,0 +1,31 @@
+package com.sawdust.util.art;
+
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+
+import javax.media.jai.JAI;
+
+public abstract class ArtToken
+{
+    ArtLibraryGenerator<?> _parent;
+    public ArtToken(ArtLibraryGenerator<?> parent)
+    {
+        super();
+        _parent = parent;
+    }
+
+    abstract BufferedImage createImage();
+    
+    void writeImage(File out) throws FileNotFoundException
+    {
+        FileOutputStream stream = new FileOutputStream(out);
+        String format = "PNG";
+        JAI.create("encode", createImage(), stream, format, null);
+
+    }
+
+    abstract String getKey();
+
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/CardArt.java b/sawdust-art/src/main/java/com/sawdust/util/art/CardArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..795d50c5981e560dc587fa519ad67397cb5e7492
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/CardArt.java
@@ -0,0 +1,91 @@
+package com.sawdust.util.art;
+
+import java.awt.Color;
+import java.awt.Font;
+import java.awt.Graphics;
+import java.awt.Image;
+import java.awt.geom.Rectangle2D;
+import java.awt.image.BufferedImage;
+import java.awt.image.ImageObserver;
+import java.awt.image.renderable.ParameterBlock;
+
+import javax.media.jai.InterpolationBicubic;
+import javax.media.jai.JAI;
+
+import com.sawdust.engine.view.cards.Ranks;
+import com.sawdust.engine.view.cards.Suits;
+
+public class CardArt extends ArtToken
+{
+    final Ranks _rank;
+    final Suits _suit;
+    static final int width = 72;
+
+    public CardArt(ArtLibraryGenerator<CardArt> parent, Ranks r, Suits s)
+    {
+        super(parent);
+        _rank = r;
+        _suit = s;
+    }
+
+    @Override
+    BufferedImage createImage()
+    {
+        int height = (int) (width * (4.0 / 3.0));
+        double sz = ((CardGenerator1)_parent).getSize(_rank);
+        
+        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
+
+        Graphics graphics;
+        graphics = image.getGraphics();
+        graphics.setColor(Color.BLACK);
+        graphics.fillRect(-1, -1, width + 2, height + 2);
+        graphics.setColor(Color.WHITE);
+        int w = (int) (width * 0.035);
+        graphics.fillRect(w, w, width - 2 * w, height - 2 * w);
+        graphics.setClip(w, w, width - 2 * w, height - 2 * w);
+
+        w *= 2;
+        Color suitColor = (_suit.equals(Suits.Spades) || _suit.equals(Suits.Clubs)) ? Color.BLACK : Color.RED;
+        String fontName = "Trebuchet MS";
+        int fontStyle = Font.CENTER_BASELINE;
+        String rankLabel = ((CardGenerator1)_parent).getRankLabel(_rank);
+
+        graphics.setColor(suitColor);
+        graphics.setFont(new Font(fontName, fontStyle, (int) (width * 0.7 * Math.pow(sz, 0.7))));
+
+        Rectangle2D labelMetrics = graphics.getFontMetrics().getStringBounds(rankLabel, graphics);
+        graphics.drawString(rankLabel, (int) (w), (int) (w - 0.75 * labelMetrics.getMinY()));
+        Image suitIcon = ((CardGenerator1)_parent).getImage(_suit);
+        ImageObserver observer = new ImageObserver()
+        {
+            public boolean imageUpdate(Image img, int infoflags, int x, int y, int pwidth, int pheight)
+            {
+                return false;
+            }
+        };
+
+        image = JAI.create(
+                "rotate",
+                new ParameterBlock().addSource(image).add((float) (width / 2.0)).add((float) (height / 2.0)).add((float) Math.PI).add(
+                        new InterpolationBicubic(4)), null).getAsBufferedImage();
+        graphics = image.getGraphics();
+
+        graphics.setColor(suitColor);
+        graphics.setFont(new Font(fontName, fontStyle, (int) (width * 0.7 * Math.pow(sz, 0.7))));
+        graphics.drawString(rankLabel, (int) (w), (int) (w - 0.75 * labelMetrics.getMinY()));
+        graphics.drawImage(suitIcon, (int) (width * (0.5 - sz)), (int) ((height * 0.5) - (width * sz)), (int) (width * (0.5 + sz)),
+                (int) ((height * 0.5) + (width * sz)), 0, 0, suitIcon.getWidth(observer), suitIcon.getHeight(observer), observer);
+
+        return image;
+    }
+
+    @Override
+    String getKey()
+    {
+        String suitLabel = _suit.toString();
+        String rankLabel = ((CardGenerator1)_parent).getRankLabel(_rank);
+        return rankLabel + suitLabel;
+    }
+
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/CardGenerator1.java b/sawdust-art/src/main/java/com/sawdust/util/art/CardGenerator1.java
new file mode 100755
index 0000000000000000000000000000000000000000..3e75f4ce1588d672566299709245c6443cdd5c72
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/CardGenerator1.java
@@ -0,0 +1,110 @@
+package com.sawdust.util.art;
+
+import java.awt.Image;
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+
+import javax.media.jai.JAI;
+
+import com.sawdust.engine.view.cards.Card;
+import com.sawdust.engine.view.cards.Ranks;
+import com.sawdust.engine.view.cards.Suits;
+import com.sun.media.jai.codec.FileSeekableStream;
+
+public class CardGenerator1 extends ArtLibraryGenerator<CardArt>
+{
+    String resourcePath = "";
+    String outputPath = "";
+
+    public CardGenerator1(String inputPath, String basePath, String codePath)
+    {
+        super(inputPath, basePath, "com.sawdust.gwt.art.generated", codePath);
+        resourcePath = inputPath;
+        outputPath = basePath;
+    }
+
+    /**
+     * @param args
+     * @throws IOException
+     */
+    public static void main(String[] args) throws IOException
+    {
+        new CardGenerator1(args[0], args[1], args[2]).createLibrary();
+    }
+
+    double getSize(Ranks r)
+    {
+        if (r.getOrder() > Ranks.Ten.getOrder())
+        {
+            return 0.45 + ((r.getOrder() - 10) * 0.035);
+        }
+        else
+        {
+            return 0.3 + ((r.getOrder() - 2) * 0.007);
+        }
+    }
+
+    String getRankLabel(Ranks r)
+    {
+        if (r == Ranks.Ten) return "10";
+        return r.toString();
+    }
+
+    public Image getImage(Suits s)
+    {
+        File outFile;
+        if (s.equals(Suits.Clubs))
+        {
+            outFile = new File(resourcePath + "/input/club.png");
+        }
+        else if (s.equals(Suits.Spades))
+        {
+            outFile = new File(resourcePath + "/input/spade.png");
+        }
+        else if (s.equals(Suits.Diamonds))
+        {
+            outFile = new File(resourcePath + "/input/diamond.png");
+        }
+        else if (s.equals(Suits.Hearts))
+        {
+            outFile = new File(resourcePath + "/input/heart.png");
+        }
+        else
+        {
+            throw new RuntimeException();
+        }
+        try
+        {
+            return JAI.create("stream", new FileSeekableStream(outFile)).getAsBufferedImage();
+        }
+        catch (IOException e)
+        {
+            throw new RuntimeException(e);
+        }
+    }
+
+    @Override
+    String getKey()
+    {
+        return "cards1";
+    }
+
+    @Override
+    CardArt[] getTokenSet()
+    {
+        ArrayList<CardArt> returnList = new ArrayList<CardArt>();
+        for (final Suits s : Suits.values())
+        {
+            if (s == Suits.Null) continue;
+            for (final Ranks r : Ranks.values())
+            {
+                if (r == Ranks.Null) continue;
+                Card card = new Card(r, s, 0);
+                returnList.add(new CardArt(this, r, s));
+            }
+        }
+        return returnList.toArray(new CardArt[] {});
+    }
+
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/LetterArt.java b/sawdust-art/src/main/java/com/sawdust/util/art/LetterArt.java
new file mode 100755
index 0000000000000000000000000000000000000000..f95599c0180f76979e11da739c018ff0b3a47ae1
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/LetterArt.java
@@ -0,0 +1,45 @@
+package com.sawdust.util.art;
+
+import java.awt.Color;
+import java.awt.Font;
+import java.awt.Graphics;
+import java.awt.geom.Rectangle2D;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FileOutputStream;
+
+public class LetterArt extends ArtToken
+{
+    String letter; 
+    Color color;
+    int width;
+    
+    public LetterArt(ArtLibraryGenerator<?> parent, String letter, Color color, int width)
+    {
+        super(parent);
+        this.letter = letter;
+        this.color = color;
+        this.width = width;
+    }
+
+    BufferedImage createImage()
+    {
+        BufferedImage image = new BufferedImage(width, width, BufferedImage.TYPE_INT_RGB);
+        Graphics graphics = image.getGraphics();
+
+        graphics.setFont(new Font("Canarsie Slab JL", Font.BOLD, (int)(width*0.90)));
+        graphics.setColor(color);
+        String l = letter.substring(0,1);
+        Rectangle2D labelMetrics = graphics.getFontMetrics().getStringBounds(l, graphics);
+        graphics.drawString(l, 
+                (int)(width - labelMetrics.getWidth())/2, 
+                (int)(0.8*labelMetrics.getHeight() + (width - labelMetrics.getHeight())/2));
+        return image;
+    }
+
+    @Override
+    String getKey()
+    {
+        return letter;
+    };
+}
diff --git a/sawdust-art/src/main/java/com/sawdust/util/art/LetterGenerator1.java b/sawdust-art/src/main/java/com/sawdust/util/art/LetterGenerator1.java
new file mode 100755
index 0000000000000000000000000000000000000000..0392510c89e32c4fabe48919084c3c811e192cfd
--- /dev/null
+++ b/sawdust-art/src/main/java/com/sawdust/util/art/LetterGenerator1.java
@@ -0,0 +1,51 @@
+package com.sawdust.util.art;
+
+import java.awt.Color;
+import java.awt.Font;
+import java.awt.Graphics;
+import java.awt.geom.Rectangle2D;
+import java.awt.image.BufferedImage;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+
+import javax.media.jai.JAI;
+
+public class LetterGenerator1 extends ArtLibraryGenerator<LetterArt>
+{
+
+    public static void main(String[] args) throws IOException
+    {
+        new LetterGenerator1(args[0], args[1], args[2]).createLibrary();
+    }
+
+    static final int size = 50;
+    static final String letters[] =
+    { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
+
+    public LetterGenerator1(String string, String string2, String s3)
+    {
+        super(string, string2, "com.sawdust.gwt.art.generated", s3);
+    }
+
+    @Override
+    LetterArt[] getTokenSet()
+    {
+        ArrayList<LetterArt> returnList = new ArrayList<LetterArt>(); 
+        for (String letter : letters)
+        {
+            returnList.add(new LetterArt(this, letter, Color.WHITE, size));
+            returnList.add(new LetterArt(this, letter+"2", Color.GREEN, size));
+        }
+        return returnList.toArray(new LetterArt[]{});
+    }
+
+    @Override
+    String getKey()
+    {
+        return "letters1";
+    }
+
+}
diff --git a/sawdust-core/src/main/java/com/sawdust/engine/controller/entities/GameSession.java b/sawdust-core/src/main/java/com/sawdust/engine/controller/entities/GameSession.java
index 7da422097b513cfe360e9bf201dc4e43ca390633..07f433ed334f33316d5aed6452b607873f649dba 100644
--- a/sawdust-core/src/main/java/com/sawdust/engine/controller/entities/GameSession.java
+++ b/sawdust-core/src/main/java/com/sawdust/engine/controller/entities/GameSession.java
@@ -96,4 +96,6 @@ public interface GameSession extends Bank
 
     void setUnitWager(int anteInteger) throws GameException;
 
+    void setAgentEnabled(boolean b);
+
 }
diff --git a/sawdust-core/src/main/java/com/sawdust/engine/model/LoadedDeck.java b/sawdust-core/src/main/java/com/sawdust/engine/model/LoadedDeck.java
index 09abac41a8e196aa7d1c2223d76fe8a688d313a4..f5f90a1c918279b360ea837f357333fb982a1be2 100644
--- a/sawdust-core/src/main/java/com/sawdust/engine/model/LoadedDeck.java
+++ b/sawdust-core/src/main/java/com/sawdust/engine/model/LoadedDeck.java
@@ -2,6 +2,7 @@ package com.sawdust.engine.model;
 
 import java.util.LinkedList;
 
+import com.sawdust.engine.view.Pair;
 import com.sawdust.engine.view.cards.Card;
 import com.sawdust.engine.view.cards.CardDeck;
 import com.sawdust.engine.view.cards.Ranks;
diff --git a/sawdust-core/src/main/java/com/sawdust/engine/model/Pair.java b/sawdust-core/src/main/java/com/sawdust/engine/model/Pair.java
deleted file mode 100644
index 5e3727e896eaa6c6de076cec7f939727578917a0..0000000000000000000000000000000000000000
--- a/sawdust-core/src/main/java/com/sawdust/engine/model/Pair.java
+++ /dev/null
@@ -1,14 +0,0 @@
-package com.sawdust.engine.model;
-
-public class Pair<T1, T2>
-{
-    public final T1 first;
-    public final T2 second;
-
-    public Pair(T1 first, T2 second)
-    {
-        super();
-        this.first = first;
-        this.second = second;
-    }
-}
diff --git a/sawdust-core/src/main/java/com/sawdust/engine/view/Pair.java b/sawdust-core/src/main/java/com/sawdust/engine/view/Pair.java
new file mode 100644
index 0000000000000000000000000000000000000000..0fd948112026a5ba44d8026dee44cb89cab5f029
--- /dev/null
+++ b/sawdust-core/src/main/java/com/sawdust/engine/view/Pair.java
@@ -0,0 +1,14 @@
+package com.sawdust.engine.view;
+
+public class Pair<T1, T2>
+{
+    public final T1 first;
+    public final T2 second;
+
+    public Pair(T1 first, T2 second)
+    {
+        super();
+        this.first = first;
+        this.second = second;
+    }
+}
diff --git a/sawdust-core/src/main/java/com/sawdust/engine/view/cards/CardDeck.java b/sawdust-core/src/main/java/com/sawdust/engine/view/cards/CardDeck.java
index 169b2318de39530a57e1f1ba575ba4a18d73c2ff..5a6a0692f10cb472554552fd832c203ddbfd4627 100644
--- a/sawdust-core/src/main/java/com/sawdust/engine/view/cards/CardDeck.java
+++ b/sawdust-core/src/main/java/com/sawdust/engine/view/cards/CardDeck.java
@@ -8,7 +8,7 @@ import java.util.ArrayList;
 import java.util.HashSet;
 
 import com.sawdust.engine.model.LoadedDeck;
-import com.sawdust.engine.model.Pair;
+import com.sawdust.engine.view.Pair;
 
 public class CardDeck implements Serializable
 {
diff --git a/sawdust-gae/src/main/java/com/sawdust/gae/datastore/entities/GameSession.java b/sawdust-gae/src/main/java/com/sawdust/gae/datastore/entities/GameSession.java
index 64081d5cd34c7a59c22599379d073879988cb531..2dc72acb45c866da8ce53ae7418b8edceae2bd48 100644
--- a/sawdust-gae/src/main/java/com/sawdust/gae/datastore/entities/GameSession.java
+++ b/sawdust-gae/src/main/java/com/sawdust/gae/datastore/entities/GameSession.java
@@ -136,6 +136,8 @@ public class GameSession extends DataObj implements com.sawdust.engine.controlle
     @Persistent
     private String _url;
 
+    private boolean _agentEnabled = true;
+
     protected GameSession()
     {
         super();
@@ -929,4 +931,10 @@ public class GameSession extends DataObj implements com.sawdust.engine.controlle
         }
         return cnt;
     }
+
+    @Override
+    public void setAgentEnabled(boolean b)
+    {
+        _agentEnabled  = b;
+    }
 }
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/appengine/BlackjackTests.java b/sawdust-gae/src/test/java/com/sawdust/test/appengine/BlackjackTests.java
index a92a044edcd7cd29d86ffa9ec38ff7680404f3f0..9c14899ea3935faa084b161207c00def1d58612e 100755
--- a/sawdust-gae/src/test/java/com/sawdust/test/appengine/BlackjackTests.java
+++ b/sawdust-gae/src/test/java/com/sawdust/test/appengine/BlackjackTests.java
@@ -35,7 +35,6 @@ public class BlackjackTests extends TestCase
 {
 
     @Test(timeout = 10000)
-
     public void testGameLose() throws Exception
     {
         DataStore.Clear();
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/appengine/DataStorePerfTest.java b/sawdust-gae/src/test/java/com/sawdust/test/appengine/DataStorePerfTest.java
index 8ac9a50ec3f9bec946c3624d304299d06fea720c..2cb5fc4ec84acfeabfe18e3b8d6846ae2414a9bb 100755
--- a/sawdust-gae/src/test/java/com/sawdust/test/appengine/DataStorePerfTest.java
+++ b/sawdust-gae/src/test/java/com/sawdust/test/appengine/DataStorePerfTest.java
@@ -61,19 +61,33 @@ public class DataStorePerfTest extends TestCase
     private void up() throws GameException
     {
         initAppEngine();
-        
-        _deck = new LoadedDeck();
         _accessData = new AccessToken(USER_ID_1);
         _user = new User(UserTypes.Member, USER_ID_1, null);
         _access1 = new SessionToken(_accessData, _user);
         _account = _access1.doLoadAccount();
+        _player1 = _account.getPlayer();
+        
         _session = new GameSession(_account);
         _blackjackGame = getGame(_session, _accessData, _account);
         _blackjackGame.doSaveState();
+        _deck = new LoadedDeck();
         _blackjackGame.setDeck(_deck);
-        _player1 = _account.getPlayer();
     }
 
+    private void up(String id) throws GameException
+    {
+        initAppEngine();
+        _accessData = new AccessToken(USER_ID_1);
+        _user = new User(UserTypes.Member, USER_ID_1, null);
+        _access1 = new SessionToken(_accessData, _user);
+        _account = _access1.doLoadAccount();
+        _player1 = _account.getPlayer();
+        
+        _session = GameSession.load(id, _player1);
+        if(null == _session) throw new RuntimeException("Unknown Session: " + id);
+        _blackjackGame = (BlackjackGame) _session.getState();
+    }
+    
     private void initAppEngine()
     {
         DataStore.initTest();
@@ -91,21 +105,7 @@ public class DataStorePerfTest extends TestCase
         LocalDatastoreService lds = (LocalDatastoreService) apiProxyLocalImpl.getService("datastore_v3");
         lds.setStoreDelay(0);
     }
-    
-    private void up(String id) throws GameException
-    {
-        initAppEngine();
         
-        _accessData = new AccessToken(USER_ID_1);
-        _user = new User(UserTypes.Member, USER_ID_1, null);
-        _access1 = new SessionToken(_accessData, _user);
-        _account = _access1.doLoadAccount();
-        _player1 = _account.getPlayer();
-        _session = GameSession.load(id, _player1);
-        if(null == _session) throw new RuntimeException("Unknown Session: " + id);
-        _blackjackGame = (BlackjackGame) _session.getState();
-    }
-    
     @Override
     protected void tearDown() throws Exception
     {
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/appengine/DummyGame.java b/sawdust-gae/src/test/java/com/sawdust/test/appengine/DummyGame.java
index bb1d78a12292c1dab40e65d51633335abcfaecbb..1cd4dbb6e4cefaf636e2cca7cf9886efc05e729f 100755
--- a/sawdust-gae/src/test/java/com/sawdust/test/appengine/DummyGame.java
+++ b/sawdust-gae/src/test/java/com/sawdust/test/appengine/DummyGame.java
@@ -22,7 +22,23 @@ import com.sawdust.games.stop.StopGame.GamePhase;
 
 final class DummyGame implements GameState, Serializable
 {
-    DummyGame()
+    @Override
+	public int hashCode() {
+		return 957933997;
+	}
+
+	@Override
+	public boolean equals(Object obj) {
+		if (this == obj)
+			return true;
+		if (obj == null)
+			return false;
+		if (getClass() != obj.getClass())
+			return false;
+		return true;
+	}
+
+	DummyGame()
     {
         super();
     }
@@ -77,12 +93,6 @@ final class DummyGame implements GameState, Serializable
     }
 
     @Override
-    public GameState doUpdate() throws GameException
-    {
-        return this;
-    }
-
-    @Override
     public List<AgentFactory<?>> getAgentFactories()
     {
         return null;
@@ -225,4 +235,10 @@ final class DummyGame implements GameState, Serializable
         return this;
     }
 
+    @Override
+    public GameState doUpdate() throws GameException
+    {
+        throw new RuntimeException("Not Implemented");
+    }
+
 }
\ No newline at end of file
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/gae/Blackjack.java b/sawdust-gae/src/test/java/com/sawdust/test/gae/Blackjack.java
new file mode 100755
index 0000000000000000000000000000000000000000..604c63c939f277c4dff3199232fc6f5e74cea07e
--- /dev/null
+++ b/sawdust-gae/src/test/java/com/sawdust/test/gae/Blackjack.java
@@ -0,0 +1,75 @@
+package com.sawdust.test.gae;
+
+
+import java.util.Date;
+
+import org.junit.Test;
+
+import com.sawdust.engine.controller.entities.Account;
+import com.sawdust.engine.controller.exceptions.GameException;
+import com.sawdust.engine.model.LoadedDeck;
+import com.sawdust.engine.view.AccessToken;
+import com.sawdust.engine.view.cards.Ranks;
+import com.sawdust.engine.view.cards.Suits;
+import com.sawdust.engine.view.config.GameConfig;
+import com.sawdust.gae.datastore.Games;
+import com.sawdust.games.blackjack.BlackjackGame;
+import com.sawdust.games.blackjack.BlackjackGameType;
+import com.sawdust.test.Util;
+
+public class Blackjack extends GameTest<BlackjackGame>
+{
+    public Blackjack()
+    {
+        super("blackjack");
+    }
+
+    private LoadedDeck _deck = new LoadedDeck();
+    
+    @Override
+    protected BlackjackGame getGame(com.sawdust.engine.controller.entities.GameSession session, AccessToken access, Account account) throws GameException
+    {
+        GameConfig prototypeConfig = BlackjackGameType.INSTANCE.getBaseConfig(account);
+        BlackjackGame newGame = (BlackjackGame) Games.NewGame(BlackjackGameType.INSTANCE, prototypeConfig, session, access);
+        newGame.setDeck(_deck);
+        return newGame;
+    }
+    
+    @Test(timeout = 10000)
+    public void testGameWin() throws Exception
+    {
+        System.out.println("\ntestGameWin()\n");
+        Date now = new Date(0);
+        _deck.doAddCard(Ranks.Ace, Suits.Clubs);
+        _deck.doAddCard(Ranks.Ace, Suits.Clubs);
+        _deck.doAddCard(Ranks.King, Suits.Clubs);
+        _deck.doAddCard(Ranks.Jack, Suits.Hearts);
+        _deck.doAddCard(Ranks.Five, Suits.Clubs);
+        _deck.doAddCard(Ranks.Four, Suits.Clubs);
+        PlayerContext player1 = _players.get(0);
+        Util.assertEqual(player1.account.getBalance(), 10);
+        reset();
+        
+        _session.addPlayer(player1.player);
+        _session.doStart();
+        reset();
+        
+        now = Util.printNewMessages(_game, now);
+        Util.assertEqual(player1.account.getBalance(), 10);
+        
+        Util.testGuiCommand(_session, player1.player, "Hit Me");
+        reset();
+        
+        now = Util.printNewMessages(_game, now);
+        Util.testGuiCommand(_session, player1.player, "Hit Me");
+        reset();
+        
+        now = Util.printNewMessages(_game, now);
+        Util.testGuiCommand(_session, player1.player, "Stay");
+        reset();
+
+        now = Util.printNewMessages(_game, now);
+        Util.assertMessageFound(_game, "You Lose.");
+        Util.assertEqual(player1.account.getBalance(), 10);
+    }
+}
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/gae/GameTest.java b/sawdust-gae/src/test/java/com/sawdust/test/gae/GameTest.java
new file mode 100755
index 0000000000000000000000000000000000000000..fccdb2ad36f2cbced03a4b47ab5584b34a96c1f8
--- /dev/null
+++ b/sawdust-gae/src/test/java/com/sawdust/test/gae/GameTest.java
@@ -0,0 +1,97 @@
+package com.sawdust.test.gae;
+
+
+import java.util.ArrayList;
+
+import com.sawdust.engine.controller.entities.Account;
+import com.sawdust.engine.controller.exceptions.GameException;
+import com.sawdust.engine.model.basetypes.GameState;
+import com.sawdust.engine.model.players.Player;
+import com.sawdust.engine.view.AccessToken;
+import com.sawdust.gae.datastore.entities.GameSession;
+import com.sawdust.gae.logic.SessionToken;
+import com.sawdust.gae.logic.User;
+import com.sawdust.gae.logic.User.UserTypes;
+
+public abstract class GameTest<T extends GameState> extends LocalGaeTest
+{
+    protected GameTest(String testDir)
+    {
+        super(testDir);
+    }
+    
+    protected static class PlayerContext
+    {
+        public PlayerContext(String id)
+        {
+            accessToken = new AccessToken(id);
+            user = new User(UserTypes.Member, id, null);
+            sessionToken = new SessionToken(accessToken, user);
+            account = sessionToken.doLoadAccount();
+            player = account.getPlayer();
+        }
+        
+        final User user;
+        final AccessToken accessToken;
+        final SessionToken sessionToken;
+        final Player player;
+        final com.sawdust.gae.datastore.entities.Account account;
+    }
+
+    final ArrayList<PlayerContext> _players = new ArrayList<PlayerContext>();
+    com.sawdust.engine.controller.entities.GameSession _session;
+    T _game;
+    String _sessionId;
+
+    @Override
+    protected void setUp() throws Exception
+    {
+        super.setUp();
+        createContext();
+    }
+
+    private void createContext() throws GameException
+    {
+        _players.clear();
+        for(String id : getPlayerIds())
+        {
+            _players.add(new PlayerContext(id));
+        }
+        
+        PlayerContext firstPlayer = _players.get(0);
+        _session = new GameSession(firstPlayer.account);
+        _game = getGame(_session, firstPlayer.accessToken, firstPlayer.account);
+        _game.doSaveState();
+        _sessionId = _session.getStringId();
+    }
+
+    private void reloadContext(String id) throws GameException
+    {
+        _players.clear();
+        for(String playerid : getPlayerIds())
+        {
+            _players.add(new PlayerContext(playerid));
+        }
+        
+        PlayerContext firstPlayer = _players.get(0);
+        _session = GameSession.load(id, firstPlayer.player);
+        if(null == _session) throw new RuntimeException("Unknown Session: " + id);
+        _game = (T) _session.getState();
+    }
+
+    private String[] getPlayerIds()
+    {
+        return new String[]{"test1"};
+    }
+
+    protected void reset() throws GameException
+    {
+        _game.doSaveState();
+        teardownGaeEnvironment();
+        setupGaeEnvironment();
+        reloadContext(_sessionId);
+    }
+    
+    protected abstract T getGame(com.sawdust.engine.controller.entities.GameSession session, AccessToken access, Account account) throws GameException;
+    
+}
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/gae/GenericPlayUtil.java b/sawdust-gae/src/test/java/com/sawdust/test/gae/GenericPlayUtil.java
new file mode 100755
index 0000000000000000000000000000000000000000..3c967b4a0370a83d9dc62f7f40b3e3f25aea285b
--- /dev/null
+++ b/sawdust-gae/src/test/java/com/sawdust/test/gae/GenericPlayUtil.java
@@ -0,0 +1,91 @@
+package com.sawdust.test.gae;
+
+import java.util.ArrayList;
+import java.util.logging.Logger;
+
+import com.sawdust.engine.controller.exceptions.GameException;
+import com.sawdust.engine.model.basetypes.GameState;
+import com.sawdust.engine.model.players.Agent;
+import com.sawdust.engine.model.players.Participant;
+import com.sawdust.engine.model.state.GameCommand;
+
+public class GenericPlayUtil<T extends GameState>
+{
+    private static final Logger LOG = Logger.getLogger(GenericPlayUtil.class.getName());
+    final T _game;
+    final Participant _players[];
+    
+    public GenericPlayUtil(T game, Participant... players)
+    {
+        super();
+        this._game = game;
+        this._players = players;
+    }
+
+    public GenericPlayUtil(T game, int numberOfPlayers)
+    {
+        this(game, generatePlayers(game, numberOfPlayers));
+    }
+
+    public int runGame() throws Exception
+    {
+        for (Participant p : _players)
+        {
+            _game.getSession().addPlayer(p);
+        }
+        _game.getSession().doStart();
+
+        Participant lastPlayer = null;
+        while (_game.isInPlay())
+        {
+            Participant player = _game.getCurrentPlayer();
+            assert(!player.equals(lastPlayer)) : "The player has not changed";
+            LOG.info("Agent Move: " + player.getId());
+            GameCommand<T> move = ((Agent<T>)player).getMove(_game, player);
+            assert(player.equals(_game.getCurrentPlayer())) : "getMove changed the game...";
+            preMove(move);
+            System.out.println("Command: " + move.getCommandText());
+            move.doCommand(player, null);
+            lastPlayer = player;
+            postMove(move);
+        }
+        return -1;
+    }
+
+    protected void postMove(GameCommand<T> move)
+    {
+        // Do nothing by default
+    }
+
+    protected void preMove(GameCommand<T> move)
+    {
+        // Do nothing by default
+    }
+
+    protected static <T extends GameState> Participant[] generatePlayers(T game, int nPlayers)
+    {
+        ArrayList<Participant> players = new ArrayList<Participant>();
+        for (int i = 0; i < nPlayers; i++)
+        {
+            players.add(newRandomPlayer("test"+i));
+        }
+        return players.toArray(new Participant[]{});
+    }
+
+    protected static <T extends GameState> Participant newRandomPlayer(String userId)
+    {
+        return new Agent<T>(userId){
+
+            @Override
+            public GameCommand<T> getMove(T game, Participant participant)
+                    throws GameException
+            {
+                ArrayList<GameCommand> moves = game.getMoves(participant);
+                GameCommand randomMove = com.sawdust.engine.controller.Util.randomMember(moves.toArray(new GameCommand[] {}));
+                return randomMove;
+            }
+            
+        };
+    }
+
+}
\ No newline at end of file
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/gae/Go_DuelAgent_Normal.java b/sawdust-gae/src/test/java/com/sawdust/test/gae/Go_DuelAgent_Normal.java
new file mode 100755
index 0000000000000000000000000000000000000000..dedc5a2fd8e0184a443807a3adb88817e41d7bf8
--- /dev/null
+++ b/sawdust-gae/src/test/java/com/sawdust/test/gae/Go_DuelAgent_Normal.java
@@ -0,0 +1,63 @@
+package com.sawdust.test.gae;
+
+
+import java.util.Date;
+
+import org.junit.Test;
+
+import com.sawdust.engine.controller.entities.Account;
+import com.sawdust.engine.controller.exceptions.GameException;
+import com.sawdust.engine.model.LoadedDeck;
+import com.sawdust.engine.model.state.GameCommand;
+import com.sawdust.engine.view.AccessToken;
+import com.sawdust.engine.view.cards.Ranks;
+import com.sawdust.engine.view.cards.Suits;
+import com.sawdust.engine.view.config.GameConfig;
+import com.sawdust.gae.datastore.Games;
+import com.sawdust.games.blackjack.BlackjackGame;
+import com.sawdust.games.blackjack.BlackjackGameType;
+import com.sawdust.games.go.GoAgent1;
+import com.sawdust.games.go.GoGame;
+import com.sawdust.games.go.GoGameType;
+import com.sawdust.test.Util;
+
+public class Go_DuelAgent_Normal extends GameTest<GoGame>
+{
+    public Go_DuelAgent_Normal()
+    {
+        super("Go_DuelAgent_Normal");
+    }
+    
+    @Override
+    protected GoGame getGame(com.sawdust.engine.controller.entities.GameSession session, AccessToken access, Account account) throws GameException
+    {
+        session.setAgentEnabled(false);
+        GameConfig prototypeConfig = GoGameType.INSTANCE.getBaseConfig(account);
+        GoGame newGame = (GoGame) Games.NewGame(GoGameType.INSTANCE, prototypeConfig, session, access);
+        return newGame;
+    }
+    
+    @Test(timeout = 10000)
+    public void testGame() throws Exception
+    {
+        System.out.println("\ntestGameWin()\n");
+        GenericPlayUtil<GoGame> gameRunner = new GenericPlayUtil<GoGame>(_game, 
+            GoAgent1.getAgent("AI 1", 1, 15),
+            GoAgent1.getAgent("AI 2", 1, 15))
+        {
+            @Override
+            protected void preMove(GameCommand<GoGame> move)
+            {
+                super.preMove(move);
+                try
+                {
+                    Go_DuelAgent_Normal.this.reset();
+                } catch (GameException e)
+                {
+                    throw new RuntimeException("Error bouncing data service", e);
+                }
+            }
+        };
+        gameRunner.runGame();
+    }
+}
diff --git a/sawdust-gae/src/test/java/com/sawdust/test/gae/LocalGaeTest.java b/sawdust-gae/src/test/java/com/sawdust/test/gae/LocalGaeTest.java
new file mode 100755
index 0000000000000000000000000000000000000000..5d852f0e64bb48f9208bcaf989beb81df1e2c055
--- /dev/null
+++ b/sawdust-gae/src/test/java/com/sawdust/test/gae/LocalGaeTest.java
@@ -0,0 +1,65 @@
+package com.sawdust.test.gae;
+
+import java.io.File;
+
+import junit.framework.TestCase;
+
+import com.google.appengine.api.datastore.dev.LocalDatastoreService;
+import com.google.appengine.tools.development.ApiProxyLocalImpl;
+import com.google.apphosting.api.ApiProxy;
+import com.sawdust.gae.datastore.DataStore;
+import com.sawdust.test.appengine.MockEnvironment;
+
+public abstract class LocalGaeTest extends TestCase
+{
+    final String DEV_SERVER_ROOT;
+    final ApiProxyLocalImpl apiProxyLocalImpl;
+    
+    protected LocalGaeTest(String testDir)
+    {
+       DEV_SERVER_ROOT = "target/testData/" + testDir;
+       apiProxyLocalImpl = new ApiProxyLocalImpl(new File(DEV_SERVER_ROOT))
+       {
+           // Per http://code.google.com/appengine/docs/java/howto/unittesting.html
+       };
+       
+    }
+    
+    
+    @Override
+    protected void setUp() throws Exception
+    {
+        super.setUp();
+        setupGaeEnvironment();
+    }
+    
+    protected void setupGaeEnvironment()
+    {
+        DataStore.initTest();
+        DataStore.Clear();
+        ApiProxy.setEnvironmentForCurrentThread(new MockEnvironment());
+        ApiProxy.setDelegate(apiProxyLocalImpl);
+        //LocalDatastoreService.STORE_DELAY_PROPERTY
+        LocalDatastoreService lds = (LocalDatastoreService) apiProxyLocalImpl.getService("datastore_v3");
+        lds.setStoreDelay(0);
+    }
+        
+    @Override
+    protected void tearDown() throws Exception
+    {
+        teardownGaeEnvironment();
+        super.tearDown();
+    }
+
+    protected void teardownGaeEnvironment()
+    {
+        DataStore.Save();
+        DataStore.Clear();
+        LocalDatastoreService lds = (LocalDatastoreService) apiProxyLocalImpl.getService("datastore_v3");
+        lds.stop();
+        ApiProxy.clearEnvironmentForCurrentThread();
+        ApiProxy.setDelegate(null);
+        ApiProxy.setEnvironmentForCurrentThread(null);
+    }
+    
+}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/games/go/GoAgent1.java b/sawdust-game-library/src/main/java/com/sawdust/games/go/GoAgent1.java
index c8880fefa7a7270f5d64ece24cad9150fd14dac8..2c30c3a27fa6df3daab5963b0bca9c4215047d08 100644
--- a/sawdust-game-library/src/main/java/com/sawdust/games/go/GoAgent1.java
+++ b/sawdust-game-library/src/main/java/com/sawdust/games/go/GoAgent1.java
@@ -113,4 +113,9 @@ public class GoAgent1 extends StopAgent1<GoGame>
       }
       return -1000;
    }
+
+public static Participant getAgent(String string, int i, int j)
+{
+    return new GoAgent1(string, i, j);
+}
 }
diff --git a/sawdust-game-library/src/main/java/com/sawdust/games/go/GoGameType.java b/sawdust-game-library/src/main/java/com/sawdust/games/go/GoGameType.java
index f3f42c16749687aa3000607d06326bf979f8afab..da2fedecafcb9fc74846dd4d6fb4a26a8e92f20a 100644
--- a/sawdust-game-library/src/main/java/com/sawdust/games/go/GoGameType.java
+++ b/sawdust-game-library/src/main/java/com/sawdust/games/go/GoGameType.java
@@ -24,7 +24,7 @@ public class GoGameType extends com.sawdust.engine.model.GameType<GoGame>
     @Override
     public String getDescription()
     {
-        return "Go (碁) is a board game for two players who alternately place black and white stones  on a grid. The object of the game is to control the board  by surrounding territory and stones of the opposing color.";
+        return "Go is a board game for two players who alternately place black and white stones  on a grid. The object of the game is to control the board  by surrounding territory and stones of the opposing color.";
     }
 
     @Override
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
deleted file mode 100755
index 693c80048dfc591835f7aad4cc9c725de2b1df9a..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtLibraryGenerator.java
+++ /dev/null
@@ -1,126 +0,0 @@
-package com.sawdust.util.art;
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.util.HashMap;
-
-public abstract class ArtLibraryGenerator<T extends ArtToken>
-{
-    protected final String _inputPath;
-    protected final String _basePath;
-    protected final String _nameSpace;
-
-    public ArtLibraryGenerator(String inputPath, String resourceOutputPath)
-    {
-        this(inputPath, resourceOutputPath, "com.sawdust.gwt.art");
-    }
-    
-    public ArtLibraryGenerator(String inputPath, String outputPath, String nameSpace)
-    {
-        super();
-        this._nameSpace = nameSpace;
-        this._inputPath = inputPath;
-        this._basePath = outputPath;
-    }
-
-    abstract T[] getTokenSet();
-
-    abstract String getKey();
-
-    public void createLibrary()
-    {
-        HashMap<String, String> files = new HashMap<String, String>();
-        String libraryKey = getKey();
-        String libraryNameSpace = _nameSpace + "." + libraryKey;
-        String libraryPath = _basePath + "/" + libraryNameSpace.replaceAll("\\.", "/") + "/";
-        File interfaceFile = new File(libraryPath + "xface.java");
-        File enumFile = new File(libraryPath + "enumArt.java");
-        File singletonFile = new File(libraryPath + "singleton.java");
-        interfaceFile.getParentFile().mkdirs();
-        FileWriter interfaceWriter;
-        FileWriter enumWriter;
-        FileWriter singletonWriter;
-        try
-        {
-            interfaceWriter = new FileWriter(interfaceFile);
-            interfaceWriter.write(String.format("package %s;\n", libraryNameSpace));
-            interfaceWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
-            interfaceWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
-            interfaceWriter.write(String.format("public interface xface extends ImageBundle \n{\n"));
-
-            enumWriter = new FileWriter(enumFile);
-            enumWriter.write(String.format("package %s;\n", libraryNameSpace));
-            enumWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
-            enumWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
-            enumWriter.write(String.format("public enum enumArt implements GwtSawdustArt \n{\n", libraryKey));
-
-            singletonWriter = new FileWriter(singletonFile);
-            singletonWriter.write(String.format("package %s;\n", libraryNameSpace));
-            singletonWriter.write(String.format("import com.google.gwt.user.client.ui.ImageBundle;\n"));
-            singletonWriter.write(String.format("import com.google.gwt.user.client.ui.AbstractImagePrototype;\n"));
-            singletonWriter.write(String.format("import com.google.gwt.core.client.GWT;\n"));
-            singletonWriter.write(String.format("public class singleton\n" +
-            		"{\n" +
-                    "     private static boolean _init = false;\n" +
-                    "     private static xface _instance = null;\n" +
-            		"     static xface instance() {\n" +
-            		"         if(!_init)\n" +
-            		"         {\n" +
-            		"             _instance = GWT.create(xface.class);\n" +
-            		"             _init = true;" +
-                    "         }\n" +
-            		"         return _instance;\n" +
-            		"         " +
-            		"     }\n" +
-            		"}\n"));
-            singletonWriter.close();
-            
-            
-            for (T token : getTokenSet())
-            {
-                String imagePath = createImage(token);
-                String tokenKey = token.getKey();
-                files.put(tokenKey, imagePath);
-
-                interfaceWriter.write(String.format("@Resource(\"%s\")\n", imagePath));
-                interfaceWriter.write(String.format("AbstractImagePrototype get%s();\n", tokenKey));
-
-                enumWriter.write(String.format("%s%s\n", libraryKey, tokenKey));
-                enumWriter.write(String.format("{\n"));
-                enumWriter.write(String.format("AbstractImagePrototype getImage() {\n return singleton.instance().get%s(); \n}\n", tokenKey));
-                enumWriter.write(String.format("String getId() {\n return \"%s\"; \n}\n", tokenKey));
-                enumWriter.write(String.format("\n},\n", tokenKey));
-            }
-            
-            interfaceWriter.write(String.format("}"));
-            interfaceWriter.close();
-            
-            enumWriter.write(String.format("}"));
-            enumWriter.close();
-        }
-        catch (IOException e)
-        {
-            throw new RuntimeException(e);
-        }
-    }
-
-    protected String createImage(T token)
-    {
-        String relativePath = getKey() + "/" + token.getKey() + ".png";
-        String absolutePath = _basePath + "/" + relativePath;
-        try
-        {
-            File file = new File(absolutePath);
-            file.getParentFile().mkdirs();
-            token.writeImage(file);
-        }
-        catch (FileNotFoundException e)
-        {
-            e.printStackTrace();
-            throw new RuntimeException(e);
-        }
-        return relativePath;
-    }
-}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtToken.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtToken.java
deleted file mode 100755
index cdc64d4d758c8a25a7e03154b87a62dd3ab0f556..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/ArtToken.java
+++ /dev/null
@@ -1,31 +0,0 @@
-package com.sawdust.util.art;
-
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-
-import javax.media.jai.JAI;
-
-public abstract class ArtToken
-{
-    ArtLibraryGenerator<?> _parent;
-    public ArtToken(ArtLibraryGenerator<?> parent)
-    {
-        super();
-        _parent = parent;
-    }
-
-    abstract BufferedImage createImage();
-    
-    void writeImage(File out) throws FileNotFoundException
-    {
-        FileOutputStream stream = new FileOutputStream(out);
-        String format = "PNG";
-        JAI.create("encode", createImage(), stream, format, null);
-
-    }
-
-    abstract String getKey();
-
-}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/CardArt.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/CardArt.java
deleted file mode 100755
index 795d50c5981e560dc587fa519ad67397cb5e7492..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/CardArt.java
+++ /dev/null
@@ -1,91 +0,0 @@
-package com.sawdust.util.art;
-
-import java.awt.Color;
-import java.awt.Font;
-import java.awt.Graphics;
-import java.awt.Image;
-import java.awt.geom.Rectangle2D;
-import java.awt.image.BufferedImage;
-import java.awt.image.ImageObserver;
-import java.awt.image.renderable.ParameterBlock;
-
-import javax.media.jai.InterpolationBicubic;
-import javax.media.jai.JAI;
-
-import com.sawdust.engine.view.cards.Ranks;
-import com.sawdust.engine.view.cards.Suits;
-
-public class CardArt extends ArtToken
-{
-    final Ranks _rank;
-    final Suits _suit;
-    static final int width = 72;
-
-    public CardArt(ArtLibraryGenerator<CardArt> parent, Ranks r, Suits s)
-    {
-        super(parent);
-        _rank = r;
-        _suit = s;
-    }
-
-    @Override
-    BufferedImage createImage()
-    {
-        int height = (int) (width * (4.0 / 3.0));
-        double sz = ((CardGenerator1)_parent).getSize(_rank);
-        
-        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
-
-        Graphics graphics;
-        graphics = image.getGraphics();
-        graphics.setColor(Color.BLACK);
-        graphics.fillRect(-1, -1, width + 2, height + 2);
-        graphics.setColor(Color.WHITE);
-        int w = (int) (width * 0.035);
-        graphics.fillRect(w, w, width - 2 * w, height - 2 * w);
-        graphics.setClip(w, w, width - 2 * w, height - 2 * w);
-
-        w *= 2;
-        Color suitColor = (_suit.equals(Suits.Spades) || _suit.equals(Suits.Clubs)) ? Color.BLACK : Color.RED;
-        String fontName = "Trebuchet MS";
-        int fontStyle = Font.CENTER_BASELINE;
-        String rankLabel = ((CardGenerator1)_parent).getRankLabel(_rank);
-
-        graphics.setColor(suitColor);
-        graphics.setFont(new Font(fontName, fontStyle, (int) (width * 0.7 * Math.pow(sz, 0.7))));
-
-        Rectangle2D labelMetrics = graphics.getFontMetrics().getStringBounds(rankLabel, graphics);
-        graphics.drawString(rankLabel, (int) (w), (int) (w - 0.75 * labelMetrics.getMinY()));
-        Image suitIcon = ((CardGenerator1)_parent).getImage(_suit);
-        ImageObserver observer = new ImageObserver()
-        {
-            public boolean imageUpdate(Image img, int infoflags, int x, int y, int pwidth, int pheight)
-            {
-                return false;
-            }
-        };
-
-        image = JAI.create(
-                "rotate",
-                new ParameterBlock().addSource(image).add((float) (width / 2.0)).add((float) (height / 2.0)).add((float) Math.PI).add(
-                        new InterpolationBicubic(4)), null).getAsBufferedImage();
-        graphics = image.getGraphics();
-
-        graphics.setColor(suitColor);
-        graphics.setFont(new Font(fontName, fontStyle, (int) (width * 0.7 * Math.pow(sz, 0.7))));
-        graphics.drawString(rankLabel, (int) (w), (int) (w - 0.75 * labelMetrics.getMinY()));
-        graphics.drawImage(suitIcon, (int) (width * (0.5 - sz)), (int) ((height * 0.5) - (width * sz)), (int) (width * (0.5 + sz)),
-                (int) ((height * 0.5) + (width * sz)), 0, 0, suitIcon.getWidth(observer), suitIcon.getHeight(observer), observer);
-
-        return image;
-    }
-
-    @Override
-    String getKey()
-    {
-        String suitLabel = _suit.toString();
-        String rankLabel = ((CardGenerator1)_parent).getRankLabel(_rank);
-        return rankLabel + suitLabel;
-    }
-
-}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/CardGenerator1.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/CardGenerator1.java
deleted file mode 100644
index 937c32836fc8381c48df23ea3aa918eb53275a08..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/CardGenerator1.java
+++ /dev/null
@@ -1,110 +0,0 @@
-package com.sawdust.util.art;
-
-import java.awt.Image;
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-
-import javax.media.jai.JAI;
-
-import com.sawdust.engine.view.cards.Card;
-import com.sawdust.engine.view.cards.Ranks;
-import com.sawdust.engine.view.cards.Suits;
-import com.sun.media.jai.codec.FileSeekableStream;
-
-public class CardGenerator1 extends ArtLibraryGenerator<CardArt>
-{
-    String resourcePath = "";
-    String outputPath = "";
-
-    public CardGenerator1(String inputPath, String basePath)
-    {
-        super(inputPath, basePath);
-        resourcePath = inputPath;
-        outputPath = basePath;
-    }
-
-    /**
-     * @param args
-     * @throws IOException
-     */
-    public static void main(String[] args) throws IOException
-    {
-        new CardGenerator1(args[0], args[1]).createLibrary();
-    }
-
-    double getSize(Ranks r)
-    {
-        if (r.getOrder() > Ranks.Ten.getOrder())
-        {
-            return 0.45 + ((r.getOrder() - 10) * 0.035);
-        }
-        else
-        {
-            return 0.3 + ((r.getOrder() - 2) * 0.007);
-        }
-    }
-
-    String getRankLabel(Ranks r)
-    {
-        if (r == Ranks.Ten) return "10";
-        return r.toString();
-    }
-
-    public Image getImage(Suits s)
-    {
-        File outFile;
-        if (s.equals(Suits.Clubs))
-        {
-            outFile = new File(resourcePath + "/input/club.png");
-        }
-        else if (s.equals(Suits.Spades))
-        {
-            outFile = new File(resourcePath + "/input/spade.png");
-        }
-        else if (s.equals(Suits.Diamonds))
-        {
-            outFile = new File(resourcePath + "/input/diamond.png");
-        }
-        else if (s.equals(Suits.Hearts))
-        {
-            outFile = new File(resourcePath + "/input/heart.png");
-        }
-        else
-        {
-            throw new RuntimeException();
-        }
-        try
-        {
-            return JAI.create("stream", new FileSeekableStream(outFile)).getAsBufferedImage();
-        }
-        catch (IOException e)
-        {
-            throw new RuntimeException(e);
-        }
-    }
-
-    @Override
-    String getKey()
-    {
-        return "cards1";
-    }
-
-    @Override
-    CardArt[] getTokenSet()
-    {
-        ArrayList<CardArt> returnList = new ArrayList<CardArt>();
-        for (final Suits s : Suits.values())
-        {
-            if (s == Suits.Null) continue;
-            for (final Ranks r : Ranks.values())
-            {
-                if (r == Ranks.Null) continue;
-                Card card = new Card(r, s, 0);
-                returnList.add(new CardArt(this, r, s));
-            }
-        }
-        return returnList.toArray(new CardArt[] {});
-    }
-
-}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterArt.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterArt.java
deleted file mode 100755
index f95599c0180f76979e11da739c018ff0b3a47ae1..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterArt.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package com.sawdust.util.art;
-
-import java.awt.Color;
-import java.awt.Font;
-import java.awt.Graphics;
-import java.awt.geom.Rectangle2D;
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.FileOutputStream;
-
-public class LetterArt extends ArtToken
-{
-    String letter; 
-    Color color;
-    int width;
-    
-    public LetterArt(ArtLibraryGenerator<?> parent, String letter, Color color, int width)
-    {
-        super(parent);
-        this.letter = letter;
-        this.color = color;
-        this.width = width;
-    }
-
-    BufferedImage createImage()
-    {
-        BufferedImage image = new BufferedImage(width, width, BufferedImage.TYPE_INT_RGB);
-        Graphics graphics = image.getGraphics();
-
-        graphics.setFont(new Font("Canarsie Slab JL", Font.BOLD, (int)(width*0.90)));
-        graphics.setColor(color);
-        String l = letter.substring(0,1);
-        Rectangle2D labelMetrics = graphics.getFontMetrics().getStringBounds(l, graphics);
-        graphics.drawString(l, 
-                (int)(width - labelMetrics.getWidth())/2, 
-                (int)(0.8*labelMetrics.getHeight() + (width - labelMetrics.getHeight())/2));
-        return image;
-    }
-
-    @Override
-    String getKey()
-    {
-        return letter;
-    };
-}
diff --git a/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterGenerator1.java b/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterGenerator1.java
deleted file mode 100644
index 3c661cc616f93dd5a065121153f08be8ca716080..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/main/java/com/sawdust/util/art/LetterGenerator1.java
+++ /dev/null
@@ -1,51 +0,0 @@
-package com.sawdust.util.art;
-
-import java.awt.Color;
-import java.awt.Font;
-import java.awt.Graphics;
-import java.awt.geom.Rectangle2D;
-import java.awt.image.BufferedImage;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.ArrayList;
-
-import javax.media.jai.JAI;
-
-public class LetterGenerator1 extends ArtLibraryGenerator<LetterArt>
-{
-
-    public static void main(String[] args) throws IOException
-    {
-        new LetterGenerator1(args[0], args[1]).createLibrary();
-    }
-
-    static final int size = 50;
-    static final String letters[] =
-    { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
-
-    public LetterGenerator1(String string, String string2)
-    {
-        super(string, string2);
-    }
-
-    @Override
-    LetterArt[] getTokenSet()
-    {
-        ArrayList<LetterArt> returnList = new ArrayList<LetterArt>(); 
-        for (String letter : letters)
-        {
-            returnList.add(new LetterArt(this, letter+"1", Color.WHITE, size));
-            returnList.add(new LetterArt(this, letter+"2", Color.GREEN, size));
-        }
-        return returnList.toArray(new LetterArt[]{});
-    }
-
-    @Override
-    String getKey()
-    {
-        return "letters1";
-    }
-
-}
diff --git a/sawdust-game-library/src/test/java/com/sawdust/test/ArtGeneratorTests.java b/sawdust-game-library/src/test/java/com/sawdust/test/ArtGeneratorTests.java
deleted file mode 100755
index c27e05582b78e7c7fc6a17be2d445de11a6197da..0000000000000000000000000000000000000000
--- a/sawdust-game-library/src/test/java/com/sawdust/test/ArtGeneratorTests.java
+++ /dev/null
@@ -1,24 +0,0 @@
-package com.sawdust.test;
-
-import junit.framework.TestCase;
-
-import org.junit.Test;
-
-import com.sawdust.util.art.CardGenerator1;
-import com.sawdust.util.art.LetterGenerator1;
-
-public class ArtGeneratorTests extends TestCase
-{
-
-    @Test(timeout = 10000)
-    public void testCards() throws Exception
-    {
-        new CardGenerator1("src/main/art", "target/test/art").createLibrary();
-    }
-
-    @Test(timeout = 10000)
-    public void testLetters() throws Exception
-    {
-        new LetterGenerator1("src/main/art", "target/test/art").createLibrary();
-    }
-}
diff --git a/sawdust-game-library/src/test/java/com/sawdust/test/mock/MockGameSession.java b/sawdust-game-library/src/test/java/com/sawdust/test/mock/MockGameSession.java
index a96cad1590765542c1f867d5538c518b95a9be97..fad34255396ce3c865b80e35656592983304aea1 100644
--- a/sawdust-game-library/src/test/java/com/sawdust/test/mock/MockGameSession.java
+++ b/sawdust-game-library/src/test/java/com/sawdust/test/mock/MockGameSession.java
@@ -224,4 +224,11 @@ public class MockGameSession implements GameSession, Serializable
         assert(false);
         return 1;
     }
+
+    @Override
+    public void setAgentEnabled(boolean b)
+    {
+        throw new RuntimeException("Not implemented");
+        
+    }
 }
diff --git a/sawdust-gwt/pom.xml b/sawdust-gwt/pom.xml
index d5089c0e8147b0990a155dc781cf8650c8b7304b..0e78be67b8e5c50d600e8e36e53bef6349dc177f 100755
--- a/sawdust-gwt/pom.xml
+++ b/sawdust-gwt/pom.xml
@@ -91,6 +91,11 @@
 			<artifactId>GwtFacebook</artifactId>
 			<version>1.0.9</version>
 		</dependency>
+		<dependency>
+			<groupId>com.sawdust</groupId>
+			<artifactId>sawdust-art</artifactId>
+			<version>0.0.1-SNAPSHOT</version>
+		</dependency>
 		<!-- 
 		 -->
 	</dependencies>
diff --git a/sawdust-gwt/src/main/java/com/sawdust/GameClient.gwt.xml b/sawdust-gwt/src/main/java/com/sawdust/GameClient.gwt.xml
index 73eecf29b10dff43a3dc0033ae024c0c275f2cdc..bff14bf49f11aa1654bbfc3ee75f1c757a6579bd 100755
--- a/sawdust-gwt/src/main/java/com/sawdust/GameClient.gwt.xml
+++ b/sawdust-gwt/src/main/java/com/sawdust/GameClient.gwt.xml
@@ -1,11 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module rename-to='gameClient'>
-
 	<inherits name='com.google.gwt.user.User' />
 	<inherits name="com.google.gwt.user.Debug" />
-    <set-property name="gwt.enableDebugId" value="true" />
     <inherits name="com.gwittit.GwtFacebook"/>
 	<inherits name='com.sawdust.engine.SawdustEngine' />
+    <inherits name='com.sawdust.gwt.ArtLibrary' />
+
+    <set-property name="gwt.enableDebugId" value="true" />
 
 	<source path="common/gwt" />
 	<source path="client/gwt" />
diff --git a/sawdust-gwt/src/main/java/com/sawdust/GameCreator.gwt.xml b/sawdust-gwt/src/main/java/com/sawdust/GameCreator.gwt.xml
index 954f8d97195485f1938f8c32648096b83af4572a..46e3b38e8bd28519b59dfd3739ab92c6634aa9e2 100755
--- a/sawdust-gwt/src/main/java/com/sawdust/GameCreator.gwt.xml
+++ b/sawdust-gwt/src/main/java/com/sawdust/GameCreator.gwt.xml
@@ -1,14 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module rename-to='gameCreator'>
 	<inherits name='com.google.gwt.user.User' />
-
 	<inherits name="com.google.gwt.user.Debug" />
-	<set-property name="gwt.enableDebugId" value="true" />
     <inherits name="com.gwittit.GwtFacebook"/>
-<!-- 
- -->
+    <inherits name='com.sawdust.engine.SawdustEngine' />
+    <inherits name='com.sawdust.gwt.ArtLibrary' />
+
+	<set-property name="gwt.enableDebugId" value="true" />
 
-	<inherits name='com.sawdust.engine.SawdustEngine' />
 	<stylesheet src="gwt/sawdust/sawdust.css" />
 	<source path="common\gwt" />
 	<source path="client\gwt" />
diff --git a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/ArtManager.java b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/ArtManager.java
deleted file mode 100755
index cf3771e2f31408c886b3166d7d0db3e23c5df659..0000000000000000000000000000000000000000
--- a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/ArtManager.java
+++ /dev/null
@@ -1,842 +0,0 @@
-package com.sawdust.client.gwt.art;
-
-import java.util.HashMap;
-
-import com.google.gwt.core.client.GWT;
-import com.google.gwt.user.client.ui.AbstractImagePrototype;
-import com.google.gwt.user.client.ui.ImageBundle;
-import com.sawdust.client.gwt.util.ImageCallback;
-import com.sawdust.engine.view.cards.Card;
-import com.sawdust.engine.view.cards.Ranks;
-import com.sawdust.engine.view.cards.Suits;
-
-public class ArtManager
-{
-    public static final ArtManager Instance = new ArtManager();
-    public final HashMap<String, ImageBundle> ImageBundles = new HashMap<String, ImageBundle>();
-    public final HashMap<String, HashMap<String, ImageCallback>> ImageRegistry = new HashMap<String, HashMap<String, ImageCallback>>();
-    private LetterBundle letterBundle = null;
-
-    private ArtManager()
-    {
-       ImageBundles.put("CARD1", (CardBundle) GWT.create(CardBundle.class));
-       ImageBundles.put("GO1", (GoBundle) GWT.create(GoBundle.class));
-       ImageBundles.put("WORD1", (LetterBundle) GWT.create(LetterBundle.class));
-       
-        registerCards();
-        registerLetters();
-        registerGo();
-    }
-
-    public AbstractImagePrototype getImage(final String lib, final String id)
-    {
-        if (ImageRegistry.containsKey(lib))
-        {
-           HashMap<String, ImageCallback> hashMap = ImageRegistry.get(lib);
-           ImageBundle bundle = ImageBundles.get(lib);
-           if (hashMap.containsKey(id))
-           {
-               return (hashMap.get(id)).getImage(bundle);
-           }
-        }
-        System.err.println("ImageRegistry.containsKey(id) == false; id= " + id);
-        return null;
-    }
-
-    private void ImageRegistry_put(Card card, ImageCallback imageCallback)
-    {
-       String lib = "CARD1";
-       String str = card.CardId();
-       ImageRegistry_put(lib, str, imageCallback);
-    }
-
-    private void  ImageRegistry_put(String lib, String str, ImageCallback imageCallback)
-    {
-       if(!this.ImageRegistry.containsKey(lib)) this.ImageRegistry.put(lib, new HashMap<String, ImageCallback>());
-       this.ImageRegistry.get(lib).put(str, imageCallback);
-    }
-
-     private void ImageRegistry_put(String str, ImageCallback imageCallback)
-    {
-        String lib = "WORD1";
-        if(str.startsWith("GO:")) lib = "GO1";
-        ImageRegistry_put(lib, str, imageCallback);
-    }
-
-    private void registerCards()
-    {
-       ImageRegistry_put("CARD1", "VR", new ImageCallback()
-       {
-           public AbstractImagePrototype getImage(final Object self)
-           {
-               return ((CardBundle) self).getRedDown();
-           }
-       });
-
-       ImageRegistry_put(new Card(Ranks.Ace, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getAceClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Eight, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getEightClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Five, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFiveClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Four, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFourClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Jack, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getJackClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.King, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getKingClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Nine, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getNineClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Queen, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getQueenClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Seven, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSevenClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Six, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSixClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ten, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTenClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Three, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getThreeClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Two, Suits.Clubs, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTwoClubs();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ace, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getAceDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Eight, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getEightDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Five, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFiveDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Four, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFourDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Jack, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getJackDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.King, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getKingDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Nine, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getNineDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Queen, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getQueenDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Seven, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSevenDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Six, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSixDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ten, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTenDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Three, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getThreeDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Two, Suits.Diamonds, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTwoDiamonds();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ace, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getAceHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Eight, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getEightHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Five, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFiveHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Four, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFourHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Jack, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getJackHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.King, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getKingHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Nine, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getNineHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Queen, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getQueenHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Seven, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSevenHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Six, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSixHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ten, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTenHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Three, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getThreeHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Two, Suits.Hearts, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTwoHearts();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ace, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getAceSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Eight, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getEightSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Five, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFiveSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Four, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getFourSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Jack, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getJackSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.King, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getKingSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Nine, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getNineSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Queen, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getQueenSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Seven, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSevenSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Six, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getSixSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Ten, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTenSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Three, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getThreeSpades();
-            }
-        });
-        ImageRegistry_put(new Card(Ranks.Two, Suits.Spades, 0), new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((CardBundle) self).getTwoSpades();
-            }
-        });
-    }
-
-
-   private void registerGo()
-    {
-        ImageRegistry_put("GO:BOARD", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((GoBundle) self).getBoard();
-            }
-        });
-        ImageRegistry_put("GO:WHITE", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((GoBundle) self).getWhite();
-            }
-        });
-        ImageRegistry_put("GO:BLACK", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((GoBundle) self).getBlack();
-            }
-        });
-        ImageRegistry_put("GO:HIGHLIGHT", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((GoBundle) self).getHighlight();
-            }
-        });
-    }
-
-   private void registerLetters()
-    {
-        ImageRegistry_put("A", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getA1();
-            }
-        });
-        ImageRegistry_put("A2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getA2();
-            }
-        });
-        ImageRegistry_put("B", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getB1();
-            }
-        });
-        ImageRegistry_put("B2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getB2();
-            }
-        });
-        ImageRegistry_put("C", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getC1();
-            }
-        });
-        ImageRegistry_put("C2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getC2();
-            }
-        });
-        ImageRegistry_put("D", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getD1();
-            }
-        });
-        ImageRegistry_put("D2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getD2();
-            }
-        });
-        ImageRegistry_put("E", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getE1();
-            }
-        });
-        ImageRegistry_put("E2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getE2();
-            }
-        });
-        ImageRegistry_put("F", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getF1();
-            }
-        });
-        ImageRegistry_put("F2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getF2();
-            }
-        });
-        ImageRegistry_put("G", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getG1();
-            }
-        });
-        ImageRegistry_put("G2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getG2();
-            }
-        });
-        ImageRegistry_put("H", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getH1();
-            }
-        });
-        ImageRegistry_put("H2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getH2();
-            }
-        });
-        ImageRegistry_put("I", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getI1();
-            }
-        });
-        ImageRegistry_put("I2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getI2();
-            }
-        });
-        ImageRegistry_put("J", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getJ1();
-            }
-        });
-        ImageRegistry_put("J2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getJ2();
-            }
-        });
-        ImageRegistry_put("K", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getK1();
-            }
-        });
-        ImageRegistry_put("K2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getK2();
-            }
-        });
-        ImageRegistry_put("L", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getL1();
-            }
-        });
-        ImageRegistry_put("L2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getL2();
-            }
-        });
-        ImageRegistry_put("M", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getM1();
-            }
-        });
-        ImageRegistry_put("M2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getM2();
-            }
-        });
-        ImageRegistry_put("N", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getN1();
-            }
-        });
-        ImageRegistry_put("N2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getN2();
-            }
-        });
-        ImageRegistry_put("O", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getO1();
-            }
-        });
-        ImageRegistry_put("O2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getO2();
-            }
-        });
-        ImageRegistry_put("P", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getP1();
-            }
-        });
-        ImageRegistry_put("P2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getP2();
-            }
-        });
-        ImageRegistry_put("Q", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getQ1();
-            }
-        });
-        ImageRegistry_put("Q2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getQ2();
-            }
-        });
-        ImageRegistry_put("R", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getR1();
-            }
-        });
-        ImageRegistry_put("R2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getR2();
-            }
-        });
-        ImageRegistry_put("S", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getS1();
-            }
-        });
-        ImageRegistry_put("S2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getS2();
-            }
-        });
-        ImageRegistry_put("T", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getT1();
-            }
-        });
-        ImageRegistry_put("T2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getT2();
-            }
-        });
-        ImageRegistry_put("U", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getU1();
-            }
-        });
-        ImageRegistry_put("U2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getU2();
-            }
-        });
-        ImageRegistry_put("V", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getV1();
-            }
-        });
-        ImageRegistry_put("V2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getV2();
-            }
-        });
-        ImageRegistry_put("W", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getW1();
-            }
-        });
-        ImageRegistry_put("W2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getW2();
-            }
-        });
-        ImageRegistry_put("X", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getX1();
-            }
-        });
-        ImageRegistry_put("X2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getX2();
-            }
-        });
-        ImageRegistry_put("Y", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getY1();
-            }
-        });
-        ImageRegistry_put("Y2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getY2();
-            }
-        });
-        ImageRegistry_put("Z", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getZ1();
-            }
-        });
-        ImageRegistry_put("Z2", new ImageCallback()
-        {
-            public AbstractImagePrototype getImage(final Object self)
-            {
-                return ((LetterBundle) self).getZ2();
-            }
-        });
-    }
-}
diff --git a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/CardBundle.java b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/CardBundle.java
deleted file mode 100755
index 836b8046fd7cf255439573989c9c050d8b59f5b8..0000000000000000000000000000000000000000
--- a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/CardBundle.java
+++ /dev/null
@@ -1,171 +0,0 @@
-package com.sawdust.client.gwt.art;
-
-import com.google.gwt.user.client.ui.AbstractImagePrototype;
-import com.google.gwt.user.client.ui.ImageBundle;
-
-public interface CardBundle extends ImageBundle
-{
-
-    @Resource("cards1/AC.png")
-    AbstractImagePrototype getAceClubs();
-
-    @Resource("cards1/AD.png")
-    AbstractImagePrototype getAceDiamonds();
-
-    @Resource("cards1/AH.png")
-    AbstractImagePrototype getAceHearts();
-
-    @Resource("cards1/AS.png")
-    AbstractImagePrototype getAceSpades();
-
-    @Resource("cards1/VB.png")
-    AbstractImagePrototype getBlackDown();
-
-    @Resource("cards1/8C.png")
-    AbstractImagePrototype getEightClubs();
-
-    @Resource("cards1/8D.png")
-    AbstractImagePrototype getEightDiamonds();
-
-    @Resource("cards1/8H.png")
-    AbstractImagePrototype getEightHearts();
-
-    @Resource("cards1/8S.png")
-    AbstractImagePrototype getEightSpades();
-
-    @Resource("cards1/5C.png")
-    AbstractImagePrototype getFiveClubs();
-
-    @Resource("cards1/5D.png")
-    AbstractImagePrototype getFiveDiamonds();
-
-    @Resource("cards1/5H.png")
-    AbstractImagePrototype getFiveHearts();
-
-    @Resource("cards1/5S.png")
-    AbstractImagePrototype getFiveSpades();
-
-    @Resource("cards1/4C.png")
-    AbstractImagePrototype getFourClubs();
-
-    @Resource("cards1/4D.png")
-    AbstractImagePrototype getFourDiamonds();
-
-    @Resource("cards1/4H.png")
-    AbstractImagePrototype getFourHearts();
-
-    @Resource("cards1/4S.png")
-    AbstractImagePrototype getFourSpades();
-
-    @Resource("cards1/JC.png")
-    AbstractImagePrototype getJackClubs();
-
-    @Resource("cards1/JD.png")
-    AbstractImagePrototype getJackDiamonds();
-
-    @Resource("cards1/JH.png")
-    AbstractImagePrototype getJackHearts();
-
-    @Resource("cards1/JS.png")
-    AbstractImagePrototype getJackSpades();
-
-    @Resource("cards1/KC.png")
-    AbstractImagePrototype getKingClubs();
-
-    @Resource("cards1/KD.png")
-    AbstractImagePrototype getKingDiamonds();
-
-    @Resource("cards1/KH.png")
-    AbstractImagePrototype getKingHearts();
-
-    @Resource("cards1/KS.png")
-    AbstractImagePrototype getKingSpades();
-
-    @Resource("cards1/9C.png")
-    AbstractImagePrototype getNineClubs();
-
-    @Resource("cards1/9D.png")
-    AbstractImagePrototype getNineDiamonds();
-
-    @Resource("cards1/9H.png")
-    AbstractImagePrototype getNineHearts();
-
-    @Resource("cards1/9S.png")
-    AbstractImagePrototype getNineSpades();
-
-    @Resource("cards1/QC.png")
-    AbstractImagePrototype getQueenClubs();
-
-    @Resource("cards1/QD.png")
-    AbstractImagePrototype getQueenDiamonds();
-
-    @Resource("cards1/QH.png")
-    AbstractImagePrototype getQueenHearts();
-
-    @Resource("cards1/QS.png")
-    AbstractImagePrototype getQueenSpades();
-
-    @Resource("cards1/VR.png")
-    AbstractImagePrototype getRedDown();
-
-    @Resource("cards1/7C.png")
-    AbstractImagePrototype getSevenClubs();
-
-    @Resource("cards1/7D.png")
-    AbstractImagePrototype getSevenDiamonds();
-
-    @Resource("cards1/7H.png")
-    AbstractImagePrototype getSevenHearts();
-
-    @Resource("cards1/7S.png")
-    AbstractImagePrototype getSevenSpades();
-
-    @Resource("cards1/6C.png")
-    AbstractImagePrototype getSixClubs();
-
-    @Resource("cards1/6D.png")
-    AbstractImagePrototype getSixDiamonds();
-
-    @Resource("cards1/6H.png")
-    AbstractImagePrototype getSixHearts();
-
-    @Resource("cards1/6S.png")
-    AbstractImagePrototype getSixSpades();
-
-    @Resource("cards1/TC.png")
-    AbstractImagePrototype getTenClubs();
-
-    @Resource("cards1/TD.png")
-    AbstractImagePrototype getTenDiamonds();
-
-    @Resource("cards1/TH.png")
-    AbstractImagePrototype getTenHearts();
-
-    @Resource("cards1/TS.png")
-    AbstractImagePrototype getTenSpades();
-
-    @Resource("cards1/3C.png")
-    AbstractImagePrototype getThreeClubs();
-
-    @Resource("cards1/3D.png")
-    AbstractImagePrototype getThreeDiamonds();
-
-    @Resource("cards1/3H.png")
-    AbstractImagePrototype getThreeHearts();
-
-    @Resource("cards1/3S.png")
-    AbstractImagePrototype getThreeSpades();
-
-    @Resource("cards1/2C.png")
-    AbstractImagePrototype getTwoClubs();
-
-    @Resource("cards1/2D.png")
-    AbstractImagePrototype getTwoDiamonds();
-
-    @Resource("cards1/2H.png")
-    AbstractImagePrototype getTwoHearts();
-
-    @Resource("cards1/2S.png")
-    AbstractImagePrototype getTwoSpades();
-
-}
diff --git a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/GoBundle.java b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/GoBundle.java
deleted file mode 100755
index 850e69ad575a1ba139e0f5e93ef8780ac64c3e30..0000000000000000000000000000000000000000
--- a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/GoBundle.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package com.sawdust.client.gwt.art;
-
-import com.google.gwt.user.client.ui.AbstractImagePrototype;
-import com.google.gwt.user.client.ui.ImageBundle;
-
-public interface GoBundle extends ImageBundle
-{
-
-    @Resource("go1/black.png")
-    AbstractImagePrototype getBlack();
-
-    @Resource("go1/board.png")
-    AbstractImagePrototype getBoard();
-
-    @Resource("go1/highlight.png")
-    AbstractImagePrototype getHighlight();
-
-    @Resource("go1/white.png")
-    AbstractImagePrototype getWhite();
-}
diff --git a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/LetterBundle.java b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/LetterBundle.java
deleted file mode 100755
index f39686aee3726687d2afbd48272936ccc9a525bd..0000000000000000000000000000000000000000
--- a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/art/LetterBundle.java
+++ /dev/null
@@ -1,165 +0,0 @@
-package com.sawdust.client.gwt.art;
-
-import com.google.gwt.user.client.ui.AbstractImagePrototype;
-import com.google.gwt.user.client.ui.ImageBundle;
-
-public interface LetterBundle extends ImageBundle
-{
-
-    @Resource("letters1/A1.png")
-    AbstractImagePrototype getA1();
-
-    @Resource("letters1/A2.png")
-    AbstractImagePrototype getA2();
-
-    @Resource("letters1/B1.png")
-    AbstractImagePrototype getB1();
-
-    @Resource("letters1/B2.png")
-    AbstractImagePrototype getB2();
-
-    @Resource("letters1/C1.png")
-    AbstractImagePrototype getC1();
-
-    @Resource("letters1/C2.png")
-    AbstractImagePrototype getC2();
-
-    @Resource("letters1/D1.png")
-    AbstractImagePrototype getD1();
-
-    @Resource("letters1/D2.png")
-    AbstractImagePrototype getD2();
-
-    @Resource("letters1/E1.png")
-    AbstractImagePrototype getE1();
-
-    @Resource("letters1/E2.png")
-    AbstractImagePrototype getE2();
-
-    @Resource("letters1/F1.png")
-    AbstractImagePrototype getF1();
-
-    @Resource("letters1/F2.png")
-    AbstractImagePrototype getF2();
-
-    @Resource("letters1/G1.png")
-    AbstractImagePrototype getG1();
-
-    @Resource("letters1/G2.png")
-    AbstractImagePrototype getG2();
-
-    @Resource("letters1/H1.png")
-    AbstractImagePrototype getH1();
-
-    @Resource("letters1/H2.png")
-    AbstractImagePrototype getH2();
-
-    @Resource("letters1/I1.png")
-    AbstractImagePrototype getI1();
-
-    @Resource("letters1/I2.png")
-    AbstractImagePrototype getI2();
-
-    @Resource("letters1/J1.png")
-    AbstractImagePrototype getJ1();
-
-    @Resource("letters1/J2.png")
-    AbstractImagePrototype getJ2();
-
-    @Resource("letters1/K1.png")
-    AbstractImagePrototype getK1();
-
-    @Resource("letters1/K2.png")
-    AbstractImagePrototype getK2();
-
-    @Resource("letters1/L1.png")
-    AbstractImagePrototype getL1();
-
-    @Resource("letters1/L2.png")
-    AbstractImagePrototype getL2();
-
-    @Resource("letters1/M1.png")
-    AbstractImagePrototype getM1();
-
-    @Resource("letters1/M2.png")
-    AbstractImagePrototype getM2();
-
-    @Resource("letters1/N1.png")
-    AbstractImagePrototype getN1();
-
-    @Resource("letters1/N2.png")
-    AbstractImagePrototype getN2();
-
-    @Resource("letters1/O1.png")
-    AbstractImagePrototype getO1();
-
-    @Resource("letters1/O2.png")
-    AbstractImagePrototype getO2();
-
-    @Resource("letters1/P1.png")
-    AbstractImagePrototype getP1();
-
-    @Resource("letters1/P2.png")
-    AbstractImagePrototype getP2();
-
-    @Resource("letters1/Q1.png")
-    AbstractImagePrototype getQ1();
-
-    @Resource("letters1/Q2.png")
-    AbstractImagePrototype getQ2();
-
-    @Resource("letters1/R1.png")
-    AbstractImagePrototype getR1();
-
-    @Resource("letters1/R2.png")
-    AbstractImagePrototype getR2();
-
-    @Resource("letters1/S1.png")
-    AbstractImagePrototype getS1();
-
-    @Resource("letters1/S2.png")
-    AbstractImagePrototype getS2();
-
-    @Resource("letters1/T1.png")
-    AbstractImagePrototype getT1();
-
-    @Resource("letters1/T2.png")
-    AbstractImagePrototype getT2();
-
-    @Resource("letters1/U1.png")
-    AbstractImagePrototype getU1();
-
-    @Resource("letters1/U2.png")
-    AbstractImagePrototype getU2();
-
-    @Resource("letters1/V1.png")
-    AbstractImagePrototype getV1();
-
-    @Resource("letters1/V2.png")
-    AbstractImagePrototype getV2();
-
-    @Resource("letters1/W1.png")
-    AbstractImagePrototype getW1();
-
-    @Resource("letters1/W2.png")
-    AbstractImagePrototype getW2();
-
-    @Resource("letters1/X1.png")
-    AbstractImagePrototype getX1();
-
-    @Resource("letters1/X2.png")
-    AbstractImagePrototype getX2();
-
-    @Resource("letters1/Y1.png")
-    AbstractImagePrototype getY1();
-
-    @Resource("letters1/Y2.png")
-    AbstractImagePrototype getY2();
-
-    @Resource("letters1/Z1.png")
-    AbstractImagePrototype getZ1();
-
-    @Resource("letters1/Z2.png")
-    AbstractImagePrototype getZ2();
-
-}
diff --git a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/widgets/TokenWidget.java b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/widgets/TokenWidget.java
index 9627f697261d7792c5f6687651f361b4eab94fef..c0c4ce2081b9954b76fdfbb84fd7d85d5cea0c63 100755
--- a/sawdust-gwt/src/main/java/com/sawdust/client/gwt/widgets/TokenWidget.java
+++ b/sawdust-gwt/src/main/java/com/sawdust/client/gwt/widgets/TokenWidget.java
@@ -16,12 +16,12 @@ import com.google.gwt.user.client.Timer;
 import com.google.gwt.user.client.ui.AbstractImagePrototype;
 import com.google.gwt.user.client.ui.Image;
 import com.sawdust.client.gwt.GameClient;
-import com.sawdust.client.gwt.art.ArtManager;
 import com.sawdust.client.gwt.util.CommandExecutor;
 import com.sawdust.client.gwt.util.EventListener;
 import com.sawdust.engine.view.game.Token;
 import com.sawdust.engine.view.geometry.Position;
 import com.sawdust.engine.view.geometry.Vector;
+import com.sawdust.gwt.art.ArtManager;
 
 /**
  * @author Administrator
diff --git a/sawdust-gwt/src/main/war/facebook.jsp b/sawdust-gwt/src/main/war/facebook.jsp
index bfd7316e7823f5c915f716fd45d10ffcb2d61f37..8bfdcdda52bb603bece08fe6e2eac21333903dce 100755
--- a/sawdust-gwt/src/main/war/facebook.jsp
+++ b/sawdust-gwt/src/main/war/facebook.jsp
@@ -23,10 +23,7 @@ if(request.getPathInfo().startsWith("/f/"))
 }
 %>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser">
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
   String perm = FacebookUser.GetFbParam(request, "fb_sig_ext_perms");
diff --git a/sawdust-gwt/src/main/war/game.jsp b/sawdust-gwt/src/main/war/game.jsp
index dfdfd2dc9b90720c5e5234f8df049e971d408e36..ae572d3db40af957f608c7372745a9d6b5efda47 100755
--- a/sawdust-gwt/src/main/war/game.jsp
+++ b/sawdust-gwt/src/main/war/game.jsp
@@ -3,8 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
diff --git a/sawdust-gwt/src/main/war/game_mobile.jsp b/sawdust-gwt/src/main/war/game_mobile.jsp
index d833bd70f0616a7abdffd2aa47ad0d70e6cab0ad..7c8cd46a2334678e6dac5851f2c0d8ad2b60214b 100755
--- a/sawdust-gwt/src/main/war/game_mobile.jsp
+++ b/sawdust-gwt/src/main/war/game_mobile.jsp
@@ -3,8 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
diff --git a/sawdust-gwt/src/main/war/jsp/accountHeader.jsp b/sawdust-gwt/src/main/war/jsp/accountHeader.jsp
index f784ca6119cb725d415ac64590930682c6b7ea44..8373f2691d811be72dce0e19cba9f83821c76bdc 100755
--- a/sawdust-gwt/src/main/war/jsp/accountHeader.jsp
+++ b/sawdust-gwt/src/main/war/jsp/accountHeader.jsp
@@ -7,9 +7,8 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
 
 <%@page import="java.net.URLEncoder"%>
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
+
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <c:choose>
 <c:when test="<%=false == user.isGuest()%>">
diff --git a/sawdust-gwt/src/main/war/jsp/account_info.jsp b/sawdust-gwt/src/main/war/jsp/account_info.jsp
index b054473f51e4caaaaadb5b7c4d6fd24cd9a79463..69e7f69b2c54bc2acac8944d2b64bec25f890832 100755
--- a/sawdust-gwt/src/main/war/jsp/account_info.jsp
+++ b/sawdust-gwt/src/main/war/jsp/account_info.jsp
@@ -5,8 +5,7 @@
 
 <%@ page import="com.sawdust.gae.datastore.DataStore"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
 if(user.setAccountData(request))
diff --git a/sawdust-gwt/src/main/war/jsp/activityLog.jsp b/sawdust-gwt/src/main/war/jsp/activityLog.jsp
index 19c96cab6be95b773b82a72dd61438e9778a0768..b881c40de4e4059010bae477182b6f60973aa0d0 100755
--- a/sawdust-gwt/src/main/war/jsp/activityLog.jsp
+++ b/sawdust-gwt/src/main/war/jsp/activityLog.jsp
@@ -10,10 +10,7 @@
 
 <%@page import="java.text.DateFormat"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
 String id = request.getParameter("id");
 if(null == id) id = user.getAccount().getUserId(); 
diff --git a/sawdust-gwt/src/main/war/jsp/bankLog.jsp b/sawdust-gwt/src/main/war/jsp/bankLog.jsp
index c296dc88111de344ed8fe6297546d35a09691436..8a7760cf2f30d3ea17a6bf1475790886f706f7d3 100755
--- a/sawdust-gwt/src/main/war/jsp/bankLog.jsp
+++ b/sawdust-gwt/src/main/war/jsp/bankLog.jsp
@@ -10,10 +10,7 @@
 
 <%@page import="java.text.DateFormat"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
 String id = request.getParameter("id");
 if(null == id) id = user.getAccount().getUserId(); 
diff --git a/sawdust-gwt/src/main/war/jsp/dashboard.jsp b/sawdust-gwt/src/main/war/jsp/dashboard.jsp
index be8a963b48f3347b40ac9e8d53d8ded3c1e8fa5b..496bdc9f075cd015e16e5b5ba95142f2e4151170 100755
--- a/sawdust-gwt/src/main/war/jsp/dashboard.jsp
+++ b/sawdust-gwt/src/main/war/jsp/dashboard.jsp
@@ -7,9 +7,8 @@
 <%@ page import="com.sawdust.gae.datastore.entities.Account"%>
 <%@ page import="java.net.URLEncoder"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
+
 
 <c:choose>
 <c:when test="<%=null != user.getEmail()%>">
diff --git a/sawdust-gwt/src/main/war/jsp/dataAdhoc.jsp b/sawdust-gwt/src/main/war/jsp/dataAdhoc.jsp
index 22738f7a4b3577963e92a2a811829a6e74ae33c7..d32f2bcf391c94c35dd30e131e71df391b82cf84 100755
--- a/sawdust-gwt/src/main/war/jsp/dataAdhoc.jsp
+++ b/sawdust-gwt/src/main/war/jsp/dataAdhoc.jsp
@@ -8,9 +8,7 @@
 <%@ taglib prefix="wc" tagdir="/WEB-INF/tags/webClient"%>
 
 
-<%@page import="java.text.DateFormat"%><jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
 String query = request.getParameter("query");
diff --git a/sawdust-gwt/src/main/war/jsp/dataCleanup.jsp b/sawdust-gwt/src/main/war/jsp/dataCleanup.jsp
index 91fa46004daab0811667c956da69f8435da31789..b93f00a711e91914ea7ea5191bcd771d35f4fa1f 100755
--- a/sawdust-gwt/src/main/war/jsp/dataCleanup.jsp
+++ b/sawdust-gwt/src/main/war/jsp/dataCleanup.jsp
@@ -4,7 +4,10 @@
 <%@ taglib prefix="wc" tagdir="/WEB-INF/tags/webClient"%>
 
 
-<%@page import="java.text.DateFormat"%><jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
+<%@page import="java.text.DateFormat"%>
+
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
+
 <jsp:setProperty name="user" property="request" value="<%=request%>"/>
 <jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
diff --git a/sawdust-gwt/src/main/war/jsp/gameBanner.jsp b/sawdust-gwt/src/main/war/jsp/gameBanner.jsp
index 47715ac0095f741336e7d6ed23ab53a9bf1c2fc8..e26d0390ee3859d78612852098853425bf0b0d26 100755
--- a/sawdust-gwt/src/main/war/jsp/gameBanner.jsp
+++ b/sawdust-gwt/src/main/war/jsp/gameBanner.jsp
@@ -4,9 +4,7 @@
 <%@ page import="com.sawdust.engine.model.GameType"%>
 <%@ page import="com.sawdust.gae.logic.GameTypes"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
 <div class="tabs">
diff --git a/sawdust-gwt/src/main/war/jsp/gameBanner_mobile.jsp b/sawdust-gwt/src/main/war/jsp/gameBanner_mobile.jsp
index ed0b99ccd9511121d7e4fed8661324d0121a74c5..3cfda7fc212299f87125a79ff63edd52681e2131 100755
--- a/sawdust-gwt/src/main/war/jsp/gameBanner_mobile.jsp
+++ b/sawdust-gwt/src/main/war/jsp/gameBanner_mobile.jsp
@@ -4,9 +4,7 @@
 <%@ page import="com.sawdust.engine.model.GameType"%>
 <%@ page import="com.sawdust.gae.logic.GameTypes"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
 <div class="tabs">
diff --git a/sawdust-gwt/src/main/war/jsp/gameListing.jsp b/sawdust-gwt/src/main/war/jsp/gameListing.jsp
index da1d8c4e4307910d0f458c71b55da2fa38389ec1..e0f9467d8317e8b6e77dbb7dd3644d3f164e695d 100755
--- a/sawdust-gwt/src/main/war/jsp/gameListing.jsp
+++ b/sawdust-gwt/src/main/war/jsp/gameListing.jsp
@@ -4,8 +4,7 @@
 <%@ page import="com.sawdust.engine.model.GameType"%>
 <%@ page import="com.sawdust.gae.logic.GameTypes"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
diff --git a/sawdust-gwt/src/main/war/jsp/game_body.jsp b/sawdust-gwt/src/main/war/jsp/game_body.jsp
index 1b22dfa8843fba8a82f27351bc229a2f2fdc93a4..208783b44025d75c803dfb726b6ad7c3eb0ec7d5 100755
--- a/sawdust-gwt/src/main/war/jsp/game_body.jsp
+++ b/sawdust-gwt/src/main/war/jsp/game_body.jsp
@@ -8,9 +8,7 @@
 <%@ page import="com.sawdust.engine.controller.Util"%>
 <%@ page import="com.sawdust.gae.logic.GameTypes"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty property="request" name="user" value="<%=request%>" />
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%@ page import="java.util.logging.Logger" %>
 <%
     final Logger LOG = Logger.getLogger("game_body");
diff --git a/sawdust-gwt/src/main/war/jsp/game_body_mobile.jsp b/sawdust-gwt/src/main/war/jsp/game_body_mobile.jsp
index 412a2e875e074bf2538a966dc668c3d742413b2f..69d44424475bf4213630fe6a835f6fcb599837cc 100755
--- a/sawdust-gwt/src/main/war/jsp/game_body_mobile.jsp
+++ b/sawdust-gwt/src/main/war/jsp/game_body_mobile.jsp
@@ -14,9 +14,7 @@
 <%@ page import="com.sawdust.engine.view.config.PropertyConfig"%>
 <%@ page import="com.sawdust.engine.view.config.PropertyConfig.PropertyType"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" />
-<jsp:setProperty property="request" name="user" value="<%=request%>" />
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
     String gameName = request.getParameter("game");
     GameType game = null;
@@ -31,7 +29,7 @@
     }
     boolean t1 = null != user.getEmail();
     String t2 = user.getLoginUrl();
-    GameConfig gameConfig = game.getPrototypeConfig(user.getAccount());
+    GameConfig gameConfig = game.getBaseConfig(user.getAccount());
 %>
 
 <h1><%=game.getName()%></h1>
diff --git a/sawdust-gwt/src/main/war/jsp/openGameListing.jsp b/sawdust-gwt/src/main/war/jsp/openGameListing.jsp
index 066c2238c47a527524a9f239311b75145597d1a0..f350f6b3b75b26abcd0e1369a0320385bf398114 100755
--- a/sawdust-gwt/src/main/war/jsp/openGameListing.jsp
+++ b/sawdust-gwt/src/main/war/jsp/openGameListing.jsp
@@ -5,9 +5,7 @@
 <%@ page import="java.util.ArrayList" %>
 <%@ page import="com.sawdust.gae.datastore.entities.GameSession"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" />
-<jsp:setProperty name="user" property="request" value="<%=request%>" />
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
     String showGameListing = null;
     String gameName = request.getParameter("game");
diff --git a/sawdust-gwt/src/main/war/jsp/openGameListing_mobile.jsp b/sawdust-gwt/src/main/war/jsp/openGameListing_mobile.jsp
index fdcb569333f05c64073e515f1ad6b05c436311ac..9eb179f86138d366ab69232d28f379451c515b87 100755
--- a/sawdust-gwt/src/main/war/jsp/openGameListing_mobile.jsp
+++ b/sawdust-gwt/src/main/war/jsp/openGameListing_mobile.jsp
@@ -5,9 +5,7 @@
 <%@ page import="com.sawdust.gae.datastore.entities.GameSession"%>
 <%@ page import="com.sawdust.gae.datastore.entities.Account.InterfacePreference"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" />
-<jsp:setProperty name="user" property="request" value="<%=request%>" />
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
     boolean showGameListing = true;
     String gameName = request.getParameter("game");
diff --git a/sawdust-gwt/src/main/war/jsp/play_body.jsp b/sawdust-gwt/src/main/war/jsp/play_body.jsp
index 066be2b1ffc1297e1ee327d4e5e1823a33489de9..e2242faca685df2d14162a08d071524c58ef259f 100755
--- a/sawdust-gwt/src/main/war/jsp/play_body.jsp
+++ b/sawdust-gwt/src/main/war/jsp/play_body.jsp
@@ -9,8 +9,7 @@
 <%@ page import="com.sawdust.engine.model.basetypes.GameState" %>
 <%@ page import="com.sawdust.gae.datastore.entities.Account" %>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser">
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
 	TinySession tsession = JspLib.Instance.getTinySession(request);
diff --git a/sawdust-gwt/src/main/war/jsp/play_body_mobile.jsp b/sawdust-gwt/src/main/war/jsp/play_body_mobile.jsp
index 77fcd99d656b8b65495a9656523d8121495896ed..c56003f6789942c1af67d0fa4f323e90697a7292 100755
--- a/sawdust-gwt/src/main/war/jsp/play_body_mobile.jsp
+++ b/sawdust-gwt/src/main/war/jsp/play_body_mobile.jsp
@@ -14,9 +14,7 @@
 <%@ page import="java.net.URLEncoder"%>
 <%@ page import="com.sawdust.engine.model.basetypes.GameState" %>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
     TinySession tsession = JspLib.Instance.getTinySession(request);
     boolean isSessionDefined = false;
diff --git a/sawdust-gwt/src/main/war/jsp/play_header.jsp b/sawdust-gwt/src/main/war/jsp/play_header.jsp
index 72881e21ffd481d297e4a62ecf2cc75f0de346ec..da6f4dd6a67e62e3c590bb0e7a0b7d9f451a6ad1 100755
--- a/sawdust-gwt/src/main/war/jsp/play_header.jsp
+++ b/sawdust-gwt/src/main/war/jsp/play_header.jsp
@@ -8,7 +8,7 @@
 <%@ page import="com.sawdust.gae.datastore.entities.TinySession"%>
 <%@ page import="com.sawdust.gae.datastore.entities.GameSession"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
     GameSession s = (GameSession) JspLib.Instance.loadSessionFromTinyUrlRequest(request,user);
diff --git a/sawdust-gwt/src/main/war/jsp/promotion.jsp b/sawdust-gwt/src/main/war/jsp/promotion.jsp
index 9c67ba68b5ee7859e3f89045ed5694f14dc01fa2..4461ff1a17e469c5a527679212dbe32f52598350 100755
--- a/sawdust-gwt/src/main/war/jsp/promotion.jsp
+++ b/sawdust-gwt/src/main/war/jsp/promotion.jsp
@@ -14,8 +14,7 @@
 
 <html>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser">
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <head>
     <meta http-equiv="content-type" content="text/html; charset=UTF-8">
diff --git a/sawdust-gwt/src/main/war/jsp/sessionListing.jsp b/sawdust-gwt/src/main/war/jsp/sessionListing.jsp
index f66749109c6fbfef782849c4a897c1efc5d6e70a..65e57332ebb1ec5040faf192936644f6e5307cc1 100755
--- a/sawdust-gwt/src/main/war/jsp/sessionListing.jsp
+++ b/sawdust-gwt/src/main/war/jsp/sessionListing.jsp
@@ -5,9 +5,7 @@
 <%@ page import="com.sawdust.gae.datastore.entities.GameSession"%>
 <%@ page import="com.sawdust.engine.controller.entities.GameSession.SessionStatus"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <div class="sdge-game-listing">
 <h2>Open Game Sessions:</h2>
 <%
diff --git a/sawdust-gwt/src/main/war/jsp/tutorial_body.jsp b/sawdust-gwt/src/main/war/jsp/tutorial_body.jsp
index e63b3a7e355044136b2988af764b61fe81002efa..209ee28211d4cd64f5111f38ad836d0ce06da2f9 100755
--- a/sawdust-gwt/src/main/war/jsp/tutorial_body.jsp
+++ b/sawdust-gwt/src/main/war/jsp/tutorial_body.jsp
@@ -8,9 +8,7 @@
 <%@ page import="com.sawdust.engine.controller.Util"%>
 <%@ page import="com.sawdust.gae.logic.GameTypes"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty property="request" name="user" value="<%=request%>" />
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%@ page import="java.util.logging.Logger" %>
 <%
     final Logger LOG = Logger.getLogger("game_body");
diff --git a/sawdust-gwt/src/main/war/jsp/welcome.jsp b/sawdust-gwt/src/main/war/jsp/welcome.jsp
index facb30da160119223b575c051c0b58adb78a3d0b..bab31e52eb4fe1ae76dcfa410a5a049c7e2f7421 100755
--- a/sawdust-gwt/src/main/war/jsp/welcome.jsp
+++ b/sawdust-gwt/src/main/war/jsp/welcome.jsp
@@ -7,9 +7,7 @@
 <%@ page import="com.sawdust.gae.jsp.JspLib"%>
 <%@ page import="com.sawdust.engine.model.GameType"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <h1>Welcome!</h1>
 <h2>Please choose a game:</h2>
 
diff --git a/sawdust-gwt/src/main/war/play.jsp b/sawdust-gwt/src/main/war/play.jsp
index 1b0b96f115e1ec5984fe5ef323cbf89230ea05a8..62e19c91971b32f35722359c2f62f3b63acf57d0 100755
--- a/sawdust-gwt/src/main/war/play.jsp
+++ b/sawdust-gwt/src/main/war/play.jsp
@@ -3,9 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-<jsp:setProperty name="user" property="response" value="<%=response%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <c:choose>
 	<c:when test="<%=null != user.getEmail()%>">
diff --git a/sawdust-gwt/src/main/war/quickPlay.jsp b/sawdust-gwt/src/main/war/quickPlay.jsp
index d8b4fdbc26fa9be9a0a7e3a21e482748ca5d5479..a6dcc1abe2403bdbac0cf3f40aacdc18c528338a 100755
--- a/sawdust-gwt/src/main/war/quickPlay.jsp
+++ b/sawdust-gwt/src/main/war/quickPlay.jsp
@@ -15,8 +15,7 @@
 <%@ page import="com.sawdust.engine.view.config.PropertyConfig"%>
 <%@ page import="com.sawdust.engine.view.config.PropertyConfig.PropertyType"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <%
     boolean isGameValid = true;
@@ -49,7 +48,7 @@
     
     boolean t1 = null != user.getEmail();
     String t2 = user.getLoginUrl();
-    GameConfig gameConfig = game.getPrototypeConfig(user.getAccount());
+    GameConfig gameConfig = game.getBaseConfig(user.getAccount());
     String id;
     HashSet<String> params = new HashSet<String>();
     Enumeration parameterNames = request.getParameterNames();
diff --git a/sawdust-gwt/src/main/war/rules/Blackjack.jsp b/sawdust-gwt/src/main/war/rules/Blackjack.jsp
index 75e7b32c430ee6036102c19f499d7b9448bec885..4814c1ebb4fd8455b9738703528080a4a7b64a65 100755
--- a/sawdust-gwt/src/main/war/rules/Blackjack.jsp
+++ b/sawdust-gwt/src/main/war/rules/Blackjack.jsp
@@ -3,8 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <wc:pageTemplate title="Euchre Rules">
 
diff --git a/sawdust-gwt/src/main/war/rules/Euchre.jsp b/sawdust-gwt/src/main/war/rules/Euchre.jsp
index 4210d51bb4a1875e5adad81516b9c804479e7e17..70ed96b385d183b94db482f5c29753b61f28bf0a 100755
--- a/sawdust-gwt/src/main/war/rules/Euchre.jsp
+++ b/sawdust-gwt/src/main/war/rules/Euchre.jsp
@@ -3,8 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <wc:pageTemplate title="Euchre Rules">
 
diff --git a/sawdust-gwt/src/main/war/rules/Poker.jsp b/sawdust-gwt/src/main/war/rules/Poker.jsp
index e08057019457e9d60a9917c0791a73c15da942de..ee604a65b86e5042483b0ae47b7b8ce3f0210a3b 100755
--- a/sawdust-gwt/src/main/war/rules/Poker.jsp
+++ b/sawdust-gwt/src/main/war/rules/Poker.jsp
@@ -3,8 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <wc:pageTemplate title="Euchre Rules">
 
diff --git a/sawdust-gwt/src/main/war/tinySessionId.jsp b/sawdust-gwt/src/main/war/tinySessionId.jsp
index 66b3965b1d82eee771a10e65352a8189f4f80d9c..9fc33c0efffc9b3a482d643bc47627b0af1b0d3c 100755
--- a/sawdust-gwt/src/main/war/tinySessionId.jsp
+++ b/sawdust-gwt/src/main/war/tinySessionId.jsp
@@ -15,8 +15,7 @@
 
 <%final Logger LOG = Logger.getLogger("tinySession");%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser"/>
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 
 <jsp:useBean id="requestData" class="com.sawdust.gae.jsp.JspRequestInfoBean" scope="request"/>
 
diff --git a/sawdust-gwt/src/main/war/tutorials.jsp b/sawdust-gwt/src/main/war/tutorials.jsp
index d9aa74fbd74d6505aeb0e07a3a437b7df651424e..b88d3e146918e24a650b630c3acb339f384d0df1 100755
--- a/sawdust-gwt/src/main/war/tutorials.jsp
+++ b/sawdust-gwt/src/main/war/tutorials.jsp
@@ -3,9 +3,7 @@
 <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
 <%@ page errorPage="/error.jsp"%>
 
-<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request" />
-<jsp:setProperty name="user" property="request" value="<%=request%>"/>
-
+<jsp:useBean id="user" class="com.sawdust.gae.jsp.JspUser" scope="request"/><jsp:setProperty name="user" property="request" value="<%=request%>"/><jsp:setProperty name="user" property="response" value="<%=response%>"/>
 <%
 	boolean isGameValid = true;
 	if (null == request.getParameter("game"))
-- 
1.5.6.3


